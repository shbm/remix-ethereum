{
	"id": "cc6882ead1e791b034ac9e308103e4c9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/m2/buy-nft-erc20/ShoebumxToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// Compatible with OpenZeppelin Contracts ^5.0.0\npragma solidity ^0.8.22;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable2Step.sol\";\n\ncontract ShoebumxToken is ERC20, Ownable {\n    uint256 INITIAL_SUPPLY = 1_000_000 * (10 ** decimals());\n    uint256 public constant TOKENS_PER_ETH = 100 * 10**18; // 50 tokens per ETH\n\n    constructor() ERC20(\"ShoebumxToken\", \"SBX\") Ownable(msg.sender) {\n        _mint(msg.sender, INITIAL_SUPPLY);\n    }\n\n    function mint(address to, uint256 amount) public onlyOwner {\n        _mint(to, amount * (10 ** decimals()));\n    }\n\n    function buyTokens() external payable {\n        require(msg.value >= 0.1 ether, \"Minimum purchase is 0.1 ETH\");\n        \n        // Calculate tokens to mint (10 tokens per 0.2 ETH)\n        uint256 tokensToMint = (msg.value * TOKENS_PER_ETH);\n        _mint(msg.sender, tokensToMint);\n    }\n    \n    // Allow owner to withdraw accumulated ETH\n    function withdrawETH() external onlyOwner {\n        uint256 balance = address(this).balance;\n        require(balance > 0, \"No ETH to withdraw\");\n\n        (bool success, ) = owner().call{value: balance}(\"\");\n        require(success, \"ETH withdrawal failed\");\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable2Step.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/Ownable2Step.sol)\n\npragma solidity ^0.8.20;\n\nimport {Ownable} from \"./Ownable.sol\";\n\n/**\n * @dev Contract module which provides access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * This extension of the {Ownable} contract includes a two-step mechanism to transfer\n * ownership, where the new owner must call {acceptOwnership} in order to replace the\n * old one. This can help prevent common mistakes, such as transfers of ownership to\n * incorrect accounts, or to contracts that are unable to interact with the\n * permission system.\n *\n * The initial owner is specified at deployment time in the constructor for `Ownable`. This\n * can later be changed with {transferOwnership} and {acceptOwnership}.\n *\n * This module is used through inheritance. It will make available all functions\n * from parent (Ownable).\n */\nabstract contract Ownable2Step is Ownable {\n    address private _pendingOwner;\n\n    event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Returns the address of the pending owner.\n     */\n    function pendingOwner() public view virtual returns (address) {\n        return _pendingOwner;\n    }\n\n    /**\n     * @dev Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one.\n     * Can only be called by the current owner.\n     *\n     * Setting `newOwner` to the zero address is allowed; this can be used to cancel an initiated ownership transfer.\n     */\n    function transferOwnership(address newOwner) public virtual override onlyOwner {\n        _pendingOwner = newOwner;\n        emit OwnershipTransferStarted(owner(), newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner.\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual override {\n        delete _pendingOwner;\n        super._transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev The new owner accepts the ownership transfer.\n     */\n    function acceptOwnership() public virtual {\n        address sender = _msgSender();\n        if (pendingOwner() != sender) {\n            revert OwnableUnauthorizedAccount(sender);\n        }\n        _transferOwnership(sender);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/Ownable2Step.sol": {
				"Ownable2Step": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferStarted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pendingOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. This extension of the {Ownable} contract includes a two-step mechanism to transfer ownership, where the new owner must call {acceptOwnership} in order to replace the old one. This can help prevent common mistakes, such as transfers of ownership to incorrect accounts, or to contracts that are unable to interact with the permission system. The initial owner is specified at deployment time in the constructor for `Ownable`. This can later be changed with {transferOwnership} and {acceptOwnership}. This module is used through inheritance. It will make available all functions from parent (Ownable).",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"acceptOwnership()": {
								"details": "The new owner accepts the ownership transfer."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"pendingOwner()": {
								"details": "Returns the address of the pending owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner. Setting `newOwner` to the zero address is allowed; this can be used to cancel an initiated ownership transfer."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"owner()": "8da5cb5b",
							"pendingOwner()": "e30c3978",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. This extension of the {Ownable} contract includes a two-step mechanism to transfer ownership, where the new owner must call {acceptOwnership} in order to replace the old one. This can help prevent common mistakes, such as transfers of ownership to incorrect accounts, or to contracts that are unable to interact with the permission system. The initial owner is specified at deployment time in the constructor for `Ownable`. This can later be changed with {transferOwnership} and {acceptOwnership}. This module is used through inheritance. It will make available all functions from parent (Ownable).\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner. Setting `newOwner` to the zero address is allowed; this can be used to cancel an initiated ownership transfer.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable2Step.sol\":\"Ownable2Step\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/access/Ownable2Step.sol\":{\"keccak256\":\"0xdcad8898fda432696597752e8ec361b87d85c82cb258115427af006dacf7128c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2c9d517f0c136d54bd00cd57959d25681d4d6273f5bbbc263afe228303772f0\",\"dweb:/ipfs/QmReNFjXBiufByiAAzfSQ2SM5r3qeUErn46BmN3yVRvrek\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable2Step.sol:Ownable2Step",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 156,
								"contract": "@openzeppelin/contracts/access/Ownable2Step.sol:Ownable2Step",
								"label": "_pendingOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 393,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 399,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 401,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 403,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 405,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/m2/buy-nft-erc20/ShoebumxToken.sol": {
				"ShoebumxToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "TOKENS_PER_ETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "buyTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawETH",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":222:1261  contract ShoebumxToken is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":313:323  decimals() */\n  tag_1\n    /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":313:321  decimals */\n  shl(0x20, tag_2)\n    /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":313:323  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_1:\n    /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":307:309  10 */\n  0x0a\n    /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":307:323  10 ** decimals() */\n  tag_3\n  swap2\n  swap1\n  tag_4\n  jump\t// in\ntag_3:\n    /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":294:303  1_000_000 */\n  0x0f4240\n    /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":294:324  1_000_000 * (10 ** decimals()) */\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n    /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":269:324  uint256 INITIAL_SUPPLY = 1_000_000 * (10 ** decimals()) */\n  0x06\n  sstore\n    /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":411:525  constructor() ERC20(\"ShoebumxToken\", \"SBX\") Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_7\n  jumpi\n  0x00\n  dup1\n  revert\ntag_7:\n  pop\n    /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":463:473  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0d\n  dup2\n  mstore\n  0x20\n  add\n  0x53686f6562756d78546f6b656e00000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x5342580000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_14\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_14:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_16\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_17\n  swap2\n  swap1\n  tag_18\n  jump\t// in\ntag_17:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_19\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_20)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_19:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":485:518  _mint(msg.sender, INITIAL_SUPPLY) */\n  tag_22\n    /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":491:501  msg.sender */\n  caller\n    /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":503:517  INITIAL_SUPPLY */\n  sload(0x06)\n    /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":485:490  _mint */\n  shl(0x20, tag_23)\n    /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":485:518  _mint(msg.sender, INITIAL_SUPPLY) */\n  0x20\n  shr\n  jump\t// in\ntag_22:\n    /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":222:1261  contract ShoebumxToken is ERC20, Ownable {... */\n  jump(tag_24)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n  0x12\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_20:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\ntag_23:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n  tag_28\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_29\n  swap2\n  swap1\n  tag_18\n  jump\t// in\ntag_29:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\ntag_28:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  tag_30\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n  shl(0x20, tag_31)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_30:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_31:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_33\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_34\n  swap2\n  swap1\n  tag_35\n  jump\t// in\ntag_34:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  jump(tag_36)\ntag_33:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n  iszero\n  tag_37\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_38\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_39\n  jump\t// in\ntag_38:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\ntag_37:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\ntag_36:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  tag_40\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  jump(tag_41)\ntag_40:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\ntag_41:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  mload(0x40)\n  tag_42\n  swap2\n  swap1\n  tag_43\n  jump\t// in\ntag_42:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:187   */\ntag_44:\n    /* \"#utility.yul\":55:132   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":52:53   */\n  0x00\n    /* \"#utility.yul\":45:133   */\n  mstore\n    /* \"#utility.yul\":152:156   */\n  0x11\n    /* \"#utility.yul\":149:150   */\n  0x04\n    /* \"#utility.yul\":142:157   */\n  mstore\n    /* \"#utility.yul\":176:180   */\n  0x24\n    /* \"#utility.yul\":173:174   */\n  0x00\n    /* \"#utility.yul\":166:181   */\n  revert\n    /* \"#utility.yul\":193:295   */\ntag_45:\n    /* \"#utility.yul\":235:243   */\n  0x00\n    /* \"#utility.yul\":282:287   */\n  dup2\n    /* \"#utility.yul\":279:280   */\n  0x01\n    /* \"#utility.yul\":275:288   */\n  shr\n    /* \"#utility.yul\":254:288   */\n  swap1\n  pop\n    /* \"#utility.yul\":193:295   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":301:1149   */\ntag_46:\n    /* \"#utility.yul\":362:367   */\n  0x00\n    /* \"#utility.yul\":369:373   */\n  dup1\n    /* \"#utility.yul\":393:399   */\n  dup3\n    /* \"#utility.yul\":384:399   */\n  swap2\n  pop\n    /* \"#utility.yul\":417:422   */\n  dup4\n    /* \"#utility.yul\":408:422   */\n  swap1\n  pop\n    /* \"#utility.yul\":431:1143   */\ntag_77:\n    /* \"#utility.yul\":452:453   */\n  0x01\n    /* \"#utility.yul\":442:450   */\n  dup6\n    /* \"#utility.yul\":439:454   */\n  gt\n    /* \"#utility.yul\":431:1143   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":547:551   */\n  dup1\n    /* \"#utility.yul\":542:545   */\n  dup7\n    /* \"#utility.yul\":538:552   */\n  div\n    /* \"#utility.yul\":532:536   */\n  dup2\n    /* \"#utility.yul\":529:553   */\n  gt\n    /* \"#utility.yul\":526:576   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":556:574   */\n  tag_81\n  tag_44\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":526:576   */\ntag_80:\n    /* \"#utility.yul\":606:607   */\n  0x01\n    /* \"#utility.yul\":596:604   */\n  dup6\n    /* \"#utility.yul\":592:608   */\n  and\n    /* \"#utility.yul\":589:1040   */\n  iszero\n  tag_82\n  jumpi\n    /* \"#utility.yul\":1021:1025   */\n  dup1\n    /* \"#utility.yul\":1014:1019   */\n  dup3\n    /* \"#utility.yul\":1010:1026   */\n  mul\n    /* \"#utility.yul\":1001:1026   */\n  swap2\n  pop\n    /* \"#utility.yul\":589:1040   */\ntag_82:\n    /* \"#utility.yul\":1071:1075   */\n  dup1\n    /* \"#utility.yul\":1065:1069   */\n  dup2\n    /* \"#utility.yul\":1061:1076   */\n  mul\n    /* \"#utility.yul\":1053:1076   */\n  swap1\n  pop\n    /* \"#utility.yul\":1101:1133   */\n  tag_83\n    /* \"#utility.yul\":1124:1132   */\n  dup6\n    /* \"#utility.yul\":1101:1133   */\n  tag_45\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":1089:1133   */\n  swap5\n  pop\n    /* \"#utility.yul\":431:1143   */\n  jump(tag_77)\ntag_79:\n    /* \"#utility.yul\":301:1149   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1155:2228   */\ntag_47:\n    /* \"#utility.yul\":1209:1214   */\n  0x00\n    /* \"#utility.yul\":1400:1408   */\n  dup3\n    /* \"#utility.yul\":1390:1430   */\n  tag_85\n  jumpi\n    /* \"#utility.yul\":1421:1422   */\n  0x01\n    /* \"#utility.yul\":1412:1422   */\n  swap1\n  pop\n    /* \"#utility.yul\":1423:1428   */\n  jump(tag_84)\n    /* \"#utility.yul\":1390:1430   */\ntag_85:\n    /* \"#utility.yul\":1449:1453   */\n  dup2\n    /* \"#utility.yul\":1439:1475   */\n  tag_86\n  jumpi\n    /* \"#utility.yul\":1466:1467   */\n  0x00\n    /* \"#utility.yul\":1457:1467   */\n  swap1\n  pop\n    /* \"#utility.yul\":1468:1473   */\n  jump(tag_84)\n    /* \"#utility.yul\":1439:1475   */\ntag_86:\n    /* \"#utility.yul\":1535:1539   */\n  dup2\n    /* \"#utility.yul\":1583:1584   */\n  0x01\n    /* \"#utility.yul\":1578:1605   */\n  dup2\n  eq\n  tag_88\n  jumpi\n    /* \"#utility.yul\":1619:1620   */\n  0x02\n    /* \"#utility.yul\":1614:1805   */\n  dup2\n  eq\n  tag_89\n  jumpi\n    /* \"#utility.yul\":1528:1805   */\n  jump(tag_87)\n    /* \"#utility.yul\":1578:1605   */\ntag_88:\n    /* \"#utility.yul\":1596:1597   */\n  0x01\n    /* \"#utility.yul\":1587:1597   */\n  swap2\n  pop\n    /* \"#utility.yul\":1598:1603   */\n  pop\n  jump(tag_84)\n    /* \"#utility.yul\":1614:1805   */\ntag_89:\n    /* \"#utility.yul\":1659:1662   */\n  0xff\n    /* \"#utility.yul\":1649:1657   */\n  dup5\n    /* \"#utility.yul\":1646:1663   */\n  gt\n    /* \"#utility.yul\":1643:1686   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":1666:1684   */\n  tag_91\n  tag_44\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":1643:1686   */\ntag_90:\n    /* \"#utility.yul\":1715:1723   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  0x02\n    /* \"#utility.yul\":1708:1724   */\n  exp\n    /* \"#utility.yul\":1699:1724   */\n  swap2\n  pop\n    /* \"#utility.yul\":1750:1753   */\n  dup5\n    /* \"#utility.yul\":1743:1748   */\n  dup3\n    /* \"#utility.yul\":1740:1754   */\n  gt\n    /* \"#utility.yul\":1737:1777   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":1757:1775   */\n  tag_93\n  tag_44\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":1737:1777   */\ntag_92:\n    /* \"#utility.yul\":1790:1795   */\n  pop\n  jump(tag_84)\n    /* \"#utility.yul\":1528:1805   */\ntag_87:\n  pop\n    /* \"#utility.yul\":1914:1916   */\n  0x20\n    /* \"#utility.yul\":1904:1912   */\n  dup4\n    /* \"#utility.yul\":1901:1917   */\n  lt\n    /* \"#utility.yul\":1895:1898   */\n  0x0133\n    /* \"#utility.yul\":1889:1893   */\n  dup4\n    /* \"#utility.yul\":1886:1899   */\n  lt\n    /* \"#utility.yul\":1882:1918   */\n  and\n    /* \"#utility.yul\":1864:1866   */\n  0x4e\n    /* \"#utility.yul\":1854:1862   */\n  dup5\n    /* \"#utility.yul\":1851:1867   */\n  lt\n    /* \"#utility.yul\":1846:1848   */\n  0x0b\n    /* \"#utility.yul\":1840:1844   */\n  dup5\n    /* \"#utility.yul\":1837:1849   */\n  lt\n    /* \"#utility.yul\":1833:1868   */\n  and\n    /* \"#utility.yul\":1817:1928   */\n  or\n    /* \"#utility.yul\":1814:2060   */\n  iszero\n  tag_94\n  jumpi\n    /* \"#utility.yul\":1970:1978   */\n  dup3\n    /* \"#utility.yul\":1964:1968   */\n  dup3\n    /* \"#utility.yul\":1960:1979   */\n  exp\n    /* \"#utility.yul\":1951:1979   */\n  swap1\n  pop\n    /* \"#utility.yul\":2005:2008   */\n  dup4\n    /* \"#utility.yul\":1998:2003   */\n  dup2\n    /* \"#utility.yul\":1995:2009   */\n  gt\n    /* \"#utility.yul\":1992:2032   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":2012:2030   */\n  tag_96\n  tag_44\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":1992:2032   */\ntag_95:\n    /* \"#utility.yul\":2045:2050   */\n  jump(tag_84)\n    /* \"#utility.yul\":1814:2060   */\ntag_94:\n    /* \"#utility.yul\":2085:2127   */\n  tag_97\n    /* \"#utility.yul\":2123:2126   */\n  dup5\n    /* \"#utility.yul\":2113:2121   */\n  dup5\n    /* \"#utility.yul\":2107:2111   */\n  dup5\n    /* \"#utility.yul\":2104:2105   */\n  0x01\n    /* \"#utility.yul\":2085:2127   */\n  tag_46\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":2070:2127   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":2159:2163   */\n  dup2\n    /* \"#utility.yul\":2154:2157   */\n  dup5\n    /* \"#utility.yul\":2150:2164   */\n  div\n    /* \"#utility.yul\":2143:2148   */\n  dup2\n    /* \"#utility.yul\":2140:2165   */\n  gt\n    /* \"#utility.yul\":2137:2188   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":2168:2186   */\n  tag_99\n  tag_44\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":2137:2188   */\ntag_98:\n    /* \"#utility.yul\":2217:2221   */\n  dup2\n    /* \"#utility.yul\":2210:2215   */\n  dup2\n    /* \"#utility.yul\":2206:2222   */\n  mul\n    /* \"#utility.yul\":2197:2222   */\n  swap1\n  pop\n    /* \"#utility.yul\":1155:2228   */\ntag_84:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2234:2311   */\ntag_48:\n    /* \"#utility.yul\":2271:2278   */\n  0x00\n    /* \"#utility.yul\":2300:2305   */\n  dup2\n    /* \"#utility.yul\":2289:2305   */\n  swap1\n  pop\n    /* \"#utility.yul\":2234:2311   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2317:2403   */\ntag_49:\n    /* \"#utility.yul\":2352:2359   */\n  0x00\n    /* \"#utility.yul\":2392:2396   */\n  0xff\n    /* \"#utility.yul\":2385:2390   */\n  dup3\n    /* \"#utility.yul\":2381:2397   */\n  and\n    /* \"#utility.yul\":2370:2397   */\n  swap1\n  pop\n    /* \"#utility.yul\":2317:2403   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2409:2690   */\ntag_4:\n    /* \"#utility.yul\":2467:2472   */\n  0x00\n    /* \"#utility.yul\":2491:2514   */\n  tag_103\n    /* \"#utility.yul\":2509:2513   */\n  dup3\n    /* \"#utility.yul\":2491:2514   */\n  tag_48\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":2483:2514   */\n  swap2\n  pop\n    /* \"#utility.yul\":2535:2560   */\n  tag_104\n    /* \"#utility.yul\":2551:2559   */\n  dup4\n    /* \"#utility.yul\":2535:2560   */\n  tag_49\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":2523:2560   */\n  swap3\n  pop\n    /* \"#utility.yul\":2579:2683   */\n  tag_105\n    /* \"#utility.yul\":2616:2682   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2606:2614   */\n  dup5\n    /* \"#utility.yul\":2600:2604   */\n  dup5\n    /* \"#utility.yul\":2579:2683   */\n  tag_47\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":2570:2683   */\n  swap1\n  pop\n    /* \"#utility.yul\":2409:2690   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2696:3106   */\ntag_6:\n    /* \"#utility.yul\":2736:2743   */\n  0x00\n    /* \"#utility.yul\":2759:2779   */\n  tag_107\n    /* \"#utility.yul\":2777:2778   */\n  dup3\n    /* \"#utility.yul\":2759:2779   */\n  tag_48\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":2754:2779   */\n  swap2\n  pop\n    /* \"#utility.yul\":2793:2813   */\n  tag_108\n    /* \"#utility.yul\":2811:2812   */\n  dup4\n    /* \"#utility.yul\":2793:2813   */\n  tag_48\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":2788:2813   */\n  swap3\n  pop\n    /* \"#utility.yul\":2848:2849   */\n  dup3\n    /* \"#utility.yul\":2845:2846   */\n  dup3\n    /* \"#utility.yul\":2841:2850   */\n  mul\n    /* \"#utility.yul\":2870:2900   */\n  tag_109\n    /* \"#utility.yul\":2888:2899   */\n  dup2\n    /* \"#utility.yul\":2870:2900   */\n  tag_48\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":2859:2900   */\n  swap2\n  pop\n    /* \"#utility.yul\":3049:3050   */\n  dup3\n    /* \"#utility.yul\":3040:3047   */\n  dup3\n    /* \"#utility.yul\":3036:3051   */\n  div\n    /* \"#utility.yul\":3033:3034   */\n  dup5\n    /* \"#utility.yul\":3030:3052   */\n  eq\n    /* \"#utility.yul\":3010:3011   */\n  dup4\n    /* \"#utility.yul\":3003:3012   */\n  iszero\n    /* \"#utility.yul\":2983:3066   */\n  or\n    /* \"#utility.yul\":2960:3099   */\n  tag_110\n  jumpi\n    /* \"#utility.yul\":3079:3097   */\n  tag_111\n  tag_44\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":2960:3099   */\ntag_110:\n    /* \"#utility.yul\":2744:3106   */\n  pop\n    /* \"#utility.yul\":2696:3106   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3112:3211   */\ntag_50:\n    /* \"#utility.yul\":3164:3170   */\n  0x00\n    /* \"#utility.yul\":3198:3203   */\n  dup2\n    /* \"#utility.yul\":3192:3204   */\n  mload\n    /* \"#utility.yul\":3182:3204   */\n  swap1\n  pop\n    /* \"#utility.yul\":3112:3211   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3217:3397   */\ntag_51:\n    /* \"#utility.yul\":3265:3342   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3262:3263   */\n  0x00\n    /* \"#utility.yul\":3255:3343   */\n  mstore\n    /* \"#utility.yul\":3362:3366   */\n  0x41\n    /* \"#utility.yul\":3359:3360   */\n  0x04\n    /* \"#utility.yul\":3352:3367   */\n  mstore\n    /* \"#utility.yul\":3386:3390   */\n  0x24\n    /* \"#utility.yul\":3383:3384   */\n  0x00\n    /* \"#utility.yul\":3376:3391   */\n  revert\n    /* \"#utility.yul\":3403:3583   */\ntag_52:\n    /* \"#utility.yul\":3451:3528   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3448:3449   */\n  0x00\n    /* \"#utility.yul\":3441:3529   */\n  mstore\n    /* \"#utility.yul\":3548:3552   */\n  0x22\n    /* \"#utility.yul\":3545:3546   */\n  0x04\n    /* \"#utility.yul\":3538:3553   */\n  mstore\n    /* \"#utility.yul\":3572:3576   */\n  0x24\n    /* \"#utility.yul\":3569:3570   */\n  0x00\n    /* \"#utility.yul\":3562:3577   */\n  revert\n    /* \"#utility.yul\":3589:3909   */\ntag_53:\n    /* \"#utility.yul\":3633:3639   */\n  0x00\n    /* \"#utility.yul\":3670:3671   */\n  0x02\n    /* \"#utility.yul\":3664:3668   */\n  dup3\n    /* \"#utility.yul\":3660:3672   */\n  div\n    /* \"#utility.yul\":3650:3672   */\n  swap1\n  pop\n    /* \"#utility.yul\":3717:3718   */\n  0x01\n    /* \"#utility.yul\":3711:3715   */\n  dup3\n    /* \"#utility.yul\":3707:3719   */\n  and\n    /* \"#utility.yul\":3738:3756   */\n  dup1\n    /* \"#utility.yul\":3728:3809   */\n  tag_116\n  jumpi\n    /* \"#utility.yul\":3794:3798   */\n  0x7f\n    /* \"#utility.yul\":3786:3792   */\n  dup3\n    /* \"#utility.yul\":3782:3799   */\n  and\n    /* \"#utility.yul\":3772:3799   */\n  swap2\n  pop\n    /* \"#utility.yul\":3728:3809   */\ntag_116:\n    /* \"#utility.yul\":3856:3858   */\n  0x20\n    /* \"#utility.yul\":3848:3854   */\n  dup3\n    /* \"#utility.yul\":3845:3859   */\n  lt\n    /* \"#utility.yul\":3825:3843   */\n  dup2\n    /* \"#utility.yul\":3822:3860   */\n  sub\n    /* \"#utility.yul\":3819:3903   */\n  tag_117\n  jumpi\n    /* \"#utility.yul\":3875:3893   */\n  tag_118\n  tag_52\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":3819:3903   */\ntag_117:\n    /* \"#utility.yul\":3640:3909   */\n  pop\n    /* \"#utility.yul\":3589:3909   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3915:4056   */\ntag_54:\n    /* \"#utility.yul\":3964:3968   */\n  0x00\n    /* \"#utility.yul\":3987:3990   */\n  dup2\n    /* \"#utility.yul\":3979:3990   */\n  swap1\n  pop\n    /* \"#utility.yul\":4010:4013   */\n  dup2\n    /* \"#utility.yul\":4007:4008   */\n  0x00\n    /* \"#utility.yul\":4000:4014   */\n  mstore\n    /* \"#utility.yul\":4044:4048   */\n  0x20\n    /* \"#utility.yul\":4041:4042   */\n  0x00\n    /* \"#utility.yul\":4031:4049   */\n  keccak256\n    /* \"#utility.yul\":4023:4049   */\n  swap1\n  pop\n    /* \"#utility.yul\":3915:4056   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4062:4155   */\ntag_55:\n    /* \"#utility.yul\":4099:4105   */\n  0x00\n    /* \"#utility.yul\":4146:4148   */\n  0x20\n    /* \"#utility.yul\":4141:4143   */\n  0x1f\n    /* \"#utility.yul\":4134:4139   */\n  dup4\n    /* \"#utility.yul\":4130:4144   */\n  add\n    /* \"#utility.yul\":4126:4149   */\n  div\n    /* \"#utility.yul\":4116:4149   */\n  swap1\n  pop\n    /* \"#utility.yul\":4062:4155   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4161:4268   */\ntag_56:\n    /* \"#utility.yul\":4205:4213   */\n  0x00\n    /* \"#utility.yul\":4255:4260   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup3\n    /* \"#utility.yul\":4245:4261   */\n  shl\n    /* \"#utility.yul\":4224:4261   */\n  swap1\n  pop\n    /* \"#utility.yul\":4161:4268   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4274:4667   */\ntag_57:\n    /* \"#utility.yul\":4343:4349   */\n  0x00\n    /* \"#utility.yul\":4393:4394   */\n  0x08\n    /* \"#utility.yul\":4381:4391   */\n  dup4\n    /* \"#utility.yul\":4377:4395   */\n  mul\n    /* \"#utility.yul\":4416:4513   */\n  tag_123\n    /* \"#utility.yul\":4446:4512   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4435:4444   */\n  dup3\n    /* \"#utility.yul\":4416:4513   */\n  tag_56\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":4534:4573   */\n  tag_124\n    /* \"#utility.yul\":4564:4572   */\n  dup7\n    /* \"#utility.yul\":4553:4562   */\n  dup4\n    /* \"#utility.yul\":4534:4573   */\n  tag_56\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":4522:4573   */\n  swap6\n  pop\n    /* \"#utility.yul\":4606:4610   */\n  dup1\n    /* \"#utility.yul\":4602:4611   */\n  not\n    /* \"#utility.yul\":4595:4600   */\n  dup5\n    /* \"#utility.yul\":4591:4612   */\n  and\n    /* \"#utility.yul\":4582:4612   */\n  swap4\n  pop\n    /* \"#utility.yul\":4655:4659   */\n  dup1\n    /* \"#utility.yul\":4645:4653   */\n  dup7\n    /* \"#utility.yul\":4641:4660   */\n  and\n    /* \"#utility.yul\":4634:4639   */\n  dup5\n    /* \"#utility.yul\":4631:4661   */\n  or\n    /* \"#utility.yul\":4621:4661   */\n  swap3\n  pop\n    /* \"#utility.yul\":4350:4667   */\n  pop\n  pop\n    /* \"#utility.yul\":4274:4667   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4673:4733   */\ntag_58:\n    /* \"#utility.yul\":4701:4704   */\n  0x00\n    /* \"#utility.yul\":4722:4727   */\n  dup2\n    /* \"#utility.yul\":4715:4727   */\n  swap1\n  pop\n    /* \"#utility.yul\":4673:4733   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4739:4881   */\ntag_59:\n    /* \"#utility.yul\":4789:4798   */\n  0x00\n    /* \"#utility.yul\":4822:4875   */\n  tag_127\n    /* \"#utility.yul\":4840:4874   */\n  tag_128\n    /* \"#utility.yul\":4849:4873   */\n  tag_129\n    /* \"#utility.yul\":4867:4872   */\n  dup5\n    /* \"#utility.yul\":4849:4873   */\n  tag_48\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":4840:4874   */\n  tag_58\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":4822:4875   */\n  tag_48\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":4809:4875   */\n  swap1\n  pop\n    /* \"#utility.yul\":4739:4881   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4887:4962   */\ntag_60:\n    /* \"#utility.yul\":4930:4933   */\n  0x00\n    /* \"#utility.yul\":4951:4956   */\n  dup2\n    /* \"#utility.yul\":4944:4956   */\n  swap1\n  pop\n    /* \"#utility.yul\":4887:4962   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4968:5237   */\ntag_61:\n    /* \"#utility.yul\":5078:5117   */\n  tag_132\n    /* \"#utility.yul\":5109:5116   */\n  dup4\n    /* \"#utility.yul\":5078:5117   */\n  tag_59\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":5139:5230   */\n  tag_133\n    /* \"#utility.yul\":5188:5229   */\n  tag_134\n    /* \"#utility.yul\":5212:5228   */\n  dup3\n    /* \"#utility.yul\":5188:5229   */\n  tag_60\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":5180:5186   */\n  dup5\n    /* \"#utility.yul\":5173:5177   */\n  dup5\n    /* \"#utility.yul\":5167:5178   */\n  sload\n    /* \"#utility.yul\":5139:5230   */\n  tag_57\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":5133:5137   */\n  dup3\n    /* \"#utility.yul\":5126:5231   */\n  sstore\n    /* \"#utility.yul\":5044:5237   */\n  pop\n    /* \"#utility.yul\":4968:5237   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5243:5316   */\ntag_62:\n    /* \"#utility.yul\":5288:5291   */\n  0x00\n    /* \"#utility.yul\":5243:5316   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5322:5511   */\ntag_63:\n    /* \"#utility.yul\":5399:5431   */\n  tag_137\n  tag_62\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":5440:5505   */\n  tag_138\n    /* \"#utility.yul\":5498:5504   */\n  dup2\n    /* \"#utility.yul\":5490:5496   */\n  dup5\n    /* \"#utility.yul\":5484:5488   */\n  dup5\n    /* \"#utility.yul\":5440:5505   */\n  tag_61\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":5375:5511   */\n  pop\n    /* \"#utility.yul\":5322:5511   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5517:5703   */\ntag_64:\n    /* \"#utility.yul\":5577:5697   */\ntag_140:\n    /* \"#utility.yul\":5594:5597   */\n  dup2\n    /* \"#utility.yul\":5587:5592   */\n  dup2\n    /* \"#utility.yul\":5584:5598   */\n  lt\n    /* \"#utility.yul\":5577:5697   */\n  iszero\n  tag_142\n  jumpi\n    /* \"#utility.yul\":5648:5687   */\n  tag_143\n    /* \"#utility.yul\":5685:5686   */\n  0x00\n    /* \"#utility.yul\":5678:5683   */\n  dup3\n    /* \"#utility.yul\":5648:5687   */\n  tag_63\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":5621:5622   */\n  0x01\n    /* \"#utility.yul\":5614:5619   */\n  dup2\n    /* \"#utility.yul\":5610:5623   */\n  add\n    /* \"#utility.yul\":5601:5623   */\n  swap1\n  pop\n    /* \"#utility.yul\":5577:5697   */\n  jump(tag_140)\ntag_142:\n    /* \"#utility.yul\":5517:5703   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5709:6252   */\ntag_65:\n    /* \"#utility.yul\":5810:5812   */\n  0x1f\n    /* \"#utility.yul\":5805:5808   */\n  dup3\n    /* \"#utility.yul\":5802:5813   */\n  gt\n    /* \"#utility.yul\":5799:6245   */\n  iszero\n  tag_145\n  jumpi\n    /* \"#utility.yul\":5844:5882   */\n  tag_146\n    /* \"#utility.yul\":5876:5881   */\n  dup2\n    /* \"#utility.yul\":5844:5882   */\n  tag_54\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":5928:5957   */\n  tag_147\n    /* \"#utility.yul\":5946:5956   */\n  dup5\n    /* \"#utility.yul\":5928:5957   */\n  tag_55\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":5918:5926   */\n  dup2\n    /* \"#utility.yul\":5914:5958   */\n  add\n    /* \"#utility.yul\":6111:6113   */\n  0x20\n    /* \"#utility.yul\":6099:6109   */\n  dup6\n    /* \"#utility.yul\":6096:6114   */\n  lt\n    /* \"#utility.yul\":6093:6142   */\n  iszero\n  tag_148\n  jumpi\n    /* \"#utility.yul\":6132:6140   */\n  dup2\n    /* \"#utility.yul\":6117:6140   */\n  swap1\n  pop\n    /* \"#utility.yul\":6093:6142   */\ntag_148:\n    /* \"#utility.yul\":6155:6235   */\n  tag_149\n    /* \"#utility.yul\":6211:6233   */\n  tag_150\n    /* \"#utility.yul\":6229:6232   */\n  dup6\n    /* \"#utility.yul\":6211:6233   */\n  tag_55\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":6201:6209   */\n  dup4\n    /* \"#utility.yul\":6197:6234   */\n  add\n    /* \"#utility.yul\":6184:6195   */\n  dup3\n    /* \"#utility.yul\":6155:6235   */\n  tag_64\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":5814:6245   */\n  pop\n  pop\n    /* \"#utility.yul\":5799:6245   */\ntag_145:\n    /* \"#utility.yul\":5709:6252   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6258:6375   */\ntag_66:\n    /* \"#utility.yul\":6312:6320   */\n  0x00\n    /* \"#utility.yul\":6362:6367   */\n  dup3\n    /* \"#utility.yul\":6356:6360   */\n  dup3\n    /* \"#utility.yul\":6352:6368   */\n  shr\n    /* \"#utility.yul\":6331:6368   */\n  swap1\n  pop\n    /* \"#utility.yul\":6258:6375   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6381:6550   */\ntag_67:\n    /* \"#utility.yul\":6425:6431   */\n  0x00\n    /* \"#utility.yul\":6458:6509   */\n  tag_153\n    /* \"#utility.yul\":6506:6507   */\n  0x00\n    /* \"#utility.yul\":6502:6508   */\n  not\n    /* \"#utility.yul\":6494:6499   */\n  dup5\n    /* \"#utility.yul\":6491:6492   */\n  0x08\n    /* \"#utility.yul\":6487:6500   */\n  mul\n    /* \"#utility.yul\":6458:6509   */\n  tag_66\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":6454:6510   */\n  not\n    /* \"#utility.yul\":6539:6543   */\n  dup1\n    /* \"#utility.yul\":6533:6537   */\n  dup4\n    /* \"#utility.yul\":6529:6544   */\n  and\n    /* \"#utility.yul\":6519:6544   */\n  swap2\n  pop\n    /* \"#utility.yul\":6432:6550   */\n  pop\n    /* \"#utility.yul\":6381:6550   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6555:6850   */\ntag_68:\n    /* \"#utility.yul\":6631:6635   */\n  0x00\n    /* \"#utility.yul\":6777:6806   */\n  tag_155\n    /* \"#utility.yul\":6802:6805   */\n  dup4\n    /* \"#utility.yul\":6796:6800   */\n  dup4\n    /* \"#utility.yul\":6777:6806   */\n  tag_67\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":6769:6806   */\n  swap2\n  pop\n    /* \"#utility.yul\":6839:6842   */\n  dup3\n    /* \"#utility.yul\":6836:6837   */\n  0x02\n    /* \"#utility.yul\":6832:6843   */\n  mul\n    /* \"#utility.yul\":6826:6830   */\n  dup3\n    /* \"#utility.yul\":6823:6844   */\n  or\n    /* \"#utility.yul\":6815:6844   */\n  swap1\n  pop\n    /* \"#utility.yul\":6555:6850   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6855:8250   */\ntag_13:\n    /* \"#utility.yul\":6972:7009   */\n  tag_157\n    /* \"#utility.yul\":7005:7008   */\n  dup3\n    /* \"#utility.yul\":6972:7009   */\n  tag_50\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":7074:7092   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7066:7072   */\n  dup2\n    /* \"#utility.yul\":7063:7093   */\n  gt\n    /* \"#utility.yul\":7060:7116   */\n  iszero\n  tag_158\n  jumpi\n    /* \"#utility.yul\":7096:7114   */\n  tag_159\n  tag_51\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":7060:7116   */\ntag_158:\n    /* \"#utility.yul\":7140:7178   */\n  tag_160\n    /* \"#utility.yul\":7172:7176   */\n  dup3\n    /* \"#utility.yul\":7166:7177   */\n  sload\n    /* \"#utility.yul\":7140:7178   */\n  tag_53\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":7225:7292   */\n  tag_161\n    /* \"#utility.yul\":7285:7291   */\n  dup3\n    /* \"#utility.yul\":7277:7283   */\n  dup3\n    /* \"#utility.yul\":7271:7275   */\n  dup6\n    /* \"#utility.yul\":7225:7292   */\n  tag_65\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":7319:7320   */\n  0x00\n    /* \"#utility.yul\":7343:7347   */\n  0x20\n    /* \"#utility.yul\":7330:7347   */\n  swap1\n  pop\n    /* \"#utility.yul\":7375:7377   */\n  0x1f\n    /* \"#utility.yul\":7367:7373   */\n  dup4\n    /* \"#utility.yul\":7364:7378   */\n  gt\n    /* \"#utility.yul\":7392:7393   */\n  0x01\n    /* \"#utility.yul\":7387:8005   */\n  dup2\n  eq\n  tag_163\n  jumpi\n    /* \"#utility.yul\":8049:8050   */\n  0x00\n    /* \"#utility.yul\":8066:8072   */\n  dup5\n    /* \"#utility.yul\":8063:8140   */\n  iszero\n  tag_164\n  jumpi\n    /* \"#utility.yul\":8115:8124   */\n  dup3\n    /* \"#utility.yul\":8110:8113   */\n  dup8\n    /* \"#utility.yul\":8106:8125   */\n  add\n    /* \"#utility.yul\":8100:8126   */\n  mload\n    /* \"#utility.yul\":8091:8126   */\n  swap1\n  pop\n    /* \"#utility.yul\":8063:8140   */\ntag_164:\n    /* \"#utility.yul\":8166:8233   */\n  tag_165\n    /* \"#utility.yul\":8226:8232   */\n  dup6\n    /* \"#utility.yul\":8219:8224   */\n  dup3\n    /* \"#utility.yul\":8166:8233   */\n  tag_68\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":8160:8164   */\n  dup7\n    /* \"#utility.yul\":8153:8234   */\n  sstore\n    /* \"#utility.yul\":8022:8244   */\n  pop\n    /* \"#utility.yul\":7357:8244   */\n  jump(tag_162)\n    /* \"#utility.yul\":7387:8005   */\ntag_163:\n    /* \"#utility.yul\":7439:7443   */\n  0x1f\n    /* \"#utility.yul\":7435:7444   */\n  not\n    /* \"#utility.yul\":7427:7433   */\n  dup5\n    /* \"#utility.yul\":7423:7445   */\n  and\n    /* \"#utility.yul\":7473:7510   */\n  tag_166\n    /* \"#utility.yul\":7505:7509   */\n  dup7\n    /* \"#utility.yul\":7473:7510   */\n  tag_54\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":7532:7533   */\n  0x00\n    /* \"#utility.yul\":7546:7754   */\ntag_167:\n    /* \"#utility.yul\":7560:7567   */\n  dup3\n    /* \"#utility.yul\":7557:7558   */\n  dup2\n    /* \"#utility.yul\":7554:7568   */\n  lt\n    /* \"#utility.yul\":7546:7754   */\n  iszero\n  tag_169\n  jumpi\n    /* \"#utility.yul\":7639:7648   */\n  dup5\n    /* \"#utility.yul\":7634:7637   */\n  dup10\n    /* \"#utility.yul\":7630:7649   */\n  add\n    /* \"#utility.yul\":7624:7650   */\n  mload\n    /* \"#utility.yul\":7616:7622   */\n  dup3\n    /* \"#utility.yul\":7609:7651   */\n  sstore\n    /* \"#utility.yul\":7690:7691   */\n  0x01\n    /* \"#utility.yul\":7682:7688   */\n  dup3\n    /* \"#utility.yul\":7678:7692   */\n  add\n    /* \"#utility.yul\":7668:7692   */\n  swap2\n  pop\n    /* \"#utility.yul\":7737:7739   */\n  0x20\n    /* \"#utility.yul\":7726:7735   */\n  dup6\n    /* \"#utility.yul\":7722:7740   */\n  add\n    /* \"#utility.yul\":7709:7740   */\n  swap5\n  pop\n    /* \"#utility.yul\":7583:7587   */\n  0x20\n    /* \"#utility.yul\":7580:7581   */\n  dup2\n    /* \"#utility.yul\":7576:7588   */\n  add\n    /* \"#utility.yul\":7571:7588   */\n  swap1\n  pop\n    /* \"#utility.yul\":7546:7754   */\n  jump(tag_167)\ntag_169:\n    /* \"#utility.yul\":7782:7788   */\n  dup7\n    /* \"#utility.yul\":7773:7780   */\n  dup4\n    /* \"#utility.yul\":7770:7789   */\n  lt\n    /* \"#utility.yul\":7767:7946   */\n  iszero\n  tag_170\n  jumpi\n    /* \"#utility.yul\":7840:7849   */\n  dup5\n    /* \"#utility.yul\":7835:7838   */\n  dup10\n    /* \"#utility.yul\":7831:7850   */\n  add\n    /* \"#utility.yul\":7825:7851   */\n  mload\n    /* \"#utility.yul\":7883:7931   */\n  tag_171\n    /* \"#utility.yul\":7925:7929   */\n  0x1f\n    /* \"#utility.yul\":7917:7923   */\n  dup10\n    /* \"#utility.yul\":7913:7930   */\n  and\n    /* \"#utility.yul\":7902:7911   */\n  dup3\n    /* \"#utility.yul\":7883:7931   */\n  tag_67\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":7875:7881   */\n  dup4\n    /* \"#utility.yul\":7868:7932   */\n  sstore\n    /* \"#utility.yul\":7790:7946   */\n  pop\n    /* \"#utility.yul\":7767:7946   */\ntag_170:\n    /* \"#utility.yul\":7992:7993   */\n  0x01\n    /* \"#utility.yul\":7988:7989   */\n  0x02\n    /* \"#utility.yul\":7980:7986   */\n  dup9\n    /* \"#utility.yul\":7976:7990   */\n  mul\n    /* \"#utility.yul\":7972:7994   */\n  add\n    /* \"#utility.yul\":7966:7970   */\n  dup9\n    /* \"#utility.yul\":7959:7995   */\n  sstore\n    /* \"#utility.yul\":7394:8005   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7357:8244   */\ntag_162:\n  pop\n    /* \"#utility.yul\":6947:8250   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":6855:8250   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8256:8382   */\ntag_69:\n    /* \"#utility.yul\":8293:8300   */\n  0x00\n    /* \"#utility.yul\":8333:8375   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":8326:8331   */\n  dup3\n    /* \"#utility.yul\":8322:8376   */\n  and\n    /* \"#utility.yul\":8311:8376   */\n  swap1\n  pop\n    /* \"#utility.yul\":8256:8382   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8388:8484   */\ntag_70:\n    /* \"#utility.yul\":8425:8432   */\n  0x00\n    /* \"#utility.yul\":8454:8478   */\n  tag_174\n    /* \"#utility.yul\":8472:8477   */\n  dup3\n    /* \"#utility.yul\":8454:8478   */\n  tag_69\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":8443:8478   */\n  swap1\n  pop\n    /* \"#utility.yul\":8388:8484   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8490:8608   */\ntag_71:\n    /* \"#utility.yul\":8577:8601   */\n  tag_176\n    /* \"#utility.yul\":8595:8600   */\n  dup2\n    /* \"#utility.yul\":8577:8601   */\n  tag_70\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":8572:8575   */\n  dup3\n    /* \"#utility.yul\":8565:8602   */\n  mstore\n    /* \"#utility.yul\":8490:8608   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8614:8836   */\ntag_18:\n    /* \"#utility.yul\":8707:8711   */\n  0x00\n    /* \"#utility.yul\":8745:8747   */\n  0x20\n    /* \"#utility.yul\":8734:8743   */\n  dup3\n    /* \"#utility.yul\":8730:8748   */\n  add\n    /* \"#utility.yul\":8722:8748   */\n  swap1\n  pop\n    /* \"#utility.yul\":8758:8829   */\n  tag_178\n    /* \"#utility.yul\":8826:8827   */\n  0x00\n    /* \"#utility.yul\":8815:8824   */\n  dup4\n    /* \"#utility.yul\":8811:8828   */\n  add\n    /* \"#utility.yul\":8802:8808   */\n  dup5\n    /* \"#utility.yul\":8758:8829   */\n  tag_71\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":8614:8836   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8842:9033   */\ntag_35:\n    /* \"#utility.yul\":8882:8885   */\n  0x00\n    /* \"#utility.yul\":8901:8921   */\n  tag_180\n    /* \"#utility.yul\":8919:8920   */\n  dup3\n    /* \"#utility.yul\":8901:8921   */\n  tag_48\n  jump\t// in\ntag_180:\n    /* \"#utility.yul\":8896:8921   */\n  swap2\n  pop\n    /* \"#utility.yul\":8935:8955   */\n  tag_181\n    /* \"#utility.yul\":8953:8954   */\n  dup4\n    /* \"#utility.yul\":8935:8955   */\n  tag_48\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":8930:8955   */\n  swap3\n  pop\n    /* \"#utility.yul\":8978:8979   */\n  dup3\n    /* \"#utility.yul\":8975:8976   */\n  dup3\n    /* \"#utility.yul\":8971:8980   */\n  add\n    /* \"#utility.yul\":8964:8980   */\n  swap1\n  pop\n    /* \"#utility.yul\":8999:9002   */\n  dup1\n    /* \"#utility.yul\":8996:8997   */\n  dup3\n    /* \"#utility.yul\":8993:9003   */\n  gt\n    /* \"#utility.yul\":8990:9026   */\n  iszero\n  tag_182\n  jumpi\n    /* \"#utility.yul\":9006:9024   */\n  tag_183\n  tag_44\n  jump\t// in\ntag_183:\n    /* \"#utility.yul\":8990:9026   */\ntag_182:\n    /* \"#utility.yul\":8842:9033   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9039:9157   */\ntag_72:\n    /* \"#utility.yul\":9126:9150   */\n  tag_185\n    /* \"#utility.yul\":9144:9149   */\n  dup2\n    /* \"#utility.yul\":9126:9150   */\n  tag_48\n  jump\t// in\ntag_185:\n    /* \"#utility.yul\":9121:9124   */\n  dup3\n    /* \"#utility.yul\":9114:9151   */\n  mstore\n    /* \"#utility.yul\":9039:9157   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9163:9605   */\ntag_39:\n    /* \"#utility.yul\":9312:9316   */\n  0x00\n    /* \"#utility.yul\":9350:9352   */\n  0x60\n    /* \"#utility.yul\":9339:9348   */\n  dup3\n    /* \"#utility.yul\":9335:9353   */\n  add\n    /* \"#utility.yul\":9327:9353   */\n  swap1\n  pop\n    /* \"#utility.yul\":9363:9434   */\n  tag_187\n    /* \"#utility.yul\":9431:9432   */\n  0x00\n    /* \"#utility.yul\":9420:9429   */\n  dup4\n    /* \"#utility.yul\":9416:9433   */\n  add\n    /* \"#utility.yul\":9407:9413   */\n  dup7\n    /* \"#utility.yul\":9363:9434   */\n  tag_71\n  jump\t// in\ntag_187:\n    /* \"#utility.yul\":9444:9516   */\n  tag_188\n    /* \"#utility.yul\":9512:9514   */\n  0x20\n    /* \"#utility.yul\":9501:9510   */\n  dup4\n    /* \"#utility.yul\":9497:9515   */\n  add\n    /* \"#utility.yul\":9488:9494   */\n  dup6\n    /* \"#utility.yul\":9444:9516   */\n  tag_72\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":9526:9598   */\n  tag_189\n    /* \"#utility.yul\":9594:9596   */\n  0x40\n    /* \"#utility.yul\":9583:9592   */\n  dup4\n    /* \"#utility.yul\":9579:9597   */\n  add\n    /* \"#utility.yul\":9570:9576   */\n  dup5\n    /* \"#utility.yul\":9526:9598   */\n  tag_72\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":9163:9605   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9611:9833   */\ntag_43:\n    /* \"#utility.yul\":9704:9708   */\n  0x00\n    /* \"#utility.yul\":9742:9744   */\n  0x20\n    /* \"#utility.yul\":9731:9740   */\n  dup3\n    /* \"#utility.yul\":9727:9745   */\n  add\n    /* \"#utility.yul\":9719:9745   */\n  swap1\n  pop\n    /* \"#utility.yul\":9755:9826   */\n  tag_191\n    /* \"#utility.yul\":9823:9824   */\n  0x00\n    /* \"#utility.yul\":9812:9821   */\n  dup4\n    /* \"#utility.yul\":9808:9825   */\n  add\n    /* \"#utility.yul\":9799:9805   */\n  dup5\n    /* \"#utility.yul\":9755:9826   */\n  tag_72\n  jump\t// in\ntag_191:\n    /* \"#utility.yul\":9611:9833   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":222:1261  contract ShoebumxToken is ERC20, Ownable {... */\ntag_24:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":222:1261  contract ShoebumxToken is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xd0febe4c\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xd0febe4c\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xe086e5ec\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_17\n      jumpi\n      jump(tag_1)\n    tag_19:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xbc6e6604\n      eq\n      tag_13\n      jumpi\n      jump(tag_1)\n    tag_18:\n      dup1\n      0x313ce567\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_9\n      jumpi\n      jump(tag_1)\n    tag_20:\n      dup1\n      0x06fdde03\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":531:645  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      pop\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":330:383  uint256 public constant TOKENS_PER_ETH = 100 * 10**18 */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":651:939  function buyTokens() external payable {... */\n    tag_14:\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      tag_86\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":996:1259  function withdrawETH() external onlyOwner {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      tag_89\n      tag_90\n      jump\t// in\n    tag_89:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n      tag_92\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_93:\n      tag_94\n      jump\t// in\n    tag_92:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_23:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_98\n      swap1\n      tag_97\n      jump\t// in\n    tag_98:\n      dup1\n      iszero\n      tag_99\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_100\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_99)\n    tag_100:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_101:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_101\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_99:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_110\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_110:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":531:645  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_116\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_116:\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":600:638  _mint(to, amount * (10 ** decimals())) */\n      tag_119\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":606:608  to */\n      dup3\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":626:636  decimals() */\n      tag_120\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":626:634  decimals */\n      tag_46\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":626:636  decimals() */\n      jump\t// in\n    tag_120:\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":620:622  10 */\n      0x0a\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":620:636  10 ** decimals() */\n      tag_121\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":610:616  amount */\n      dup4\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":610:637  amount * (10 ** decimals()) */\n      tag_123\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":600:605  _mint */\n      tag_125\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":600:638  _mint(to, amount * (10 ** decimals())) */\n      jump\t// in\n    tag_119:\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":531:645  function mint(address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_128:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_130\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_134\n      swap1\n      tag_97\n      jump\t// in\n    tag_134:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_135\n      swap1\n      tag_97\n      jump\t// in\n    tag_135:\n      dup1\n      iszero\n      tag_136\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_137\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_136)\n    tag_137:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_138:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_138\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_136:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_140\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":330:383  uint256 public constant TOKENS_PER_ETH = 100 * 10**18 */\n    tag_78:\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":371:383  100 * 10**18 */\n      0x056bc75e2d63100000\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":330:383  uint256 public constant TOKENS_PER_ETH = 100 * 10**18 */\n      dup2\n      jump\t// out\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":651:939  function buyTokens() external payable {... */\n    tag_81:\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":720:729  0.1 ether */\n      0x016345785d8a0000\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":707:716  msg.value */\n      callvalue\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":707:729  msg.value >= 0.1 ether */\n      lt\n      iszero\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":699:761  require(msg.value >= 0.1 ether, \"Minimum purchase is 0.1 ETH\") */\n      tag_143\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_144\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_143:\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":840:860  uint256 tokensToMint */\n      0x00\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":371:383  100 * 10**18 */\n      0x056bc75e2d63100000\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":864:873  msg.value */\n      callvalue\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":864:890  msg.value * TOKENS_PER_ETH */\n      tag_146\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_146:\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":840:891  uint256 tokensToMint = (msg.value * TOKENS_PER_ETH) */\n      swap1\n      pop\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":901:932  _mint(msg.sender, tokensToMint) */\n      tag_147\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":907:917  msg.sender */\n      caller\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":919:931  tokensToMint */\n      dup3\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":901:906  _mint */\n      tag_125\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":901:932  _mint(msg.sender, tokensToMint) */\n      jump\t// in\n    tag_147:\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":689:939  {... */\n      pop\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":651:939  function buyTokens() external payable {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":996:1259  function withdrawETH() external onlyOwner {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_150\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_150:\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":1048:1063  uint256 balance */\n      0x00\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":1066:1087  address(this).balance */\n      selfbalance\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":1048:1087  uint256 balance = address(this).balance */\n      swap1\n      pop\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":1115:1116  0 */\n      0x00\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":1105:1112  balance */\n      dup2\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":1105:1116  balance > 0 */\n      gt\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":1097:1139  require(balance > 0, \"No ETH to withdraw\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_152:\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":1151:1163  bool success */\n      0x00\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":1169:1176  owner() */\n      tag_155\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":1169:1174  owner */\n      tag_64\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":1169:1176  owner() */\n      jump\t// in\n    tag_155:\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":1169:1181  owner().call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":1189:1196  balance */\n      dup3\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":1169:1201  owner().call{value: balance}(\"\") */\n      mload(0x40)\n      tag_156\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_160\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_159)\n    tag_160:\n      0x60\n      swap2\n      pop\n    tag_159:\n      pop\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":1150:1201  (bool success, ) = owner().call{value: balance}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":1219:1226  success */\n      dup1\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":1211:1252  require(success, \"ETH withdrawal failed\") */\n      tag_161\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_161:\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":1038:1259  {... */\n      pop\n      pop\n        /* \"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":996:1259  function withdrawETH() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_165\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_167\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_167:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_169:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_172\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_173\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_175\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_86\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10600:10617  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10617  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n      tag_176\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10656:10661  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10653  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10661  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n      iszero\n      tag_177\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10715:10722  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10724:10740  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10742:10747  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10688:10748  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n    tag_177:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      tag_180\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10813:10818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10820:10827  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10853  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10845  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10853  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10855:10860  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10812  _approve */\n      tag_173\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10892  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_182\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_184\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_184:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_186\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_187\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_186:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_189\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_104\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_189:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_190\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_64\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_190:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_191\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_192\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_104\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_192:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_191:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n      tag_195\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_196\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n    tag_195:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      tag_197\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n      tag_187\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      jump\t// in\n    tag_197:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_173:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_200\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_202\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_203\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_203:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_204\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_205\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_205:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_204:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_187:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_207\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_208\n      swap2\n      swap1\n      tag_209\n      jump\t// in\n    tag_208:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_210)\n    tag_207:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_211\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_212\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_211:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_213\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_214)\n    tag_213:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_214:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_215\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_216:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_217:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_218:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_219:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_220:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_257\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_216\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":711:782   */\n      tag_258\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_217\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_259\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_218\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":881:910   */\n      tag_260\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_219\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_25:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_262\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_220\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_222:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_224:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_225:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_268\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_224\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_226:\n        /* \"#utility.yul\":1876:1900   */\n      tag_270\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_225\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_271\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_271:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_227:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_273\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_226\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_228:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_229:\n        /* \"#utility.yul\":2232:2256   */\n      tag_276\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_228\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_277\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_277:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_230:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_279\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_229\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_29:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_281\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_282\n      tag_222\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":2525:2644   */\n    tag_281:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_283\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_227\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_284\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_230\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_231:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_232:\n        /* \"#utility.yul\":3089:3110   */\n      tag_287\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_231\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_32:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_289\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_232\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_233:\n        /* \"#utility.yul\":3426:3450   */\n      tag_291\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_228\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_37:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_293\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_233\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_41:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      dup1\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_295\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_296\n      tag_222\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":3801:3920   */\n    tag_295:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_297\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_227\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_298\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_227\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_299\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_230\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_234:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_235:\n        /* \"#utility.yul\":4491:4513   */\n      tag_302\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_234\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_48:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_304\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_235\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:5075   */\n    tag_56:\n        /* \"#utility.yul\":4805:4811   */\n      0x00\n        /* \"#utility.yul\":4854:4856   */\n      0x20\n        /* \"#utility.yul\":4842:4851   */\n      dup3\n        /* \"#utility.yul\":4833:4840   */\n      dup5\n        /* \"#utility.yul\":4829:4852   */\n      sub\n        /* \"#utility.yul\":4825:4857   */\n      slt\n        /* \"#utility.yul\":4822:4941   */\n      iszero\n      tag_306\n      jumpi\n        /* \"#utility.yul\":4860:4939   */\n      tag_307\n      tag_222\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":4822:4941   */\n    tag_306:\n        /* \"#utility.yul\":4980:4981   */\n      0x00\n        /* \"#utility.yul\":5005:5058   */\n      tag_308\n        /* \"#utility.yul\":5050:5057   */\n      dup5\n        /* \"#utility.yul\":5041:5047   */\n      dup3\n        /* \"#utility.yul\":5030:5039   */\n      dup6\n        /* \"#utility.yul\":5026:5048   */\n      add\n        /* \"#utility.yul\":5005:5058   */\n      tag_227\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":4995:5058   */\n      swap2\n      pop\n        /* \"#utility.yul\":4951:5068   */\n      pop\n        /* \"#utility.yul\":4746:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5199   */\n    tag_236:\n        /* \"#utility.yul\":5168:5192   */\n      tag_310\n        /* \"#utility.yul\":5186:5191   */\n      dup2\n        /* \"#utility.yul\":5168:5192   */\n      tag_225\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":5163:5166   */\n      dup3\n        /* \"#utility.yul\":5156:5193   */\n      mstore\n        /* \"#utility.yul\":5081:5199   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5205:5427   */\n    tag_66:\n        /* \"#utility.yul\":5298:5302   */\n      0x00\n        /* \"#utility.yul\":5336:5338   */\n      0x20\n        /* \"#utility.yul\":5325:5334   */\n      dup3\n        /* \"#utility.yul\":5321:5339   */\n      add\n        /* \"#utility.yul\":5313:5339   */\n      swap1\n      pop\n        /* \"#utility.yul\":5349:5420   */\n      tag_312\n        /* \"#utility.yul\":5417:5418   */\n      0x00\n        /* \"#utility.yul\":5406:5415   */\n      dup4\n        /* \"#utility.yul\":5402:5419   */\n      add\n        /* \"#utility.yul\":5393:5399   */\n      dup5\n        /* \"#utility.yul\":5349:5420   */\n      tag_236\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":5205:5427   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5433:5907   */\n    tag_85:\n        /* \"#utility.yul\":5501:5507   */\n      0x00\n        /* \"#utility.yul\":5509:5515   */\n      dup1\n        /* \"#utility.yul\":5558:5560   */\n      0x40\n        /* \"#utility.yul\":5546:5555   */\n      dup4\n        /* \"#utility.yul\":5537:5544   */\n      dup6\n        /* \"#utility.yul\":5533:5556   */\n      sub\n        /* \"#utility.yul\":5529:5561   */\n      slt\n        /* \"#utility.yul\":5526:5645   */\n      iszero\n      tag_314\n      jumpi\n        /* \"#utility.yul\":5564:5643   */\n      tag_315\n      tag_222\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":5526:5645   */\n    tag_314:\n        /* \"#utility.yul\":5684:5685   */\n      0x00\n        /* \"#utility.yul\":5709:5762   */\n      tag_316\n        /* \"#utility.yul\":5754:5761   */\n      dup6\n        /* \"#utility.yul\":5745:5751   */\n      dup3\n        /* \"#utility.yul\":5734:5743   */\n      dup7\n        /* \"#utility.yul\":5730:5752   */\n      add\n        /* \"#utility.yul\":5709:5762   */\n      tag_227\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":5699:5762   */\n      swap3\n      pop\n        /* \"#utility.yul\":5655:5772   */\n      pop\n        /* \"#utility.yul\":5811:5813   */\n      0x20\n        /* \"#utility.yul\":5837:5890   */\n      tag_317\n        /* \"#utility.yul\":5882:5889   */\n      dup6\n        /* \"#utility.yul\":5873:5879   */\n      dup3\n        /* \"#utility.yul\":5862:5871   */\n      dup7\n        /* \"#utility.yul\":5858:5880   */\n      add\n        /* \"#utility.yul\":5837:5890   */\n      tag_227\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":5827:5890   */\n      swap2\n      pop\n        /* \"#utility.yul\":5782:5900   */\n      pop\n        /* \"#utility.yul\":5433:5907   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5913:6093   */\n    tag_237:\n        /* \"#utility.yul\":5961:6038   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5958:5959   */\n      0x00\n        /* \"#utility.yul\":5951:6039   */\n      mstore\n        /* \"#utility.yul\":6058:6062   */\n      0x22\n        /* \"#utility.yul\":6055:6056   */\n      0x04\n        /* \"#utility.yul\":6048:6063   */\n      mstore\n        /* \"#utility.yul\":6082:6086   */\n      0x24\n        /* \"#utility.yul\":6079:6080   */\n      0x00\n        /* \"#utility.yul\":6072:6087   */\n      revert\n        /* \"#utility.yul\":6099:6419   */\n    tag_97:\n        /* \"#utility.yul\":6143:6149   */\n      0x00\n        /* \"#utility.yul\":6180:6181   */\n      0x02\n        /* \"#utility.yul\":6174:6178   */\n      dup3\n        /* \"#utility.yul\":6170:6182   */\n      div\n        /* \"#utility.yul\":6160:6182   */\n      swap1\n      pop\n        /* \"#utility.yul\":6227:6228   */\n      0x01\n        /* \"#utility.yul\":6221:6225   */\n      dup3\n        /* \"#utility.yul\":6217:6229   */\n      and\n        /* \"#utility.yul\":6248:6266   */\n      dup1\n        /* \"#utility.yul\":6238:6319   */\n      tag_320\n      jumpi\n        /* \"#utility.yul\":6304:6308   */\n      0x7f\n        /* \"#utility.yul\":6296:6302   */\n      dup3\n        /* \"#utility.yul\":6292:6309   */\n      and\n        /* \"#utility.yul\":6282:6309   */\n      swap2\n      pop\n        /* \"#utility.yul\":6238:6319   */\n    tag_320:\n        /* \"#utility.yul\":6366:6368   */\n      0x20\n        /* \"#utility.yul\":6358:6364   */\n      dup3\n        /* \"#utility.yul\":6355:6369   */\n      lt\n        /* \"#utility.yul\":6335:6353   */\n      dup2\n        /* \"#utility.yul\":6332:6370   */\n      sub\n        /* \"#utility.yul\":6329:6413   */\n      tag_321\n      jumpi\n        /* \"#utility.yul\":6385:6403   */\n      tag_322\n      tag_237\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":6329:6413   */\n    tag_321:\n        /* \"#utility.yul\":6150:6419   */\n      pop\n        /* \"#utility.yul\":6099:6419   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6425:6605   */\n    tag_238:\n        /* \"#utility.yul\":6473:6550   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6470:6471   */\n      0x00\n        /* \"#utility.yul\":6463:6551   */\n      mstore\n        /* \"#utility.yul\":6570:6574   */\n      0x11\n        /* \"#utility.yul\":6567:6568   */\n      0x04\n        /* \"#utility.yul\":6560:6575   */\n      mstore\n        /* \"#utility.yul\":6594:6598   */\n      0x24\n        /* \"#utility.yul\":6591:6592   */\n      0x00\n        /* \"#utility.yul\":6584:6599   */\n      revert\n        /* \"#utility.yul\":6611:6713   */\n    tag_239:\n        /* \"#utility.yul\":6653:6661   */\n      0x00\n        /* \"#utility.yul\":6700:6705   */\n      dup2\n        /* \"#utility.yul\":6697:6698   */\n      0x01\n        /* \"#utility.yul\":6693:6706   */\n      shr\n        /* \"#utility.yul\":6672:6706   */\n      swap1\n      pop\n        /* \"#utility.yul\":6611:6713   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6719:7567   */\n    tag_240:\n        /* \"#utility.yul\":6780:6785   */\n      0x00\n        /* \"#utility.yul\":6787:6791   */\n      dup1\n        /* \"#utility.yul\":6811:6817   */\n      dup3\n        /* \"#utility.yul\":6802:6817   */\n      swap2\n      pop\n        /* \"#utility.yul\":6835:6840   */\n      dup4\n        /* \"#utility.yul\":6826:6840   */\n      swap1\n      pop\n        /* \"#utility.yul\":6849:7561   */\n    tag_326:\n        /* \"#utility.yul\":6870:6871   */\n      0x01\n        /* \"#utility.yul\":6860:6868   */\n      dup6\n        /* \"#utility.yul\":6857:6872   */\n      gt\n        /* \"#utility.yul\":6849:7561   */\n      iszero\n      tag_328\n      jumpi\n        /* \"#utility.yul\":6965:6969   */\n      dup1\n        /* \"#utility.yul\":6960:6963   */\n      dup7\n        /* \"#utility.yul\":6956:6970   */\n      div\n        /* \"#utility.yul\":6950:6954   */\n      dup2\n        /* \"#utility.yul\":6947:6971   */\n      gt\n        /* \"#utility.yul\":6944:6994   */\n      iszero\n      tag_329\n      jumpi\n        /* \"#utility.yul\":6974:6992   */\n      tag_330\n      tag_238\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":6944:6994   */\n    tag_329:\n        /* \"#utility.yul\":7024:7025   */\n      0x01\n        /* \"#utility.yul\":7014:7022   */\n      dup6\n        /* \"#utility.yul\":7010:7026   */\n      and\n        /* \"#utility.yul\":7007:7458   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":7439:7443   */\n      dup1\n        /* \"#utility.yul\":7432:7437   */\n      dup3\n        /* \"#utility.yul\":7428:7444   */\n      mul\n        /* \"#utility.yul\":7419:7444   */\n      swap2\n      pop\n        /* \"#utility.yul\":7007:7458   */\n    tag_331:\n        /* \"#utility.yul\":7489:7493   */\n      dup1\n        /* \"#utility.yul\":7483:7487   */\n      dup2\n        /* \"#utility.yul\":7479:7494   */\n      mul\n        /* \"#utility.yul\":7471:7494   */\n      swap1\n      pop\n        /* \"#utility.yul\":7519:7551   */\n      tag_332\n        /* \"#utility.yul\":7542:7550   */\n      dup6\n        /* \"#utility.yul\":7519:7551   */\n      tag_239\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":7507:7551   */\n      swap5\n      pop\n        /* \"#utility.yul\":6849:7561   */\n      jump(tag_326)\n    tag_328:\n        /* \"#utility.yul\":6719:7567   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7573:8646   */\n    tag_241:\n        /* \"#utility.yul\":7627:7632   */\n      0x00\n        /* \"#utility.yul\":7818:7826   */\n      dup3\n        /* \"#utility.yul\":7808:7848   */\n      tag_334\n      jumpi\n        /* \"#utility.yul\":7839:7840   */\n      0x01\n        /* \"#utility.yul\":7830:7840   */\n      swap1\n      pop\n        /* \"#utility.yul\":7841:7846   */\n      jump(tag_333)\n        /* \"#utility.yul\":7808:7848   */\n    tag_334:\n        /* \"#utility.yul\":7867:7871   */\n      dup2\n        /* \"#utility.yul\":7857:7893   */\n      tag_335\n      jumpi\n        /* \"#utility.yul\":7884:7885   */\n      0x00\n        /* \"#utility.yul\":7875:7885   */\n      swap1\n      pop\n        /* \"#utility.yul\":7886:7891   */\n      jump(tag_333)\n        /* \"#utility.yul\":7857:7893   */\n    tag_335:\n        /* \"#utility.yul\":7953:7957   */\n      dup2\n        /* \"#utility.yul\":8001:8002   */\n      0x01\n        /* \"#utility.yul\":7996:8023   */\n      dup2\n      eq\n      tag_337\n      jumpi\n        /* \"#utility.yul\":8037:8038   */\n      0x02\n        /* \"#utility.yul\":8032:8223   */\n      dup2\n      eq\n      tag_338\n      jumpi\n        /* \"#utility.yul\":7946:8223   */\n      jump(tag_336)\n        /* \"#utility.yul\":7996:8023   */\n    tag_337:\n        /* \"#utility.yul\":8014:8015   */\n      0x01\n        /* \"#utility.yul\":8005:8015   */\n      swap2\n      pop\n        /* \"#utility.yul\":8016:8021   */\n      pop\n      jump(tag_333)\n        /* \"#utility.yul\":8032:8223   */\n    tag_338:\n        /* \"#utility.yul\":8077:8080   */\n      0xff\n        /* \"#utility.yul\":8067:8075   */\n      dup5\n        /* \"#utility.yul\":8064:8081   */\n      gt\n        /* \"#utility.yul\":8061:8104   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":8084:8102   */\n      tag_340\n      tag_238\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":8061:8104   */\n    tag_339:\n        /* \"#utility.yul\":8133:8141   */\n      dup4\n        /* \"#utility.yul\":8130:8131   */\n      0x02\n        /* \"#utility.yul\":8126:8142   */\n      exp\n        /* \"#utility.yul\":8117:8142   */\n      swap2\n      pop\n        /* \"#utility.yul\":8168:8171   */\n      dup5\n        /* \"#utility.yul\":8161:8166   */\n      dup3\n        /* \"#utility.yul\":8158:8172   */\n      gt\n        /* \"#utility.yul\":8155:8195   */\n      iszero\n      tag_341\n      jumpi\n        /* \"#utility.yul\":8175:8193   */\n      tag_342\n      tag_238\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":8155:8195   */\n    tag_341:\n        /* \"#utility.yul\":8208:8213   */\n      pop\n      jump(tag_333)\n        /* \"#utility.yul\":7946:8223   */\n    tag_336:\n      pop\n        /* \"#utility.yul\":8332:8334   */\n      0x20\n        /* \"#utility.yul\":8322:8330   */\n      dup4\n        /* \"#utility.yul\":8319:8335   */\n      lt\n        /* \"#utility.yul\":8313:8316   */\n      0x0133\n        /* \"#utility.yul\":8307:8311   */\n      dup4\n        /* \"#utility.yul\":8304:8317   */\n      lt\n        /* \"#utility.yul\":8300:8336   */\n      and\n        /* \"#utility.yul\":8282:8284   */\n      0x4e\n        /* \"#utility.yul\":8272:8280   */\n      dup5\n        /* \"#utility.yul\":8269:8285   */\n      lt\n        /* \"#utility.yul\":8264:8266   */\n      0x0b\n        /* \"#utility.yul\":8258:8262   */\n      dup5\n        /* \"#utility.yul\":8255:8267   */\n      lt\n        /* \"#utility.yul\":8251:8286   */\n      and\n        /* \"#utility.yul\":8235:8346   */\n      or\n        /* \"#utility.yul\":8232:8478   */\n      iszero\n      tag_343\n      jumpi\n        /* \"#utility.yul\":8388:8396   */\n      dup3\n        /* \"#utility.yul\":8382:8386   */\n      dup3\n        /* \"#utility.yul\":8378:8397   */\n      exp\n        /* \"#utility.yul\":8369:8397   */\n      swap1\n      pop\n        /* \"#utility.yul\":8423:8426   */\n      dup4\n        /* \"#utility.yul\":8416:8421   */\n      dup2\n        /* \"#utility.yul\":8413:8427   */\n      gt\n        /* \"#utility.yul\":8410:8450   */\n      iszero\n      tag_344\n      jumpi\n        /* \"#utility.yul\":8430:8448   */\n      tag_345\n      tag_238\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":8410:8450   */\n    tag_344:\n        /* \"#utility.yul\":8463:8468   */\n      jump(tag_333)\n        /* \"#utility.yul\":8232:8478   */\n    tag_343:\n        /* \"#utility.yul\":8503:8545   */\n      tag_346\n        /* \"#utility.yul\":8541:8544   */\n      dup5\n        /* \"#utility.yul\":8531:8539   */\n      dup5\n        /* \"#utility.yul\":8525:8529   */\n      dup5\n        /* \"#utility.yul\":8522:8523   */\n      0x01\n        /* \"#utility.yul\":8503:8545   */\n      tag_240\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":8488:8545   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":8577:8581   */\n      dup2\n        /* \"#utility.yul\":8572:8575   */\n      dup5\n        /* \"#utility.yul\":8568:8582   */\n      div\n        /* \"#utility.yul\":8561:8566   */\n      dup2\n        /* \"#utility.yul\":8558:8583   */\n      gt\n        /* \"#utility.yul\":8555:8606   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":8586:8604   */\n      tag_348\n      tag_238\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":8555:8606   */\n    tag_347:\n        /* \"#utility.yul\":8635:8639   */\n      dup2\n        /* \"#utility.yul\":8628:8633   */\n      dup2\n        /* \"#utility.yul\":8624:8640   */\n      mul\n        /* \"#utility.yul\":8615:8640   */\n      swap1\n      pop\n        /* \"#utility.yul\":7573:8646   */\n    tag_333:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8652:8933   */\n    tag_122:\n        /* \"#utility.yul\":8710:8715   */\n      0x00\n        /* \"#utility.yul\":8734:8757   */\n      tag_350\n        /* \"#utility.yul\":8752:8756   */\n      dup3\n        /* \"#utility.yul\":8734:8757   */\n      tag_228\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":8726:8757   */\n      swap2\n      pop\n        /* \"#utility.yul\":8778:8803   */\n      tag_351\n        /* \"#utility.yul\":8794:8802   */\n      dup4\n        /* \"#utility.yul\":8778:8803   */\n      tag_234\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":8766:8803   */\n      swap3\n      pop\n        /* \"#utility.yul\":8822:8926   */\n      tag_352\n        /* \"#utility.yul\":8859:8925   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":8849:8857   */\n      dup5\n        /* \"#utility.yul\":8843:8847   */\n      dup5\n        /* \"#utility.yul\":8822:8926   */\n      tag_241\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":8813:8926   */\n      swap1\n      pop\n        /* \"#utility.yul\":8652:8933   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8939:9349   */\n    tag_124:\n        /* \"#utility.yul\":8979:8986   */\n      0x00\n        /* \"#utility.yul\":9002:9022   */\n      tag_354\n        /* \"#utility.yul\":9020:9021   */\n      dup3\n        /* \"#utility.yul\":9002:9022   */\n      tag_228\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":8997:9022   */\n      swap2\n      pop\n        /* \"#utility.yul\":9036:9056   */\n      tag_355\n        /* \"#utility.yul\":9054:9055   */\n      dup4\n        /* \"#utility.yul\":9036:9056   */\n      tag_228\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":9031:9056   */\n      swap3\n      pop\n        /* \"#utility.yul\":9091:9092   */\n      dup3\n        /* \"#utility.yul\":9088:9089   */\n      dup3\n        /* \"#utility.yul\":9084:9093   */\n      mul\n        /* \"#utility.yul\":9113:9143   */\n      tag_356\n        /* \"#utility.yul\":9131:9142   */\n      dup2\n        /* \"#utility.yul\":9113:9143   */\n      tag_228\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":9102:9143   */\n      swap2\n      pop\n        /* \"#utility.yul\":9292:9293   */\n      dup3\n        /* \"#utility.yul\":9283:9290   */\n      dup3\n        /* \"#utility.yul\":9279:9294   */\n      div\n        /* \"#utility.yul\":9276:9277   */\n      dup5\n        /* \"#utility.yul\":9273:9295   */\n      eq\n        /* \"#utility.yul\":9253:9254   */\n      dup4\n        /* \"#utility.yul\":9246:9255   */\n      iszero\n        /* \"#utility.yul\":9226:9309   */\n      or\n        /* \"#utility.yul\":9203:9342   */\n      tag_357\n      jumpi\n        /* \"#utility.yul\":9322:9340   */\n      tag_358\n      tag_238\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":9203:9342   */\n    tag_357:\n        /* \"#utility.yul\":8987:9349   */\n      pop\n        /* \"#utility.yul\":8939:9349   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9355:9532   */\n    tag_242:\n        /* \"#utility.yul\":9495:9524   */\n      0x4d696e696d756d20707572636861736520697320302e31204554480000000000\n        /* \"#utility.yul\":9491:9492   */\n      0x00\n        /* \"#utility.yul\":9483:9489   */\n      dup3\n        /* \"#utility.yul\":9479:9493   */\n      add\n        /* \"#utility.yul\":9472:9525   */\n      mstore\n        /* \"#utility.yul\":9355:9532   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9538:9904   */\n    tag_243:\n        /* \"#utility.yul\":9680:9683   */\n      0x00\n        /* \"#utility.yul\":9701:9768   */\n      tag_361\n        /* \"#utility.yul\":9765:9767   */\n      0x1b\n        /* \"#utility.yul\":9760:9763   */\n      dup4\n        /* \"#utility.yul\":9701:9768   */\n      tag_217\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":9694:9768   */\n      swap2\n      pop\n        /* \"#utility.yul\":9777:9870   */\n      tag_362\n        /* \"#utility.yul\":9866:9869   */\n      dup3\n        /* \"#utility.yul\":9777:9870   */\n      tag_242\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":9895:9897   */\n      0x20\n        /* \"#utility.yul\":9890:9893   */\n      dup3\n        /* \"#utility.yul\":9886:9898   */\n      add\n        /* \"#utility.yul\":9879:9898   */\n      swap1\n      pop\n        /* \"#utility.yul\":9538:9904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9910:10329   */\n    tag_145:\n        /* \"#utility.yul\":10076:10080   */\n      0x00\n        /* \"#utility.yul\":10114:10116   */\n      0x20\n        /* \"#utility.yul\":10103:10112   */\n      dup3\n        /* \"#utility.yul\":10099:10117   */\n      add\n        /* \"#utility.yul\":10091:10117   */\n      swap1\n      pop\n        /* \"#utility.yul\":10163:10172   */\n      dup2\n        /* \"#utility.yul\":10157:10161   */\n      dup2\n        /* \"#utility.yul\":10153:10173   */\n      sub\n        /* \"#utility.yul\":10149:10150   */\n      0x00\n        /* \"#utility.yul\":10138:10147   */\n      dup4\n        /* \"#utility.yul\":10134:10151   */\n      add\n        /* \"#utility.yul\":10127:10174   */\n      mstore\n        /* \"#utility.yul\":10191:10322   */\n      tag_364\n        /* \"#utility.yul\":10317:10321   */\n      dup2\n        /* \"#utility.yul\":10191:10322   */\n      tag_243\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":10183:10322   */\n      swap1\n      pop\n        /* \"#utility.yul\":9910:10329   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10335:10503   */\n    tag_244:\n        /* \"#utility.yul\":10475:10495   */\n      0x4e6f2045544820746f2077697468647261770000000000000000000000000000\n        /* \"#utility.yul\":10471:10472   */\n      0x00\n        /* \"#utility.yul\":10463:10469   */\n      dup3\n        /* \"#utility.yul\":10459:10473   */\n      add\n        /* \"#utility.yul\":10452:10496   */\n      mstore\n        /* \"#utility.yul\":10335:10503   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10509:10875   */\n    tag_245:\n        /* \"#utility.yul\":10651:10654   */\n      0x00\n        /* \"#utility.yul\":10672:10739   */\n      tag_367\n        /* \"#utility.yul\":10736:10738   */\n      0x12\n        /* \"#utility.yul\":10731:10734   */\n      dup4\n        /* \"#utility.yul\":10672:10739   */\n      tag_217\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":10665:10739   */\n      swap2\n      pop\n        /* \"#utility.yul\":10748:10841   */\n      tag_368\n        /* \"#utility.yul\":10837:10840   */\n      dup3\n        /* \"#utility.yul\":10748:10841   */\n      tag_244\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":10866:10868   */\n      0x20\n        /* \"#utility.yul\":10861:10864   */\n      dup3\n        /* \"#utility.yul\":10857:10869   */\n      add\n        /* \"#utility.yul\":10850:10869   */\n      swap1\n      pop\n        /* \"#utility.yul\":10509:10875   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10881:11300   */\n    tag_154:\n        /* \"#utility.yul\":11047:11051   */\n      0x00\n        /* \"#utility.yul\":11085:11087   */\n      0x20\n        /* \"#utility.yul\":11074:11083   */\n      dup3\n        /* \"#utility.yul\":11070:11088   */\n      add\n        /* \"#utility.yul\":11062:11088   */\n      swap1\n      pop\n        /* \"#utility.yul\":11134:11143   */\n      dup2\n        /* \"#utility.yul\":11128:11132   */\n      dup2\n        /* \"#utility.yul\":11124:11144   */\n      sub\n        /* \"#utility.yul\":11120:11121   */\n      0x00\n        /* \"#utility.yul\":11109:11118   */\n      dup4\n        /* \"#utility.yul\":11105:11122   */\n      add\n        /* \"#utility.yul\":11098:11145   */\n      mstore\n        /* \"#utility.yul\":11162:11293   */\n      tag_370\n        /* \"#utility.yul\":11288:11292   */\n      dup2\n        /* \"#utility.yul\":11162:11293   */\n      tag_245\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":11154:11293   */\n      swap1\n      pop\n        /* \"#utility.yul\":10881:11300   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11306:11453   */\n    tag_246:\n        /* \"#utility.yul\":11407:11418   */\n      0x00\n        /* \"#utility.yul\":11444:11447   */\n      dup2\n        /* \"#utility.yul\":11429:11447   */\n      swap1\n      pop\n        /* \"#utility.yul\":11306:11453   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11459:11573   */\n    tag_247:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11579:11977   */\n    tag_248:\n        /* \"#utility.yul\":11738:11741   */\n      0x00\n        /* \"#utility.yul\":11759:11842   */\n      tag_374\n        /* \"#utility.yul\":11840:11841   */\n      0x00\n        /* \"#utility.yul\":11835:11838   */\n      dup4\n        /* \"#utility.yul\":11759:11842   */\n      tag_246\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":11752:11842   */\n      swap2\n      pop\n        /* \"#utility.yul\":11851:11944   */\n      tag_375\n        /* \"#utility.yul\":11940:11943   */\n      dup3\n        /* \"#utility.yul\":11851:11944   */\n      tag_247\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":11969:11970   */\n      0x00\n        /* \"#utility.yul\":11964:11967   */\n      dup3\n        /* \"#utility.yul\":11960:11971   */\n      add\n        /* \"#utility.yul\":11953:11971   */\n      swap1\n      pop\n        /* \"#utility.yul\":11579:11977   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11983:12362   */\n    tag_157:\n        /* \"#utility.yul\":12167:12170   */\n      0x00\n        /* \"#utility.yul\":12189:12336   */\n      tag_377\n        /* \"#utility.yul\":12332:12335   */\n      dup3\n        /* \"#utility.yul\":12189:12336   */\n      tag_248\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":12182:12336   */\n      swap2\n      pop\n        /* \"#utility.yul\":12353:12356   */\n      dup2\n        /* \"#utility.yul\":12346:12356   */\n      swap1\n      pop\n        /* \"#utility.yul\":11983:12362   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12368:12539   */\n    tag_249:\n        /* \"#utility.yul\":12508:12531   */\n      0x455448207769746864726177616c206661696c65640000000000000000000000\n        /* \"#utility.yul\":12504:12505   */\n      0x00\n        /* \"#utility.yul\":12496:12502   */\n      dup3\n        /* \"#utility.yul\":12492:12506   */\n      add\n        /* \"#utility.yul\":12485:12532   */\n      mstore\n        /* \"#utility.yul\":12368:12539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12545:12911   */\n    tag_250:\n        /* \"#utility.yul\":12687:12690   */\n      0x00\n        /* \"#utility.yul\":12708:12775   */\n      tag_380\n        /* \"#utility.yul\":12772:12774   */\n      0x15\n        /* \"#utility.yul\":12767:12770   */\n      dup4\n        /* \"#utility.yul\":12708:12775   */\n      tag_217\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":12701:12775   */\n      swap2\n      pop\n        /* \"#utility.yul\":12784:12877   */\n      tag_381\n        /* \"#utility.yul\":12873:12876   */\n      dup3\n        /* \"#utility.yul\":12784:12877   */\n      tag_249\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":12902:12904   */\n      0x20\n        /* \"#utility.yul\":12897:12900   */\n      dup3\n        /* \"#utility.yul\":12893:12905   */\n      add\n        /* \"#utility.yul\":12886:12905   */\n      swap1\n      pop\n        /* \"#utility.yul\":12545:12911   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12917:13336   */\n    tag_163:\n        /* \"#utility.yul\":13083:13087   */\n      0x00\n        /* \"#utility.yul\":13121:13123   */\n      0x20\n        /* \"#utility.yul\":13110:13119   */\n      dup3\n        /* \"#utility.yul\":13106:13124   */\n      add\n        /* \"#utility.yul\":13098:13124   */\n      swap1\n      pop\n        /* \"#utility.yul\":13170:13179   */\n      dup2\n        /* \"#utility.yul\":13164:13168   */\n      dup2\n        /* \"#utility.yul\":13160:13180   */\n      sub\n        /* \"#utility.yul\":13156:13157   */\n      0x00\n        /* \"#utility.yul\":13145:13154   */\n      dup4\n        /* \"#utility.yul\":13141:13158   */\n      add\n        /* \"#utility.yul\":13134:13181   */\n      mstore\n        /* \"#utility.yul\":13198:13329   */\n      tag_383\n        /* \"#utility.yul\":13324:13328   */\n      dup2\n        /* \"#utility.yul\":13198:13329   */\n      tag_250\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":13190:13329   */\n      swap1\n      pop\n        /* \"#utility.yul\":12917:13336   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13342:13784   */\n    tag_179:\n        /* \"#utility.yul\":13491:13495   */\n      0x00\n        /* \"#utility.yul\":13529:13531   */\n      0x60\n        /* \"#utility.yul\":13518:13527   */\n      dup3\n        /* \"#utility.yul\":13514:13532   */\n      add\n        /* \"#utility.yul\":13506:13532   */\n      swap1\n      pop\n        /* \"#utility.yul\":13542:13613   */\n      tag_385\n        /* \"#utility.yul\":13610:13611   */\n      0x00\n        /* \"#utility.yul\":13599:13608   */\n      dup4\n        /* \"#utility.yul\":13595:13612   */\n      add\n        /* \"#utility.yul\":13586:13592   */\n      dup7\n        /* \"#utility.yul\":13542:13613   */\n      tag_236\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":13623:13695   */\n      tag_386\n        /* \"#utility.yul\":13691:13693   */\n      0x20\n        /* \"#utility.yul\":13680:13689   */\n      dup4\n        /* \"#utility.yul\":13676:13694   */\n      add\n        /* \"#utility.yul\":13667:13673   */\n      dup6\n        /* \"#utility.yul\":13623:13695   */\n      tag_233\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":13705:13777   */\n      tag_387\n        /* \"#utility.yul\":13773:13775   */\n      0x40\n        /* \"#utility.yul\":13762:13771   */\n      dup4\n        /* \"#utility.yul\":13758:13776   */\n      add\n        /* \"#utility.yul\":13749:13755   */\n      dup5\n        /* \"#utility.yul\":13705:13777   */\n      tag_233\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":13342:13784   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13790:13981   */\n    tag_209:\n        /* \"#utility.yul\":13830:13833   */\n      0x00\n        /* \"#utility.yul\":13849:13869   */\n      tag_389\n        /* \"#utility.yul\":13867:13868   */\n      dup3\n        /* \"#utility.yul\":13849:13869   */\n      tag_228\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":13844:13869   */\n      swap2\n      pop\n        /* \"#utility.yul\":13883:13903   */\n      tag_390\n        /* \"#utility.yul\":13901:13902   */\n      dup4\n        /* \"#utility.yul\":13883:13903   */\n      tag_228\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":13878:13903   */\n      swap3\n      pop\n        /* \"#utility.yul\":13926:13927   */\n      dup3\n        /* \"#utility.yul\":13923:13924   */\n      dup3\n        /* \"#utility.yul\":13919:13928   */\n      add\n        /* \"#utility.yul\":13912:13928   */\n      swap1\n      pop\n        /* \"#utility.yul\":13947:13950   */\n      dup1\n        /* \"#utility.yul\":13944:13945   */\n      dup3\n        /* \"#utility.yul\":13941:13951   */\n      gt\n        /* \"#utility.yul\":13938:13974   */\n      iszero\n      tag_391\n      jumpi\n        /* \"#utility.yul\":13954:13972   */\n      tag_392\n      tag_238\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":13938:13974   */\n    tag_391:\n        /* \"#utility.yul\":13790:13981   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220fa555793dc8e9c5b66c284f7b5b9b84eed4ee723893972c18f8d1a4145117e5364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1061": {
									"entryPoint": null,
									"id": 1061,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_422": {
									"entryPoint": null,
									"id": 422,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_725": {
									"entryPoint": 556,
									"id": 725,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 361,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_692": {
									"entryPoint": 689,
									"id": 692,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_449": {
									"entryPoint": 353,
									"id": 449,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2550,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2641,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2656,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2709,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1734,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2590,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 1283,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 1595,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 1365,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2158,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2533,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2502,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1574,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 1583,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2124,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2017,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2295,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1900,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1834,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2268,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2008,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2240,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1226,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1789,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1744,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2050,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1915,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 1271,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2228,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2100,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1927,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2059,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2096,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9836:8",
										"nodeType": "YulBlock",
										"src": "0:9836:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "35:152:8",
													"nodeType": "YulBlock",
													"src": "35:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "52:1:8",
																		"nodeType": "YulLiteral",
																		"src": "52:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "55:77:8",
																		"nodeType": "YulLiteral",
																		"src": "55:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "45:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "45:6:8"
																},
																"nativeSrc": "45:88:8",
																"nodeType": "YulFunctionCall",
																"src": "45:88:8"
															},
															"nativeSrc": "45:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "45:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "149:1:8",
																		"nodeType": "YulLiteral",
																		"src": "149:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "152:4:8",
																		"nodeType": "YulLiteral",
																		"src": "152:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "142:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "142:6:8"
																},
																"nativeSrc": "142:15:8",
																"nodeType": "YulFunctionCall",
																"src": "142:15:8"
															},
															"nativeSrc": "142:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "142:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "173:1:8",
																		"nodeType": "YulLiteral",
																		"src": "173:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "176:4:8",
																		"nodeType": "YulLiteral",
																		"src": "176:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "166:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:8"
																},
																"nativeSrc": "166:15:8",
																"nodeType": "YulFunctionCall",
																"src": "166:15:8"
															},
															"nativeSrc": "166:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "166:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "7:180:8"
											},
											{
												"body": {
													"nativeSrc": "244:51:8",
													"nodeType": "YulBlock",
													"src": "244:51:8",
													"statements": [
														{
															"nativeSrc": "254:34:8",
															"nodeType": "YulAssignment",
															"src": "254:34:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "279:1:8",
																		"nodeType": "YulLiteral",
																		"src": "279:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "282:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "282:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "275:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:8"
																},
																"nativeSrc": "275:13:8",
																"nodeType": "YulFunctionCall",
																"src": "275:13:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "254:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "254:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "193:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "225:5:8",
														"nodeType": "YulTypedName",
														"src": "225:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "235:8:8",
														"nodeType": "YulTypedName",
														"src": "235:8:8",
														"type": ""
													}
												],
												"src": "193:102:8"
											},
											{
												"body": {
													"nativeSrc": "374:775:8",
													"nodeType": "YulBlock",
													"src": "374:775:8",
													"statements": [
														{
															"nativeSrc": "384:15:8",
															"nodeType": "YulAssignment",
															"src": "384:15:8",
															"value": {
																"name": "_power",
																"nativeSrc": "393:6:8",
																"nodeType": "YulIdentifier",
																"src": "393:6:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "384:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "384:5:8"
																}
															]
														},
														{
															"nativeSrc": "408:14:8",
															"nodeType": "YulAssignment",
															"src": "408:14:8",
															"value": {
																"name": "_base",
																"nativeSrc": "417:5:8",
																"nodeType": "YulIdentifier",
																"src": "417:5:8"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "408:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "408:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "466:677:8",
																"nodeType": "YulBlock",
																"src": "466:677:8",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "554:22:8",
																			"nodeType": "YulBlock",
																			"src": "554:22:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "556:16:8",
																							"nodeType": "YulIdentifier",
																							"src": "556:16:8"
																						},
																						"nativeSrc": "556:18:8",
																						"nodeType": "YulFunctionCall",
																						"src": "556:18:8"
																					},
																					"nativeSrc": "556:18:8",
																					"nodeType": "YulExpressionStatement",
																					"src": "556:18:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "532:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "532:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "542:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:8"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "547:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "547:4:8"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "538:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "538:3:8"
																					},
																					"nativeSrc": "538:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "538:14:8"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "529:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "529:2:8"
																			},
																			"nativeSrc": "529:24:8",
																			"nodeType": "YulFunctionCall",
																			"src": "529:24:8"
																		},
																		"nativeSrc": "526:50:8",
																		"nodeType": "YulIf",
																		"src": "526:50:8"
																	},
																	{
																		"body": {
																			"nativeSrc": "621:419:8",
																			"nodeType": "YulBlock",
																			"src": "621:419:8",
																			"statements": [
																				{
																					"nativeSrc": "1001:25:8",
																					"nodeType": "YulAssignment",
																					"src": "1001:25:8",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "1014:5:8",
																								"nodeType": "YulIdentifier",
																								"src": "1014:5:8"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "1021:4:8",
																								"nodeType": "YulIdentifier",
																								"src": "1021:4:8"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "1010:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "1010:3:8"
																						},
																						"nativeSrc": "1010:16:8",
																						"nodeType": "YulFunctionCall",
																						"src": "1010:16:8"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "1001:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "1001:5:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "596:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "596:8:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "606:1:8",
																					"nodeType": "YulLiteral",
																					"src": "606:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "592:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "592:3:8"
																			},
																			"nativeSrc": "592:16:8",
																			"nodeType": "YulFunctionCall",
																			"src": "592:16:8"
																		},
																		"nativeSrc": "589:451:8",
																		"nodeType": "YulIf",
																		"src": "589:451:8"
																	},
																	{
																		"nativeSrc": "1053:23:8",
																		"nodeType": "YulAssignment",
																		"src": "1053:23:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "1065:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "1065:4:8"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "1071:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "1071:4:8"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "1061:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "1061:3:8"
																			},
																			"nativeSrc": "1061:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1061:15:8"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "1053:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "1053:4:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "1089:44:8",
																		"nodeType": "YulAssignment",
																		"src": "1089:44:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "1124:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "1124:8:8"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "1101:22:8",
																				"nodeType": "YulIdentifier",
																				"src": "1101:22:8"
																			},
																			"nativeSrc": "1101:32:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1101:32:8"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "1089:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "1089:8:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "442:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "442:8:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "452:1:8",
																		"nodeType": "YulLiteral",
																		"src": "452:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "439:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "439:2:8"
																},
																"nativeSrc": "439:15:8",
																"nodeType": "YulFunctionCall",
																"src": "439:15:8"
															},
															"nativeSrc": "431:712:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "455:2:8",
																"nodeType": "YulBlock",
																"src": "455:2:8",
																"statements": []
															},
															"pre": {
																"nativeSrc": "435:3:8",
																"nodeType": "YulBlock",
																"src": "435:3:8",
																"statements": []
															},
															"src": "431:712:8"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "301:848:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "329:6:8",
														"nodeType": "YulTypedName",
														"src": "329:6:8",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "337:5:8",
														"nodeType": "YulTypedName",
														"src": "337:5:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "344:8:8",
														"nodeType": "YulTypedName",
														"src": "344:8:8",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "354:3:8",
														"nodeType": "YulTypedName",
														"src": "354:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "362:5:8",
														"nodeType": "YulTypedName",
														"src": "362:5:8",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "369:4:8",
														"nodeType": "YulTypedName",
														"src": "369:4:8",
														"type": ""
													}
												],
												"src": "301:848:8"
											},
											{
												"body": {
													"nativeSrc": "1215:1013:8",
													"nodeType": "YulBlock",
													"src": "1215:1013:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1410:20:8",
																"nodeType": "YulBlock",
																"src": "1410:20:8",
																"statements": [
																	{
																		"nativeSrc": "1412:10:8",
																		"nodeType": "YulAssignment",
																		"src": "1412:10:8",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "1421:1:8",
																			"nodeType": "YulLiteral",
																			"src": "1421:1:8",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "1412:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1412:5:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "1423:5:8",
																		"nodeType": "YulLeave",
																		"src": "1423:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "1400:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "1400:8:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1393:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1393:6:8"
																},
																"nativeSrc": "1393:16:8",
																"nodeType": "YulFunctionCall",
																"src": "1393:16:8"
															},
															"nativeSrc": "1390:40:8",
															"nodeType": "YulIf",
															"src": "1390:40:8"
														},
														{
															"body": {
																"nativeSrc": "1455:20:8",
																"nodeType": "YulBlock",
																"src": "1455:20:8",
																"statements": [
																	{
																		"nativeSrc": "1457:10:8",
																		"nodeType": "YulAssignment",
																		"src": "1457:10:8",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "1466:1:8",
																			"nodeType": "YulLiteral",
																			"src": "1466:1:8",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "1457:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1457:5:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "1468:5:8",
																		"nodeType": "YulLeave",
																		"src": "1468:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "1449:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1449:4:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1442:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:8"
																},
																"nativeSrc": "1442:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1442:12:8"
															},
															"nativeSrc": "1439:36:8",
															"nodeType": "YulIf",
															"src": "1439:36:8"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1585:20:8",
																		"nodeType": "YulBlock",
																		"src": "1585:20:8",
																		"statements": [
																			{
																				"nativeSrc": "1587:10:8",
																				"nodeType": "YulAssignment",
																				"src": "1587:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "1596:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1596:1:8",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "1587:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1587:5:8"
																					}
																				]
																			},
																			{
																				"nativeSrc": "1598:5:8",
																				"nodeType": "YulLeave",
																				"src": "1598:5:8"
																			}
																		]
																	},
																	"nativeSrc": "1578:27:8",
																	"nodeType": "YulCase",
																	"src": "1578:27:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1583:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1583:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "1629:176:8",
																		"nodeType": "YulBlock",
																		"src": "1629:176:8",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "1664:22:8",
																					"nodeType": "YulBlock",
																					"src": "1664:22:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "1666:16:8",
																									"nodeType": "YulIdentifier",
																									"src": "1666:16:8"
																								},
																								"nativeSrc": "1666:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "1666:18:8"
																							},
																							"nativeSrc": "1666:18:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "1666:18:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "1649:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "1649:8:8"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1659:3:8",
																							"nodeType": "YulLiteral",
																							"src": "1659:3:8",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "1646:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "1646:2:8"
																					},
																					"nativeSrc": "1646:17:8",
																					"nodeType": "YulFunctionCall",
																					"src": "1646:17:8"
																				},
																				"nativeSrc": "1643:43:8",
																				"nodeType": "YulIf",
																				"src": "1643:43:8"
																			},
																			{
																				"nativeSrc": "1699:25:8",
																				"nodeType": "YulAssignment",
																				"src": "1699:25:8",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1712:1:8",
																							"nodeType": "YulLiteral",
																							"src": "1712:1:8",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "1715:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "1715:8:8"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "1708:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "1708:3:8"
																					},
																					"nativeSrc": "1708:16:8",
																					"nodeType": "YulFunctionCall",
																					"src": "1708:16:8"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "1699:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1699:5:8"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "1755:22:8",
																					"nodeType": "YulBlock",
																					"src": "1755:22:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "1757:16:8",
																									"nodeType": "YulIdentifier",
																									"src": "1757:16:8"
																								},
																								"nativeSrc": "1757:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "1757:18:8"
																							},
																							"nativeSrc": "1757:18:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "1757:18:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "1743:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "1743:5:8"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "1750:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "1750:3:8"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "1740:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "1740:2:8"
																					},
																					"nativeSrc": "1740:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "1740:14:8"
																				},
																				"nativeSrc": "1737:40:8",
																				"nodeType": "YulIf",
																				"src": "1737:40:8"
																			},
																			{
																				"nativeSrc": "1790:5:8",
																				"nodeType": "YulLeave",
																				"src": "1790:5:8"
																			}
																		]
																	},
																	"nativeSrc": "1614:191:8",
																	"nodeType": "YulCase",
																	"src": "1614:191:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1619:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1619:1:8",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "1535:4:8",
																"nodeType": "YulIdentifier",
																"src": "1535:4:8"
															},
															"nativeSrc": "1528:277:8",
															"nodeType": "YulSwitch",
															"src": "1528:277:8"
														},
														{
															"body": {
																"nativeSrc": "1937:123:8",
																"nodeType": "YulBlock",
																"src": "1937:123:8",
																"statements": [
																	{
																		"nativeSrc": "1951:28:8",
																		"nodeType": "YulAssignment",
																		"src": "1951:28:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "1964:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "1964:4:8"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "1970:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "1970:8:8"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "1960:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "1960:3:8"
																			},
																			"nativeSrc": "1960:19:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1960:19:8"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "1951:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1951:5:8"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2010:22:8",
																			"nodeType": "YulBlock",
																			"src": "2010:22:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "2012:16:8",
																							"nodeType": "YulIdentifier",
																							"src": "2012:16:8"
																						},
																						"nativeSrc": "2012:18:8",
																						"nodeType": "YulFunctionCall",
																						"src": "2012:18:8"
																					},
																					"nativeSrc": "2012:18:8",
																					"nodeType": "YulExpressionStatement",
																					"src": "2012:18:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "1998:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "1998:5:8"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "2005:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2005:3:8"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "1995:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "1995:2:8"
																			},
																			"nativeSrc": "1995:14:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1995:14:8"
																		},
																		"nativeSrc": "1992:40:8",
																		"nodeType": "YulIf",
																		"src": "1992:40:8"
																	},
																	{
																		"nativeSrc": "2045:5:8",
																		"nodeType": "YulLeave",
																		"src": "2045:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "1840:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "1840:4:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1846:2:8",
																						"nodeType": "YulLiteral",
																						"src": "1846:2:8",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "1837:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "1837:2:8"
																				},
																				"nativeSrc": "1837:12:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1837:12:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "1854:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "1854:8:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1864:2:8",
																						"nodeType": "YulLiteral",
																						"src": "1864:2:8",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "1851:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "1851:2:8"
																				},
																				"nativeSrc": "1851:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1851:16:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1833:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1833:3:8"
																		},
																		"nativeSrc": "1833:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1833:35:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "1889:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "1889:4:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1895:3:8",
																						"nodeType": "YulLiteral",
																						"src": "1895:3:8",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "1886:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "1886:2:8"
																				},
																				"nativeSrc": "1886:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1886:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "1904:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "1904:8:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1914:2:8",
																						"nodeType": "YulLiteral",
																						"src": "1914:2:8",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "1901:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "1901:2:8"
																				},
																				"nativeSrc": "1901:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1901:16:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1882:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1882:3:8"
																		},
																		"nativeSrc": "1882:36:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1882:36:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1817:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1817:2:8"
																},
																"nativeSrc": "1817:111:8",
																"nodeType": "YulFunctionCall",
																"src": "1817:111:8"
															},
															"nativeSrc": "1814:246:8",
															"nodeType": "YulIf",
															"src": "1814:246:8"
														},
														{
															"nativeSrc": "2070:57:8",
															"nodeType": "YulAssignment",
															"src": "2070:57:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2104:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2104:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "2107:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2107:4:8"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "2113:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "2113:8:8"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "2123:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2123:3:8"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "2085:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "2085:18:8"
																},
																"nativeSrc": "2085:42:8",
																"nodeType": "YulFunctionCall",
																"src": "2085:42:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "2070:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2070:5:8"
																},
																{
																	"name": "base",
																	"nativeSrc": "2077:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2077:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2166:22:8",
																"nodeType": "YulBlock",
																"src": "2166:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2168:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "2168:16:8"
																			},
																			"nativeSrc": "2168:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2168:18:8"
																		},
																		"nativeSrc": "2168:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2168:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "2143:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2143:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "2154:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2154:3:8"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "2159:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "2159:4:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "2150:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2150:3:8"
																		},
																		"nativeSrc": "2150:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2150:14:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2140:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2140:2:8"
																},
																"nativeSrc": "2140:25:8",
																"nodeType": "YulFunctionCall",
																"src": "2140:25:8"
															},
															"nativeSrc": "2137:51:8",
															"nodeType": "YulIf",
															"src": "2137:51:8"
														},
														{
															"nativeSrc": "2197:25:8",
															"nodeType": "YulAssignment",
															"src": "2197:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "2210:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2210:5:8"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "2217:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2217:4:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2206:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2206:3:8"
																},
																"nativeSrc": "2206:16:8",
																"nodeType": "YulFunctionCall",
																"src": "2206:16:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "2197:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2197:5:8"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "1155:1073:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "1185:4:8",
														"nodeType": "YulTypedName",
														"src": "1185:4:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "1191:8:8",
														"nodeType": "YulTypedName",
														"src": "1191:8:8",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "1201:3:8",
														"nodeType": "YulTypedName",
														"src": "1201:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "1209:5:8",
														"nodeType": "YulTypedName",
														"src": "1209:5:8",
														"type": ""
													}
												],
												"src": "1155:1073:8"
											},
											{
												"body": {
													"nativeSrc": "2279:32:8",
													"nodeType": "YulBlock",
													"src": "2279:32:8",
													"statements": [
														{
															"nativeSrc": "2289:16:8",
															"nodeType": "YulAssignment",
															"src": "2289:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "2300:5:8",
																"nodeType": "YulIdentifier",
																"src": "2300:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2289:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2289:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2234:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2261:5:8",
														"nodeType": "YulTypedName",
														"src": "2261:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2271:7:8",
														"nodeType": "YulTypedName",
														"src": "2271:7:8",
														"type": ""
													}
												],
												"src": "2234:77:8"
											},
											{
												"body": {
													"nativeSrc": "2360:43:8",
													"nodeType": "YulBlock",
													"src": "2360:43:8",
													"statements": [
														{
															"nativeSrc": "2370:27:8",
															"nodeType": "YulAssignment",
															"src": "2370:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2385:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2385:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2392:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2392:4:8",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2381:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2381:3:8"
																},
																"nativeSrc": "2381:16:8",
																"nodeType": "YulFunctionCall",
																"src": "2381:16:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2370:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2370:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "2317:86:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2342:5:8",
														"nodeType": "YulTypedName",
														"src": "2342:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2352:7:8",
														"nodeType": "YulTypedName",
														"src": "2352:7:8",
														"type": ""
													}
												],
												"src": "2317:86:8"
											},
											{
												"body": {
													"nativeSrc": "2473:217:8",
													"nodeType": "YulBlock",
													"src": "2473:217:8",
													"statements": [
														{
															"nativeSrc": "2483:31:8",
															"nodeType": "YulAssignment",
															"src": "2483:31:8",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "2509:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2509:4:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2491:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "2491:17:8"
																},
																"nativeSrc": "2491:23:8",
																"nodeType": "YulFunctionCall",
																"src": "2491:23:8"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "2483:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2483:4:8"
																}
															]
														},
														{
															"nativeSrc": "2523:37:8",
															"nodeType": "YulAssignment",
															"src": "2523:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "2551:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "2551:8:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "2535:15:8",
																	"nodeType": "YulIdentifier",
																	"src": "2535:15:8"
																},
																"nativeSrc": "2535:25:8",
																"nodeType": "YulFunctionCall",
																"src": "2535:25:8"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "2523:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "2523:8:8"
																}
															]
														},
														{
															"nativeSrc": "2570:113:8",
															"nodeType": "YulAssignment",
															"src": "2570:113:8",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "2600:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2600:4:8"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "2606:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "2606:8:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2616:66:8",
																		"nodeType": "YulLiteral",
																		"src": "2616:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "2579:20:8",
																	"nodeType": "YulIdentifier",
																	"src": "2579:20:8"
																},
																"nativeSrc": "2579:104:8",
																"nodeType": "YulFunctionCall",
																"src": "2579:104:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "2570:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2570:5:8"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "2409:281:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "2448:4:8",
														"nodeType": "YulTypedName",
														"src": "2448:4:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "2454:8:8",
														"nodeType": "YulTypedName",
														"src": "2454:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "2467:5:8",
														"nodeType": "YulTypedName",
														"src": "2467:5:8",
														"type": ""
													}
												],
												"src": "2409:281:8"
											},
											{
												"body": {
													"nativeSrc": "2744:362:8",
													"nodeType": "YulBlock",
													"src": "2744:362:8",
													"statements": [
														{
															"nativeSrc": "2754:25:8",
															"nodeType": "YulAssignment",
															"src": "2754:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2777:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "2777:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2759:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "2759:17:8"
																},
																"nativeSrc": "2759:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2759:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "2754:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "2754:1:8"
																}
															]
														},
														{
															"nativeSrc": "2788:25:8",
															"nodeType": "YulAssignment",
															"src": "2788:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2811:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "2811:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2793:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "2793:17:8"
																},
																"nativeSrc": "2793:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2793:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "2788:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "2788:1:8"
																}
															]
														},
														{
															"nativeSrc": "2822:28:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2822:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2845:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "2845:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2848:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "2848:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2841:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2841:3:8"
																},
																"nativeSrc": "2841:9:8",
																"nodeType": "YulFunctionCall",
																"src": "2841:9:8"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "2826:11:8",
																	"nodeType": "YulTypedName",
																	"src": "2826:11:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2859:41:8",
															"nodeType": "YulAssignment",
															"src": "2859:41:8",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "2888:11:8",
																		"nodeType": "YulIdentifier",
																		"src": "2888:11:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2870:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "2870:17:8"
																},
																"nativeSrc": "2870:30:8",
																"nodeType": "YulFunctionCall",
																"src": "2870:30:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "2859:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2859:7:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3077:22:8",
																"nodeType": "YulBlock",
																"src": "3077:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3079:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "3079:16:8"
																			},
																			"nativeSrc": "3079:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3079:18:8"
																		},
																		"nativeSrc": "3079:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3079:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "3010:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "3010:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3003:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "3003:6:8"
																				},
																				"nativeSrc": "3003:9:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3003:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "3033:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "3033:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "3040:7:8",
																								"nodeType": "YulIdentifier",
																								"src": "3040:7:8"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "3049:1:8",
																								"nodeType": "YulIdentifier",
																								"src": "3049:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "3036:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "3036:3:8"
																						},
																						"nativeSrc": "3036:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "3036:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "3030:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "3030:2:8"
																				},
																				"nativeSrc": "3030:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3030:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "2983:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2983:2:8"
																		},
																		"nativeSrc": "2983:83:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2983:83:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2963:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2963:6:8"
																},
																"nativeSrc": "2963:113:8",
																"nodeType": "YulFunctionCall",
																"src": "2963:113:8"
															},
															"nativeSrc": "2960:139:8",
															"nodeType": "YulIf",
															"src": "2960:139:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "2696:410:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2727:1:8",
														"nodeType": "YulTypedName",
														"src": "2727:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2730:1:8",
														"nodeType": "YulTypedName",
														"src": "2730:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "2736:7:8",
														"nodeType": "YulTypedName",
														"src": "2736:7:8",
														"type": ""
													}
												],
												"src": "2696:410:8"
											},
											{
												"body": {
													"nativeSrc": "3171:40:8",
													"nodeType": "YulBlock",
													"src": "3171:40:8",
													"statements": [
														{
															"nativeSrc": "3182:22:8",
															"nodeType": "YulAssignment",
															"src": "3182:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3198:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3192:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "3192:5:8"
																},
																"nativeSrc": "3192:12:8",
																"nodeType": "YulFunctionCall",
																"src": "3192:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3182:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3182:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "3112:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3154:5:8",
														"nodeType": "YulTypedName",
														"src": "3154:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3164:6:8",
														"nodeType": "YulTypedName",
														"src": "3164:6:8",
														"type": ""
													}
												],
												"src": "3112:99:8"
											},
											{
												"body": {
													"nativeSrc": "3245:152:8",
													"nodeType": "YulBlock",
													"src": "3245:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3262:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3262:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3265:77:8",
																		"nodeType": "YulLiteral",
																		"src": "3265:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3255:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3255:6:8"
																},
																"nativeSrc": "3255:88:8",
																"nodeType": "YulFunctionCall",
																"src": "3255:88:8"
															},
															"nativeSrc": "3255:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "3255:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3359:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3359:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3362:4:8",
																		"nodeType": "YulLiteral",
																		"src": "3362:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3352:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3352:6:8"
																},
																"nativeSrc": "3352:15:8",
																"nodeType": "YulFunctionCall",
																"src": "3352:15:8"
															},
															"nativeSrc": "3352:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "3352:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3383:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3383:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3386:4:8",
																		"nodeType": "YulLiteral",
																		"src": "3386:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3376:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3376:6:8"
																},
																"nativeSrc": "3376:15:8",
																"nodeType": "YulFunctionCall",
																"src": "3376:15:8"
															},
															"nativeSrc": "3376:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "3376:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "3217:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "3217:180:8"
											},
											{
												"body": {
													"nativeSrc": "3431:152:8",
													"nodeType": "YulBlock",
													"src": "3431:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3448:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3448:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3451:77:8",
																		"nodeType": "YulLiteral",
																		"src": "3451:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3441:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3441:6:8"
																},
																"nativeSrc": "3441:88:8",
																"nodeType": "YulFunctionCall",
																"src": "3441:88:8"
															},
															"nativeSrc": "3441:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "3441:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3545:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3545:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3548:4:8",
																		"nodeType": "YulLiteral",
																		"src": "3548:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3538:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3538:6:8"
																},
																"nativeSrc": "3538:15:8",
																"nodeType": "YulFunctionCall",
																"src": "3538:15:8"
															},
															"nativeSrc": "3538:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "3538:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3569:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3569:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3572:4:8",
																		"nodeType": "YulLiteral",
																		"src": "3572:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3562:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3562:6:8"
																},
																"nativeSrc": "3562:15:8",
																"nodeType": "YulFunctionCall",
																"src": "3562:15:8"
															},
															"nativeSrc": "3562:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "3562:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "3403:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "3403:180:8"
											},
											{
												"body": {
													"nativeSrc": "3640:269:8",
													"nodeType": "YulBlock",
													"src": "3640:269:8",
													"statements": [
														{
															"nativeSrc": "3650:22:8",
															"nodeType": "YulAssignment",
															"src": "3650:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3664:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3664:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3670:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3670:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3660:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3660:3:8"
																},
																"nativeSrc": "3660:12:8",
																"nodeType": "YulFunctionCall",
																"src": "3660:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3650:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3650:6:8"
																}
															]
														},
														{
															"nativeSrc": "3681:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3681:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3711:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3711:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3717:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3717:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3707:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3707:3:8"
																},
																"nativeSrc": "3707:12:8",
																"nodeType": "YulFunctionCall",
																"src": "3707:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "3685:18:8",
																	"nodeType": "YulTypedName",
																	"src": "3685:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3758:51:8",
																"nodeType": "YulBlock",
																"src": "3758:51:8",
																"statements": [
																	{
																		"nativeSrc": "3772:27:8",
																		"nodeType": "YulAssignment",
																		"src": "3772:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "3786:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "3786:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3794:4:8",
																					"nodeType": "YulLiteral",
																					"src": "3794:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3782:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "3782:3:8"
																			},
																			"nativeSrc": "3782:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3782:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "3772:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3772:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3738:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "3738:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3731:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3731:6:8"
																},
																"nativeSrc": "3731:26:8",
																"nodeType": "YulFunctionCall",
																"src": "3731:26:8"
															},
															"nativeSrc": "3728:81:8",
															"nodeType": "YulIf",
															"src": "3728:81:8"
														},
														{
															"body": {
																"nativeSrc": "3861:42:8",
																"nodeType": "YulBlock",
																"src": "3861:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "3875:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "3875:16:8"
																			},
																			"nativeSrc": "3875:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3875:18:8"
																		},
																		"nativeSrc": "3875:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3875:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3825:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "3825:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3848:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3848:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3856:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3856:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3845:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "3845:2:8"
																		},
																		"nativeSrc": "3845:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3845:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3822:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "3822:2:8"
																},
																"nativeSrc": "3822:38:8",
																"nodeType": "YulFunctionCall",
																"src": "3822:38:8"
															},
															"nativeSrc": "3819:84:8",
															"nodeType": "YulIf",
															"src": "3819:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3589:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3624:4:8",
														"nodeType": "YulTypedName",
														"src": "3624:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3633:6:8",
														"nodeType": "YulTypedName",
														"src": "3633:6:8",
														"type": ""
													}
												],
												"src": "3589:320:8"
											},
											{
												"body": {
													"nativeSrc": "3969:87:8",
													"nodeType": "YulBlock",
													"src": "3969:87:8",
													"statements": [
														{
															"nativeSrc": "3979:11:8",
															"nodeType": "YulAssignment",
															"src": "3979:11:8",
															"value": {
																"name": "ptr",
																"nativeSrc": "3987:3:8",
																"nodeType": "YulIdentifier",
																"src": "3987:3:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3979:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3979:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4007:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4007:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4010:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4010:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4000:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4000:6:8"
																},
																"nativeSrc": "4000:14:8",
																"nodeType": "YulFunctionCall",
																"src": "4000:14:8"
															},
															"nativeSrc": "4000:14:8",
															"nodeType": "YulExpressionStatement",
															"src": "4000:14:8"
														},
														{
															"nativeSrc": "4023:26:8",
															"nodeType": "YulAssignment",
															"src": "4023:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4041:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4041:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4044:4:8",
																		"nodeType": "YulLiteral",
																		"src": "4044:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4031:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "4031:9:8"
																},
																"nativeSrc": "4031:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4031:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4023:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4023:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "3915:141:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "3956:3:8",
														"nodeType": "YulTypedName",
														"src": "3956:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "3964:4:8",
														"nodeType": "YulTypedName",
														"src": "3964:4:8",
														"type": ""
													}
												],
												"src": "3915:141:8"
											},
											{
												"body": {
													"nativeSrc": "4106:49:8",
													"nodeType": "YulBlock",
													"src": "4106:49:8",
													"statements": [
														{
															"nativeSrc": "4116:33:8",
															"nodeType": "YulAssignment",
															"src": "4116:33:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4134:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4134:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4141:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4141:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4130:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4130:3:8"
																		},
																		"nativeSrc": "4130:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4130:14:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4146:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4146:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4126:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4126:3:8"
																},
																"nativeSrc": "4126:23:8",
																"nodeType": "YulFunctionCall",
																"src": "4126:23:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4116:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4116:6:8"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "4062:93:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4089:5:8",
														"nodeType": "YulTypedName",
														"src": "4089:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4099:6:8",
														"nodeType": "YulTypedName",
														"src": "4099:6:8",
														"type": ""
													}
												],
												"src": "4062:93:8"
											},
											{
												"body": {
													"nativeSrc": "4214:54:8",
													"nodeType": "YulBlock",
													"src": "4214:54:8",
													"statements": [
														{
															"nativeSrc": "4224:37:8",
															"nodeType": "YulAssignment",
															"src": "4224:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4249:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4255:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4255:5:8"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "4245:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4245:3:8"
																},
																"nativeSrc": "4245:16:8",
																"nodeType": "YulFunctionCall",
																"src": "4245:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4224:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "4224:8:8"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "4161:107:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4189:4:8",
														"nodeType": "YulTypedName",
														"src": "4189:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4195:5:8",
														"nodeType": "YulTypedName",
														"src": "4195:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4205:8:8",
														"nodeType": "YulTypedName",
														"src": "4205:8:8",
														"type": ""
													}
												],
												"src": "4161:107:8"
											},
											{
												"body": {
													"nativeSrc": "4350:317:8",
													"nodeType": "YulBlock",
													"src": "4350:317:8",
													"statements": [
														{
															"nativeSrc": "4360:35:8",
															"nodeType": "YulVariableDeclaration",
															"src": "4360:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "4381:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "4381:10:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4393:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4393:1:8",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4377:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4377:3:8"
																},
																"nativeSrc": "4377:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4377:18:8"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "4364:9:8",
																	"nodeType": "YulTypedName",
																	"src": "4364:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4404:109:8",
															"nodeType": "YulVariableDeclaration",
															"src": "4404:109:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4435:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4435:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4446:66:8",
																		"nodeType": "YulLiteral",
																		"src": "4446:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4416:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "4416:18:8"
																},
																"nativeSrc": "4416:97:8",
																"nodeType": "YulFunctionCall",
																"src": "4416:97:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4408:4:8",
																	"nodeType": "YulTypedName",
																	"src": "4408:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4522:51:8",
															"nodeType": "YulAssignment",
															"src": "4522:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4553:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4553:9:8"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "4564:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "4564:8:8"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4534:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "4534:18:8"
																},
																"nativeSrc": "4534:39:8",
																"nodeType": "YulFunctionCall",
																"src": "4534:39:8"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "4522:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "4522:8:8"
																}
															]
														},
														{
															"nativeSrc": "4582:30:8",
															"nodeType": "YulAssignment",
															"src": "4582:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4595:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4595:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "4606:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "4606:4:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "4602:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4602:3:8"
																		},
																		"nativeSrc": "4602:9:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4602:9:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4591:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4591:3:8"
																},
																"nativeSrc": "4591:21:8",
																"nodeType": "YulFunctionCall",
																"src": "4591:21:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4582:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "4582:5:8"
																}
															]
														},
														{
															"nativeSrc": "4621:40:8",
															"nodeType": "YulAssignment",
															"src": "4621:40:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4634:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4634:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "4645:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "4645:8:8"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "4655:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "4655:4:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4641:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4641:3:8"
																		},
																		"nativeSrc": "4641:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4641:19:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4631:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4631:2:8"
																},
																"nativeSrc": "4631:30:8",
																"nodeType": "YulFunctionCall",
																"src": "4631:30:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4621:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4621:6:8"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "4274:393:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4311:5:8",
														"nodeType": "YulTypedName",
														"src": "4311:5:8",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "4318:10:8",
														"nodeType": "YulTypedName",
														"src": "4318:10:8",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "4330:8:8",
														"nodeType": "YulTypedName",
														"src": "4330:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4343:6:8",
														"nodeType": "YulTypedName",
														"src": "4343:6:8",
														"type": ""
													}
												],
												"src": "4274:393:8"
											},
											{
												"body": {
													"nativeSrc": "4705:28:8",
													"nodeType": "YulBlock",
													"src": "4705:28:8",
													"statements": [
														{
															"nativeSrc": "4715:12:8",
															"nodeType": "YulAssignment",
															"src": "4715:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "4722:5:8",
																"nodeType": "YulIdentifier",
																"src": "4722:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4715:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4715:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4673:60:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4691:5:8",
														"nodeType": "YulTypedName",
														"src": "4691:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4701:3:8",
														"nodeType": "YulTypedName",
														"src": "4701:3:8",
														"type": ""
													}
												],
												"src": "4673:60:8"
											},
											{
												"body": {
													"nativeSrc": "4799:82:8",
													"nodeType": "YulBlock",
													"src": "4799:82:8",
													"statements": [
														{
															"nativeSrc": "4809:66:8",
															"nodeType": "YulAssignment",
															"src": "4809:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4867:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "4867:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "4849:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "4849:17:8"
																				},
																				"nativeSrc": "4849:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4849:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "4840:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "4840:8:8"
																		},
																		"nativeSrc": "4840:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4840:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4822:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "4822:17:8"
																},
																"nativeSrc": "4822:53:8",
																"nodeType": "YulFunctionCall",
																"src": "4822:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4809:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "4809:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "4739:142:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4779:5:8",
														"nodeType": "YulTypedName",
														"src": "4779:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4789:9:8",
														"nodeType": "YulTypedName",
														"src": "4789:9:8",
														"type": ""
													}
												],
												"src": "4739:142:8"
											},
											{
												"body": {
													"nativeSrc": "4934:28:8",
													"nodeType": "YulBlock",
													"src": "4934:28:8",
													"statements": [
														{
															"nativeSrc": "4944:12:8",
															"nodeType": "YulAssignment",
															"src": "4944:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "4951:5:8",
																"nodeType": "YulIdentifier",
																"src": "4951:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4944:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4944:3:8"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "4887:75:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4920:5:8",
														"nodeType": "YulTypedName",
														"src": "4920:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4930:3:8",
														"nodeType": "YulTypedName",
														"src": "4930:3:8",
														"type": ""
													}
												],
												"src": "4887:75:8"
											},
											{
												"body": {
													"nativeSrc": "5044:193:8",
													"nodeType": "YulBlock",
													"src": "5044:193:8",
													"statements": [
														{
															"nativeSrc": "5054:63:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5054:63:8",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "5109:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "5109:7:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "5078:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "5078:30:8"
																},
																"nativeSrc": "5078:39:8",
																"nodeType": "YulFunctionCall",
																"src": "5078:39:8"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "5058:16:8",
																	"nodeType": "YulTypedName",
																	"src": "5058:16:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5133:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5133:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "5173:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "5173:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "5167:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "5167:5:8"
																				},
																				"nativeSrc": "5167:11:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5167:11:8"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "5180:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5180:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "5212:16:8",
																						"nodeType": "YulIdentifier",
																						"src": "5212:16:8"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "5188:23:8",
																					"nodeType": "YulIdentifier",
																					"src": "5188:23:8"
																				},
																				"nativeSrc": "5188:41:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5188:41:8"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "5139:27:8",
																			"nodeType": "YulIdentifier",
																			"src": "5139:27:8"
																		},
																		"nativeSrc": "5139:91:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5139:91:8"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "5126:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5126:6:8"
																},
																"nativeSrc": "5126:105:8",
																"nodeType": "YulFunctionCall",
																"src": "5126:105:8"
															},
															"nativeSrc": "5126:105:8",
															"nodeType": "YulExpressionStatement",
															"src": "5126:105:8"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "4968:269:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5021:4:8",
														"nodeType": "YulTypedName",
														"src": "5021:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5027:6:8",
														"nodeType": "YulTypedName",
														"src": "5027:6:8",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "5035:7:8",
														"nodeType": "YulTypedName",
														"src": "5035:7:8",
														"type": ""
													}
												],
												"src": "4968:269:8"
											},
											{
												"body": {
													"nativeSrc": "5292:24:8",
													"nodeType": "YulBlock",
													"src": "5292:24:8",
													"statements": [
														{
															"nativeSrc": "5302:8:8",
															"nodeType": "YulAssignment",
															"src": "5302:8:8",
															"value": {
																"kind": "number",
																"nativeSrc": "5309:1:8",
																"nodeType": "YulLiteral",
																"src": "5309:1:8",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5302:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5302:3:8"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "5243:73:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5288:3:8",
														"nodeType": "YulTypedName",
														"src": "5288:3:8",
														"type": ""
													}
												],
												"src": "5243:73:8"
											},
											{
												"body": {
													"nativeSrc": "5375:136:8",
													"nodeType": "YulBlock",
													"src": "5375:136:8",
													"statements": [
														{
															"nativeSrc": "5385:46:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5385:46:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "5399:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "5399:30:8"
																},
																"nativeSrc": "5399:32:8",
																"nodeType": "YulFunctionCall",
																"src": "5399:32:8"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "5389:6:8",
																	"nodeType": "YulTypedName",
																	"src": "5389:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5484:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5484:4:8"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "5490:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5490:6:8"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "5498:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5498:6:8"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "5440:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "5440:43:8"
																},
																"nativeSrc": "5440:65:8",
																"nodeType": "YulFunctionCall",
																"src": "5440:65:8"
															},
															"nativeSrc": "5440:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "5440:65:8"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "5322:189:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5361:4:8",
														"nodeType": "YulTypedName",
														"src": "5361:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5367:6:8",
														"nodeType": "YulTypedName",
														"src": "5367:6:8",
														"type": ""
													}
												],
												"src": "5322:189:8"
											},
											{
												"body": {
													"nativeSrc": "5567:136:8",
													"nodeType": "YulBlock",
													"src": "5567:136:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5634:63:8",
																"nodeType": "YulBlock",
																"src": "5634:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5678:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "5678:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5685:1:8",
																					"nodeType": "YulLiteral",
																					"src": "5685:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "5648:29:8",
																				"nodeType": "YulIdentifier",
																				"src": "5648:29:8"
																			},
																			"nativeSrc": "5648:39:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5648:39:8"
																		},
																		"nativeSrc": "5648:39:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5648:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "5587:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "5587:5:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5594:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5594:3:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "5584:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5584:2:8"
																},
																"nativeSrc": "5584:14:8",
																"nodeType": "YulFunctionCall",
																"src": "5584:14:8"
															},
															"nativeSrc": "5577:120:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5599:26:8",
																"nodeType": "YulBlock",
																"src": "5599:26:8",
																"statements": [
																	{
																		"nativeSrc": "5601:22:8",
																		"nodeType": "YulAssignment",
																		"src": "5601:22:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5614:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "5614:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5621:1:8",
																					"nodeType": "YulLiteral",
																					"src": "5621:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5610:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "5610:3:8"
																			},
																			"nativeSrc": "5610:13:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5610:13:8"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "5601:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5601:5:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "5581:2:8",
																"nodeType": "YulBlock",
																"src": "5581:2:8",
																"statements": []
															},
															"src": "5577:120:8"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "5517:186:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "5555:5:8",
														"nodeType": "YulTypedName",
														"src": "5555:5:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5562:3:8",
														"nodeType": "YulTypedName",
														"src": "5562:3:8",
														"type": ""
													}
												],
												"src": "5517:186:8"
											},
											{
												"body": {
													"nativeSrc": "5788:464:8",
													"nodeType": "YulBlock",
													"src": "5788:464:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5814:431:8",
																"nodeType": "YulBlock",
																"src": "5814:431:8",
																"statements": [
																	{
																		"nativeSrc": "5828:54:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5828:54:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "5876:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "5876:5:8"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "5844:31:8",
																				"nodeType": "YulIdentifier",
																				"src": "5844:31:8"
																			},
																			"nativeSrc": "5844:38:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5844:38:8"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "5832:8:8",
																				"nodeType": "YulTypedName",
																				"src": "5832:8:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "5895:63:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5895:63:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "5918:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "5918:8:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "5946:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "5946:10:8"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "5928:17:8",
																						"nodeType": "YulIdentifier",
																						"src": "5928:17:8"
																					},
																					"nativeSrc": "5928:29:8",
																					"nodeType": "YulFunctionCall",
																					"src": "5928:29:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5914:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "5914:3:8"
																			},
																			"nativeSrc": "5914:44:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5914:44:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "5899:11:8",
																				"nodeType": "YulTypedName",
																				"src": "5899:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6115:27:8",
																			"nodeType": "YulBlock",
																			"src": "6115:27:8",
																			"statements": [
																				{
																					"nativeSrc": "6117:23:8",
																					"nodeType": "YulAssignment",
																					"src": "6117:23:8",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "6132:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "6132:8:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "6117:11:8",
																							"nodeType": "YulIdentifier",
																							"src": "6117:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "6099:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "6099:10:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6111:2:8",
																					"nodeType": "YulLiteral",
																					"src": "6111:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6096:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "6096:2:8"
																			},
																			"nativeSrc": "6096:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:18:8"
																		},
																		"nativeSrc": "6093:49:8",
																		"nodeType": "YulIf",
																		"src": "6093:49:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "6184:11:8",
																					"nodeType": "YulIdentifier",
																					"src": "6184:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "6201:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "6201:8:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "6229:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "6229:3:8"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "6211:17:8",
																								"nodeType": "YulIdentifier",
																								"src": "6211:17:8"
																							},
																							"nativeSrc": "6211:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "6211:22:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6197:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "6197:3:8"
																					},
																					"nativeSrc": "6197:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6197:37:8"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "6155:28:8",
																				"nodeType": "YulIdentifier",
																				"src": "6155:28:8"
																			},
																			"nativeSrc": "6155:80:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6155:80:8"
																		},
																		"nativeSrc": "6155:80:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6155:80:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "5805:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5805:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5810:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5810:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5802:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5802:2:8"
																},
																"nativeSrc": "5802:11:8",
																"nodeType": "YulFunctionCall",
																"src": "5802:11:8"
															},
															"nativeSrc": "5799:446:8",
															"nodeType": "YulIf",
															"src": "5799:446:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "5709:543:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "5764:5:8",
														"nodeType": "YulTypedName",
														"src": "5764:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5771:3:8",
														"nodeType": "YulTypedName",
														"src": "5771:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "5776:10:8",
														"nodeType": "YulTypedName",
														"src": "5776:10:8",
														"type": ""
													}
												],
												"src": "5709:543:8"
											},
											{
												"body": {
													"nativeSrc": "6321:54:8",
													"nodeType": "YulBlock",
													"src": "6321:54:8",
													"statements": [
														{
															"nativeSrc": "6331:37:8",
															"nodeType": "YulAssignment",
															"src": "6331:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "6356:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6356:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6362:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "6362:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6352:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6352:3:8"
																},
																"nativeSrc": "6352:16:8",
																"nodeType": "YulFunctionCall",
																"src": "6352:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6331:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "6331:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "6258:117:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "6296:4:8",
														"nodeType": "YulTypedName",
														"src": "6296:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "6302:5:8",
														"nodeType": "YulTypedName",
														"src": "6302:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6312:8:8",
														"nodeType": "YulTypedName",
														"src": "6312:8:8",
														"type": ""
													}
												],
												"src": "6258:117:8"
											},
											{
												"body": {
													"nativeSrc": "6432:118:8",
													"nodeType": "YulBlock",
													"src": "6432:118:8",
													"statements": [
														{
															"nativeSrc": "6442:68:8",
															"nodeType": "YulVariableDeclaration",
															"src": "6442:68:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6491:1:8",
																						"nodeType": "YulLiteral",
																						"src": "6491:1:8",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "6494:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "6494:5:8"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "6487:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6487:3:8"
																				},
																				"nativeSrc": "6487:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6487:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6506:1:8",
																						"nodeType": "YulLiteral",
																						"src": "6506:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "6502:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6502:3:8"
																				},
																				"nativeSrc": "6502:6:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6502:6:8"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "6458:28:8",
																			"nodeType": "YulIdentifier",
																			"src": "6458:28:8"
																		},
																		"nativeSrc": "6458:51:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6458:51:8"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "6454:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6454:3:8"
																},
																"nativeSrc": "6454:56:8",
																"nodeType": "YulFunctionCall",
																"src": "6454:56:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "6446:4:8",
																	"nodeType": "YulTypedName",
																	"src": "6446:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6519:25:8",
															"nodeType": "YulAssignment",
															"src": "6519:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6533:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6533:4:8"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "6539:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6539:4:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6529:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6529:3:8"
																},
																"nativeSrc": "6529:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6529:15:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "6519:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6519:6:8"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "6381:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6409:4:8",
														"nodeType": "YulTypedName",
														"src": "6409:4:8",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "6415:5:8",
														"nodeType": "YulTypedName",
														"src": "6415:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "6425:6:8",
														"nodeType": "YulTypedName",
														"src": "6425:6:8",
														"type": ""
													}
												],
												"src": "6381:169:8"
											},
											{
												"body": {
													"nativeSrc": "6636:214:8",
													"nodeType": "YulBlock",
													"src": "6636:214:8",
													"statements": [
														{
															"nativeSrc": "6769:37:8",
															"nodeType": "YulAssignment",
															"src": "6769:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6796:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6796:4:8"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "6802:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6802:3:8"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "6777:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "6777:18:8"
																},
																"nativeSrc": "6777:29:8",
																"nodeType": "YulFunctionCall",
																"src": "6777:29:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6769:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6769:4:8"
																}
															]
														},
														{
															"nativeSrc": "6815:29:8",
															"nodeType": "YulAssignment",
															"src": "6815:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6826:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6826:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6836:1:8",
																				"nodeType": "YulLiteral",
																				"src": "6836:1:8",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "6839:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "6839:3:8"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "6832:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6832:3:8"
																		},
																		"nativeSrc": "6832:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6832:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6823:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "6823:2:8"
																},
																"nativeSrc": "6823:21:8",
																"nodeType": "YulFunctionCall",
																"src": "6823:21:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "6815:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6815:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "6555:295:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6617:4:8",
														"nodeType": "YulTypedName",
														"src": "6617:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6623:3:8",
														"nodeType": "YulTypedName",
														"src": "6623:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "6631:4:8",
														"nodeType": "YulTypedName",
														"src": "6631:4:8",
														"type": ""
													}
												],
												"src": "6555:295:8"
											},
											{
												"body": {
													"nativeSrc": "6947:1303:8",
													"nodeType": "YulBlock",
													"src": "6947:1303:8",
													"statements": [
														{
															"nativeSrc": "6958:51:8",
															"nodeType": "YulVariableDeclaration",
															"src": "6958:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7005:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7005:3:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "6972:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "6972:32:8"
																},
																"nativeSrc": "6972:37:8",
																"nodeType": "YulFunctionCall",
																"src": "6972:37:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "6962:6:8",
																	"nodeType": "YulTypedName",
																	"src": "6962:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7094:22:8",
																"nodeType": "YulBlock",
																"src": "7094:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7096:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "7096:16:8"
																			},
																			"nativeSrc": "7096:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7096:18:8"
																		},
																		"nativeSrc": "7096:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7096:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7066:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7066:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7074:18:8",
																		"nodeType": "YulLiteral",
																		"src": "7074:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7063:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "7063:2:8"
																},
																"nativeSrc": "7063:30:8",
																"nodeType": "YulFunctionCall",
																"src": "7063:30:8"
															},
															"nativeSrc": "7060:56:8",
															"nodeType": "YulIf",
															"src": "7060:56:8"
														},
														{
															"nativeSrc": "7126:52:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7126:52:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "7172:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "7172:4:8"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "7166:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "7166:5:8"
																		},
																		"nativeSrc": "7166:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7166:11:8"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "7140:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "7140:25:8"
																},
																"nativeSrc": "7140:38:8",
																"nodeType": "YulFunctionCall",
																"src": "7140:38:8"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "7130:6:8",
																	"nodeType": "YulTypedName",
																	"src": "7130:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7271:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "7271:4:8"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "7277:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7277:6:8"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "7285:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7285:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "7225:45:8",
																	"nodeType": "YulIdentifier",
																	"src": "7225:45:8"
																},
																"nativeSrc": "7225:67:8",
																"nodeType": "YulFunctionCall",
																"src": "7225:67:8"
															},
															"nativeSrc": "7225:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "7225:67:8"
														},
														{
															"nativeSrc": "7302:18:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7302:18:8",
															"value": {
																"kind": "number",
																"nativeSrc": "7319:1:8",
																"nodeType": "YulLiteral",
																"src": "7319:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7306:9:8",
																	"nodeType": "YulTypedName",
																	"src": "7306:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7330:17:8",
															"nodeType": "YulAssignment",
															"src": "7330:17:8",
															"value": {
																"kind": "number",
																"nativeSrc": "7343:4:8",
																"nodeType": "YulLiteral",
																"src": "7343:4:8",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7330:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "7330:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "7394:611:8",
																		"nodeType": "YulBlock",
																		"src": "7394:611:8",
																		"statements": [
																			{
																				"nativeSrc": "7408:37:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7408:37:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "7427:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "7427:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "7439:4:8",
																									"nodeType": "YulLiteral",
																									"src": "7439:4:8",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "7435:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "7435:3:8"
																							},
																							"nativeSrc": "7435:9:8",
																							"nodeType": "YulFunctionCall",
																							"src": "7435:9:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "7423:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "7423:3:8"
																					},
																					"nativeSrc": "7423:22:8",
																					"nodeType": "YulFunctionCall",
																					"src": "7423:22:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "7412:7:8",
																						"nodeType": "YulTypedName",
																						"src": "7412:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7459:51:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7459:51:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7505:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "7505:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "7473:31:8",
																						"nodeType": "YulIdentifier",
																						"src": "7473:31:8"
																					},
																					"nativeSrc": "7473:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "7473:37:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "7463:6:8",
																						"nodeType": "YulTypedName",
																						"src": "7463:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7523:10:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7523:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7532:1:8",
																					"nodeType": "YulLiteral",
																					"src": "7532:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "7527:1:8",
																						"nodeType": "YulTypedName",
																						"src": "7527:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "7591:163:8",
																					"nodeType": "YulBlock",
																					"src": "7591:163:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7616:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "7616:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "7634:3:8",
																														"nodeType": "YulIdentifier",
																														"src": "7634:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "7639:9:8",
																														"nodeType": "YulIdentifier",
																														"src": "7639:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "7630:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "7630:3:8"
																												},
																												"nativeSrc": "7630:19:8",
																												"nodeType": "YulFunctionCall",
																												"src": "7630:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "7624:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "7624:5:8"
																										},
																										"nativeSrc": "7624:26:8",
																										"nodeType": "YulFunctionCall",
																										"src": "7624:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "7609:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "7609:6:8"
																								},
																								"nativeSrc": "7609:42:8",
																								"nodeType": "YulFunctionCall",
																								"src": "7609:42:8"
																							},
																							"nativeSrc": "7609:42:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "7609:42:8"
																						},
																						{
																							"nativeSrc": "7668:24:8",
																							"nodeType": "YulAssignment",
																							"src": "7668:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7682:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "7682:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7690:1:8",
																										"nodeType": "YulLiteral",
																										"src": "7690:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7678:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "7678:3:8"
																								},
																								"nativeSrc": "7678:14:8",
																								"nodeType": "YulFunctionCall",
																								"src": "7678:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "7668:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "7668:6:8"
																								}
																							]
																						},
																						{
																							"nativeSrc": "7709:31:8",
																							"nodeType": "YulAssignment",
																							"src": "7709:31:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "7726:9:8",
																										"nodeType": "YulIdentifier",
																										"src": "7726:9:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7737:2:8",
																										"nodeType": "YulLiteral",
																										"src": "7737:2:8",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7722:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "7722:3:8"
																								},
																								"nativeSrc": "7722:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "7722:18:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "7709:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "7709:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "7557:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "7557:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7560:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "7560:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7554:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "7554:2:8"
																					},
																					"nativeSrc": "7554:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "7554:14:8"
																				},
																				"nativeSrc": "7546:208:8",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "7569:21:8",
																					"nodeType": "YulBlock",
																					"src": "7569:21:8",
																					"statements": [
																						{
																							"nativeSrc": "7571:17:8",
																							"nodeType": "YulAssignment",
																							"src": "7571:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "7580:1:8",
																										"nodeType": "YulIdentifier",
																										"src": "7580:1:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7583:4:8",
																										"nodeType": "YulLiteral",
																										"src": "7583:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7576:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "7576:3:8"
																								},
																								"nativeSrc": "7576:12:8",
																								"nodeType": "YulFunctionCall",
																								"src": "7576:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "7571:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "7571:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "7550:3:8",
																					"nodeType": "YulBlock",
																					"src": "7550:3:8",
																					"statements": []
																				},
																				"src": "7546:208:8"
																			},
																			{
																				"body": {
																					"nativeSrc": "7790:156:8",
																					"nodeType": "YulBlock",
																					"src": "7790:156:8",
																					"statements": [
																						{
																							"nativeSrc": "7808:43:8",
																							"nodeType": "YulVariableDeclaration",
																							"src": "7808:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "7835:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "7835:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "7840:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "7840:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "7831:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "7831:3:8"
																										},
																										"nativeSrc": "7831:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "7831:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "7825:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "7825:5:8"
																								},
																								"nativeSrc": "7825:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "7825:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "7812:9:8",
																									"nodeType": "YulTypedName",
																									"src": "7812:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7875:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "7875:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "7902:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "7902:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "7917:6:8",
																														"nodeType": "YulIdentifier",
																														"src": "7917:6:8"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "7925:4:8",
																														"nodeType": "YulLiteral",
																														"src": "7925:4:8",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "7913:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "7913:3:8"
																												},
																												"nativeSrc": "7913:17:8",
																												"nodeType": "YulFunctionCall",
																												"src": "7913:17:8"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "7883:18:8",
																											"nodeType": "YulIdentifier",
																											"src": "7883:18:8"
																										},
																										"nativeSrc": "7883:48:8",
																										"nodeType": "YulFunctionCall",
																										"src": "7883:48:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "7868:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "7868:6:8"
																								},
																								"nativeSrc": "7868:64:8",
																								"nodeType": "YulFunctionCall",
																								"src": "7868:64:8"
																							},
																							"nativeSrc": "7868:64:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "7868:64:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7773:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "7773:7:8"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "7782:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "7782:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7770:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "7770:2:8"
																					},
																					"nativeSrc": "7770:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "7770:19:8"
																				},
																				"nativeSrc": "7767:179:8",
																				"nodeType": "YulIf",
																				"src": "7767:179:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7966:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "7966:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "7980:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "7980:6:8"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "7988:1:8",
																											"nodeType": "YulLiteral",
																											"src": "7988:1:8",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "7976:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "7976:3:8"
																									},
																									"nativeSrc": "7976:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "7976:14:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "7992:1:8",
																									"nodeType": "YulLiteral",
																									"src": "7992:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "7972:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "7972:3:8"
																							},
																							"nativeSrc": "7972:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "7972:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "7959:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "7959:6:8"
																					},
																					"nativeSrc": "7959:36:8",
																					"nodeType": "YulFunctionCall",
																					"src": "7959:36:8"
																				},
																				"nativeSrc": "7959:36:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "7959:36:8"
																			}
																		]
																	},
																	"nativeSrc": "7387:618:8",
																	"nodeType": "YulCase",
																	"src": "7387:618:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7392:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7392:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8022:222:8",
																		"nodeType": "YulBlock",
																		"src": "8022:222:8",
																		"statements": [
																			{
																				"nativeSrc": "8036:14:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8036:14:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8049:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8049:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "8040:5:8",
																						"nodeType": "YulTypedName",
																						"src": "8040:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8073:67:8",
																					"nodeType": "YulBlock",
																					"src": "8073:67:8",
																					"statements": [
																						{
																							"nativeSrc": "8091:35:8",
																							"nodeType": "YulAssignment",
																							"src": "8091:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8110:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "8110:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8115:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "8115:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8106:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "8106:3:8"
																										},
																										"nativeSrc": "8106:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "8106:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8100:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "8100:5:8"
																								},
																								"nativeSrc": "8100:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "8100:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "8091:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "8091:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "8066:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "8066:6:8"
																				},
																				"nativeSrc": "8063:77:8",
																				"nodeType": "YulIf",
																				"src": "8063:77:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8160:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "8160:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "8219:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "8219:5:8"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "8226:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "8226:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "8166:52:8",
																								"nodeType": "YulIdentifier",
																								"src": "8166:52:8"
																							},
																							"nativeSrc": "8166:67:8",
																							"nodeType": "YulFunctionCall",
																							"src": "8166:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8153:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "8153:6:8"
																					},
																					"nativeSrc": "8153:81:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8153:81:8"
																				},
																				"nativeSrc": "8153:81:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "8153:81:8"
																			}
																		]
																	},
																	"nativeSrc": "8014:230:8",
																	"nodeType": "YulCase",
																	"src": "8014:230:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7367:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7367:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7375:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7375:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7364:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "7364:2:8"
																},
																"nativeSrc": "7364:14:8",
																"nodeType": "YulFunctionCall",
																"src": "7364:14:8"
															},
															"nativeSrc": "7357:887:8",
															"nodeType": "YulSwitch",
															"src": "7357:887:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "6855:1395:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6936:4:8",
														"nodeType": "YulTypedName",
														"src": "6936:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "6942:3:8",
														"nodeType": "YulTypedName",
														"src": "6942:3:8",
														"type": ""
													}
												],
												"src": "6855:1395:8"
											},
											{
												"body": {
													"nativeSrc": "8301:81:8",
													"nodeType": "YulBlock",
													"src": "8301:81:8",
													"statements": [
														{
															"nativeSrc": "8311:65:8",
															"nodeType": "YulAssignment",
															"src": "8311:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8326:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "8326:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8333:42:8",
																		"nodeType": "YulLiteral",
																		"src": "8333:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8322:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8322:3:8"
																},
																"nativeSrc": "8322:54:8",
																"nodeType": "YulFunctionCall",
																"src": "8322:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8311:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "8311:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "8256:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8283:5:8",
														"nodeType": "YulTypedName",
														"src": "8283:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8293:7:8",
														"nodeType": "YulTypedName",
														"src": "8293:7:8",
														"type": ""
													}
												],
												"src": "8256:126:8"
											},
											{
												"body": {
													"nativeSrc": "8433:51:8",
													"nodeType": "YulBlock",
													"src": "8433:51:8",
													"statements": [
														{
															"nativeSrc": "8443:35:8",
															"nodeType": "YulAssignment",
															"src": "8443:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8472:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "8472:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "8454:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "8454:17:8"
																},
																"nativeSrc": "8454:24:8",
																"nodeType": "YulFunctionCall",
																"src": "8454:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8443:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "8443:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "8388:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8415:5:8",
														"nodeType": "YulTypedName",
														"src": "8415:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8425:7:8",
														"nodeType": "YulTypedName",
														"src": "8425:7:8",
														"type": ""
													}
												],
												"src": "8388:96:8"
											},
											{
												"body": {
													"nativeSrc": "8555:53:8",
													"nodeType": "YulBlock",
													"src": "8555:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8572:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8572:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8595:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "8595:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8577:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "8577:17:8"
																		},
																		"nativeSrc": "8577:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8577:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8565:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8565:6:8"
																},
																"nativeSrc": "8565:37:8",
																"nodeType": "YulFunctionCall",
																"src": "8565:37:8"
															},
															"nativeSrc": "8565:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "8565:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8490:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8543:5:8",
														"nodeType": "YulTypedName",
														"src": "8543:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8550:3:8",
														"nodeType": "YulTypedName",
														"src": "8550:3:8",
														"type": ""
													}
												],
												"src": "8490:118:8"
											},
											{
												"body": {
													"nativeSrc": "8712:124:8",
													"nodeType": "YulBlock",
													"src": "8712:124:8",
													"statements": [
														{
															"nativeSrc": "8722:26:8",
															"nodeType": "YulAssignment",
															"src": "8722:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8734:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8734:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8745:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8745:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8730:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8730:3:8"
																},
																"nativeSrc": "8730:18:8",
																"nodeType": "YulFunctionCall",
																"src": "8730:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8722:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8722:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8802:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8802:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8815:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8815:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8826:1:8",
																				"nodeType": "YulLiteral",
																				"src": "8826:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8811:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8811:3:8"
																		},
																		"nativeSrc": "8811:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8811:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8758:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "8758:43:8"
																},
																"nativeSrc": "8758:71:8",
																"nodeType": "YulFunctionCall",
																"src": "8758:71:8"
															},
															"nativeSrc": "8758:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "8758:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "8614:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8684:9:8",
														"nodeType": "YulTypedName",
														"src": "8684:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8696:6:8",
														"nodeType": "YulTypedName",
														"src": "8696:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8707:4:8",
														"nodeType": "YulTypedName",
														"src": "8707:4:8",
														"type": ""
													}
												],
												"src": "8614:222:8"
											},
											{
												"body": {
													"nativeSrc": "8886:147:8",
													"nodeType": "YulBlock",
													"src": "8886:147:8",
													"statements": [
														{
															"nativeSrc": "8896:25:8",
															"nodeType": "YulAssignment",
															"src": "8896:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8919:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8919:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8901:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "8901:17:8"
																},
																"nativeSrc": "8901:20:8",
																"nodeType": "YulFunctionCall",
																"src": "8901:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8896:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "8896:1:8"
																}
															]
														},
														{
															"nativeSrc": "8930:25:8",
															"nodeType": "YulAssignment",
															"src": "8930:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8953:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8953:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8935:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "8935:17:8"
																},
																"nativeSrc": "8935:20:8",
																"nodeType": "YulFunctionCall",
																"src": "8935:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8930:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "8930:1:8"
																}
															]
														},
														{
															"nativeSrc": "8964:16:8",
															"nodeType": "YulAssignment",
															"src": "8964:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8975:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8975:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8978:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8978:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8971:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8971:3:8"
																},
																"nativeSrc": "8971:9:8",
																"nodeType": "YulFunctionCall",
																"src": "8971:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8964:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8964:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9004:22:8",
																"nodeType": "YulBlock",
																"src": "9004:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9006:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "9006:16:8"
																			},
																			"nativeSrc": "9006:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9006:18:8"
																		},
																		"nativeSrc": "9006:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9006:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8996:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8996:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8999:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8999:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8993:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "8993:2:8"
																},
																"nativeSrc": "8993:10:8",
																"nodeType": "YulFunctionCall",
																"src": "8993:10:8"
															},
															"nativeSrc": "8990:36:8",
															"nodeType": "YulIf",
															"src": "8990:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8842:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8873:1:8",
														"nodeType": "YulTypedName",
														"src": "8873:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8876:1:8",
														"nodeType": "YulTypedName",
														"src": "8876:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8882:3:8",
														"nodeType": "YulTypedName",
														"src": "8882:3:8",
														"type": ""
													}
												],
												"src": "8842:191:8"
											},
											{
												"body": {
													"nativeSrc": "9104:53:8",
													"nodeType": "YulBlock",
													"src": "9104:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9121:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9121:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9144:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "9144:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "9126:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "9126:17:8"
																		},
																		"nativeSrc": "9126:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9126:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9114:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9114:6:8"
																},
																"nativeSrc": "9114:37:8",
																"nodeType": "YulFunctionCall",
																"src": "9114:37:8"
															},
															"nativeSrc": "9114:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "9114:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "9039:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9092:5:8",
														"nodeType": "YulTypedName",
														"src": "9092:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9099:3:8",
														"nodeType": "YulTypedName",
														"src": "9099:3:8",
														"type": ""
													}
												],
												"src": "9039:118:8"
											},
											{
												"body": {
													"nativeSrc": "9317:288:8",
													"nodeType": "YulBlock",
													"src": "9317:288:8",
													"statements": [
														{
															"nativeSrc": "9327:26:8",
															"nodeType": "YulAssignment",
															"src": "9327:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9339:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9339:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9350:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9350:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9335:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9335:3:8"
																},
																"nativeSrc": "9335:18:8",
																"nodeType": "YulFunctionCall",
																"src": "9335:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9327:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9327:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9407:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9407:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9420:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9420:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9431:1:8",
																				"nodeType": "YulLiteral",
																				"src": "9431:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9416:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9416:3:8"
																		},
																		"nativeSrc": "9416:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9416:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9363:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "9363:43:8"
																},
																"nativeSrc": "9363:71:8",
																"nodeType": "YulFunctionCall",
																"src": "9363:71:8"
															},
															"nativeSrc": "9363:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "9363:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9488:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9488:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9501:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9501:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9512:2:8",
																				"nodeType": "YulLiteral",
																				"src": "9512:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9497:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9497:3:8"
																		},
																		"nativeSrc": "9497:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9497:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9444:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "9444:43:8"
																},
																"nativeSrc": "9444:72:8",
																"nodeType": "YulFunctionCall",
																"src": "9444:72:8"
															},
															"nativeSrc": "9444:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "9444:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9570:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9570:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9583:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9583:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9594:2:8",
																				"nodeType": "YulLiteral",
																				"src": "9594:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9579:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9579:3:8"
																		},
																		"nativeSrc": "9579:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9579:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9526:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "9526:43:8"
																},
																"nativeSrc": "9526:72:8",
																"nodeType": "YulFunctionCall",
																"src": "9526:72:8"
															},
															"nativeSrc": "9526:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "9526:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9163:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9273:9:8",
														"nodeType": "YulTypedName",
														"src": "9273:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9285:6:8",
														"nodeType": "YulTypedName",
														"src": "9285:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9293:6:8",
														"nodeType": "YulTypedName",
														"src": "9293:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9301:6:8",
														"nodeType": "YulTypedName",
														"src": "9301:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9312:4:8",
														"nodeType": "YulTypedName",
														"src": "9312:4:8",
														"type": ""
													}
												],
												"src": "9163:442:8"
											},
											{
												"body": {
													"nativeSrc": "9709:124:8",
													"nodeType": "YulBlock",
													"src": "9709:124:8",
													"statements": [
														{
															"nativeSrc": "9719:26:8",
															"nodeType": "YulAssignment",
															"src": "9719:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9731:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9731:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9742:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9742:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9727:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9727:3:8"
																},
																"nativeSrc": "9727:18:8",
																"nodeType": "YulFunctionCall",
																"src": "9727:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9719:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9719:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9799:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9799:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9812:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9812:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9823:1:8",
																				"nodeType": "YulLiteral",
																				"src": "9823:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9808:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9808:3:8"
																		},
																		"nativeSrc": "9808:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9808:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9755:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "9755:43:8"
																},
																"nativeSrc": "9755:71:8",
																"nodeType": "YulFunctionCall",
																"src": "9755:71:8"
															},
															"nativeSrc": "9755:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "9755:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "9611:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9681:9:8",
														"nodeType": "YulTypedName",
														"src": "9681:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9693:6:8",
														"nodeType": "YulTypedName",
														"src": "9693:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9704:4:8",
														"nodeType": "YulTypedName",
														"src": "9704:4:8",
														"type": ""
													}
												],
												"src": "9611:222:8"
											}
										]
									},
									"contents": "{\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405261001261016160201b60201c565b600a61001e919061063b565b620f424061002c9190610685565b60065534801561003a575f80fd5b50336040518060400160405280600d81526020017f53686f6562756d78546f6b656e000000000000000000000000000000000000008152506040518060400160405280600381526020017f534258000000000000000000000000000000000000000000000000000000000081525081600390816100b791906108f7565b5080600490816100c791906108f7565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361013a575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016101319190610a05565b60405180910390fd5b6101498161016960201b60201c565b5061015c3360065461022c60201b60201c565b610aae565b5f6012905090565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361029c575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016102939190610a05565b60405180910390fd5b6102ad5f83836102b160201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610301578060025f8282546102f59190610a1e565b925050819055506103cf565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561038a578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161038193929190610a60565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610416578060025f8282540392505081905550610460565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516104bd9190610a95565b60405180910390a3505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b600185111561054c57808604811115610528576105276104ca565b5b60018516156105375780820291505b8081029050610545856104f7565b945061050c565b94509492505050565b5f82610564576001905061061f565b81610571575f905061061f565b81600181146105875760028114610591576105c0565b600191505061061f565b60ff8411156105a3576105a26104ca565b5b8360020a9150848211156105ba576105b96104ca565b5b5061061f565b5060208310610133831016604e8410600b84101617156105f55782820a9050838111156105f0576105ef6104ca565b5b61061f565b6106028484846001610503565b92509050818404811115610619576106186104ca565b5b81810290505b9392505050565b5f819050919050565b5f60ff82169050919050565b5f61064582610626565b91506106508361062f565b925061067d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610555565b905092915050565b5f61068f82610626565b915061069a83610626565b92508282026106a881610626565b915082820484148315176106bf576106be6104ca565b5b5092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061074157607f821691505b602082108103610754576107536106fd565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026107b67fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261077b565b6107c0868361077b565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6107fb6107f66107f184610626565b6107d8565b610626565b9050919050565b5f819050919050565b610814836107e1565b61082861082082610802565b848454610787565b825550505050565b5f90565b61083c610830565b61084781848461080b565b505050565b5b8181101561086a5761085f5f82610834565b60018101905061084d565b5050565b601f8211156108af576108808161075a565b6108898461076c565b81016020851015610898578190505b6108ac6108a48561076c565b83018261084c565b50505b505050565b5f82821c905092915050565b5f6108cf5f19846008026108b4565b1980831691505092915050565b5f6108e783836108c0565b9150826002028217905092915050565b610900826106c6565b67ffffffffffffffff811115610919576109186106d0565b5b610923825461072a565b61092e82828561086e565b5f60209050601f83116001811461095f575f841561094d578287015190505b61095785826108dc565b8655506109be565b601f19841661096d8661075a565b5f5b828110156109945784890151825560018201915060208501945060208101905061096f565b868310156109b157848901516109ad601f8916826108c0565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6109ef826109c6565b9050919050565b6109ff816109e5565b82525050565b5f602082019050610a185f8301846109f6565b92915050565b5f610a2882610626565b9150610a3383610626565b9250828201905080821115610a4b57610a4a6104ca565b5b92915050565b610a5a81610626565b82525050565b5f606082019050610a735f8301866109f6565b610a806020830185610a51565b610a8d6040830184610a51565b949350505050565b5f602082019050610aa85f830184610a51565b92915050565b6116f580610abb5f395ff3fe6080604052600436106100f2575f3560e01c80638da5cb5b11610089578063d0febe4c11610058578063d0febe4c14610320578063dd62ed3e1461032a578063e086e5ec14610366578063f2fde38b1461037c576100f2565b80638da5cb5b1461026657806395d89b4114610290578063a9059cbb146102ba578063bc6e6604146102f6576100f2565b8063313ce567116100c5578063313ce567146101c257806340c10f19146101ec57806370a0823114610214578063715018a614610250576100f2565b806306fdde03146100f6578063095ea7b31461012057806318160ddd1461015c57806323b872dd14610186575b5f80fd5b348015610101575f80fd5b5061010a6103a4565b604051610117919061103b565b60405180910390f35b34801561012b575f80fd5b50610146600480360381019061014191906110ec565b610434565b6040516101539190611144565b60405180910390f35b348015610167575f80fd5b50610170610456565b60405161017d919061116c565b60405180910390f35b348015610191575f80fd5b506101ac60048036038101906101a79190611185565b61045f565b6040516101b99190611144565b60405180910390f35b3480156101cd575f80fd5b506101d661048d565b6040516101e391906111f0565b60405180910390f35b3480156101f7575f80fd5b50610212600480360381019061020d91906110ec565b610495565b005b34801561021f575f80fd5b5061023a60048036038101906102359190611209565b6104c9565b604051610247919061116c565b60405180910390f35b34801561025b575f80fd5b5061026461050e565b005b348015610271575f80fd5b5061027a610521565b6040516102879190611243565b60405180910390f35b34801561029b575f80fd5b506102a4610549565b6040516102b1919061103b565b60405180910390f35b3480156102c5575f80fd5b506102e060048036038101906102db91906110ec565b6105d9565b6040516102ed9190611144565b60405180910390f35b348015610301575f80fd5b5061030a6105fb565b604051610317919061116c565b60405180910390f35b610328610608565b005b348015610335575f80fd5b50610350600480360381019061034b919061125c565b610678565b60405161035d919061116c565b60405180910390f35b348015610371575f80fd5b5061037a6106fa565b005b348015610387575f80fd5b506103a2600480360381019061039d9190611209565b6107fb565b005b6060600380546103b3906112c7565b80601f01602080910402602001604051908101604052809291908181526020018280546103df906112c7565b801561042a5780601f106104015761010080835404028352916020019161042a565b820191905f5260205f20905b81548152906001019060200180831161040d57829003601f168201915b5050505050905090565b5f8061043e61087f565b905061044b818585610886565b600191505092915050565b5f600254905090565b5f8061046961087f565b9050610476858285610898565b61048185858561092a565b60019150509392505050565b5f6012905090565b61049d610a1a565b6104c5826104a961048d565b600a6104b59190611453565b836104c0919061149d565b610aa1565b5050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610516610a1a565b61051f5f610b20565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610558906112c7565b80601f0160208091040260200160405190810160405280929190818152602001828054610584906112c7565b80156105cf5780601f106105a6576101008083540402835291602001916105cf565b820191905f5260205f20905b8154815290600101906020018083116105b257829003601f168201915b5050505050905090565b5f806105e361087f565b90506105f081858561092a565b600191505092915050565b68056bc75e2d6310000081565b67016345785d8a0000341015610653576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064a90611528565b60405180910390fd5b5f68056bc75e2d6310000034610669919061149d565b90506106753382610aa1565b50565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610702610a1a565b5f4790505f8111610748576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073f90611590565b60405180910390fd5b5f610751610521565b73ffffffffffffffffffffffffffffffffffffffff1682604051610774906115db565b5f6040518083038185875af1925050503d805f81146107ae576040519150601f19603f3d011682016040523d82523d5f602084013e6107b3565b606091505b50509050806107f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ee90611639565b60405180910390fd5b5050565b610803610a1a565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610873575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161086a9190611243565b60405180910390fd5b61087c81610b20565b50565b5f33905090565b6108938383836001610be3565b505050565b5f6108a38484610678565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146109245781811015610915578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161090c93929190611657565b60405180910390fd5b61092384848484035f610be3565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361099a575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016109919190611243565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a0a575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a019190611243565b60405180910390fd5b610a15838383610db2565b505050565b610a2261087f565b73ffffffffffffffffffffffffffffffffffffffff16610a40610521565b73ffffffffffffffffffffffffffffffffffffffff1614610a9f57610a6361087f565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610a969190611243565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b11575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610b089190611243565b60405180910390fd5b610b1c5f8383610db2565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610c53575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610c4a9190611243565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610cc3575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610cba9190611243565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610dac578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610da3919061116c565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e02578060025f828254610df6919061168c565b92505081905550610ed0565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610e8b578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610e8293929190611657565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f17578060025f8282540392505081905550610f61565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610fbe919061116c565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61100d82610fcb565b6110178185610fd5565b9350611027818560208601610fe5565b61103081610ff3565b840191505092915050565b5f6020820190508181035f8301526110538184611003565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6110888261105f565b9050919050565b6110988161107e565b81146110a2575f80fd5b50565b5f813590506110b38161108f565b92915050565b5f819050919050565b6110cb816110b9565b81146110d5575f80fd5b50565b5f813590506110e6816110c2565b92915050565b5f80604083850312156111025761110161105b565b5b5f61110f858286016110a5565b9250506020611120858286016110d8565b9150509250929050565b5f8115159050919050565b61113e8161112a565b82525050565b5f6020820190506111575f830184611135565b92915050565b611166816110b9565b82525050565b5f60208201905061117f5f83018461115d565b92915050565b5f805f6060848603121561119c5761119b61105b565b5b5f6111a9868287016110a5565b93505060206111ba868287016110a5565b92505060406111cb868287016110d8565b9150509250925092565b5f60ff82169050919050565b6111ea816111d5565b82525050565b5f6020820190506112035f8301846111e1565b92915050565b5f6020828403121561121e5761121d61105b565b5b5f61122b848285016110a5565b91505092915050565b61123d8161107e565b82525050565b5f6020820190506112565f830184611234565b92915050565b5f80604083850312156112725761127161105b565b5b5f61127f858286016110a5565b9250506020611290858286016110a5565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806112de57607f821691505b6020821081036112f1576112f061129a565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b600185111561137957808604811115611355576113546112f7565b5b60018516156113645780820291505b808102905061137285611324565b9450611339565b94509492505050565b5f82611391576001905061144c565b8161139e575f905061144c565b81600181146113b457600281146113be576113ed565b600191505061144c565b60ff8411156113d0576113cf6112f7565b5b8360020a9150848211156113e7576113e66112f7565b5b5061144c565b5060208310610133831016604e8410600b84101617156114225782820a90508381111561141d5761141c6112f7565b5b61144c565b61142f8484846001611330565b92509050818404811115611446576114456112f7565b5b81810290505b9392505050565b5f61145d826110b9565b9150611468836111d5565b92506114957fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611382565b905092915050565b5f6114a7826110b9565b91506114b2836110b9565b92508282026114c0816110b9565b915082820484148315176114d7576114d66112f7565b5b5092915050565b7f4d696e696d756d20707572636861736520697320302e312045544800000000005f82015250565b5f611512601b83610fd5565b915061151d826114de565b602082019050919050565b5f6020820190508181035f83015261153f81611506565b9050919050565b7f4e6f2045544820746f20776974686472617700000000000000000000000000005f82015250565b5f61157a601283610fd5565b915061158582611546565b602082019050919050565b5f6020820190508181035f8301526115a78161156e565b9050919050565b5f81905092915050565b50565b5f6115c65f836115ae565b91506115d1826115b8565b5f82019050919050565b5f6115e5826115bb565b9150819050919050565b7f455448207769746864726177616c206661696c656400000000000000000000005f82015250565b5f611623601583610fd5565b915061162e826115ef565b602082019050919050565b5f6020820190508181035f83015261165081611617565b9050919050565b5f60608201905061166a5f830186611234565b611677602083018561115d565b611684604083018461115d565b949350505050565b5f611696826110b9565b91506116a1836110b9565b92508282019050808211156116b9576116b86112f7565b5b9291505056fea2646970667358221220fa555793dc8e9c5b66c284f7b5b9b84eed4ee723893972c18f8d1a4145117e5364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x12 PUSH2 0x161 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH2 0x1E SWAP2 SWAP1 PUSH2 0x63B JUMP JUMPDEST PUSH3 0xF4240 PUSH2 0x2C SWAP2 SWAP1 PUSH2 0x685 JUMP JUMPDEST PUSH1 0x6 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x3A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x53686F6562756D78546F6B656E00000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5342580000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xB7 SWAP2 SWAP1 PUSH2 0x8F7 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x8F7 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x131 SWAP2 SWAP1 PUSH2 0xA05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x149 DUP2 PUSH2 0x169 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x15C CALLER PUSH1 0x6 SLOAD PUSH2 0x22C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xAAE JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x29C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x293 SWAP2 SWAP1 PUSH2 0xA05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2AD PUSH0 DUP4 DUP4 PUSH2 0x2B1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x301 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0xA1E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x3CF JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x38A JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x416 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x460 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x4BD SWAP2 SWAP1 PUSH2 0xA95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x54C JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x528 JUMPI PUSH2 0x527 PUSH2 0x4CA JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x537 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x545 DUP6 PUSH2 0x4F7 JUMP JUMPDEST SWAP5 POP PUSH2 0x50C JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x564 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x61F JUMP JUMPDEST DUP2 PUSH2 0x571 JUMPI PUSH0 SWAP1 POP PUSH2 0x61F JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x587 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x591 JUMPI PUSH2 0x5C0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x61F JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x5A3 JUMPI PUSH2 0x5A2 PUSH2 0x4CA JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x5BA JUMPI PUSH2 0x5B9 PUSH2 0x4CA JUMP JUMPDEST JUMPDEST POP PUSH2 0x61F JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x5F5 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x5F0 JUMPI PUSH2 0x5EF PUSH2 0x4CA JUMP JUMPDEST JUMPDEST PUSH2 0x61F JUMP JUMPDEST PUSH2 0x602 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x503 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x619 JUMPI PUSH2 0x618 PUSH2 0x4CA JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x645 DUP3 PUSH2 0x626 JUMP JUMPDEST SWAP2 POP PUSH2 0x650 DUP4 PUSH2 0x62F JUMP JUMPDEST SWAP3 POP PUSH2 0x67D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x555 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x68F DUP3 PUSH2 0x626 JUMP JUMPDEST SWAP2 POP PUSH2 0x69A DUP4 PUSH2 0x626 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x6A8 DUP2 PUSH2 0x626 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x6BF JUMPI PUSH2 0x6BE PUSH2 0x4CA JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x741 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x754 JUMPI PUSH2 0x753 PUSH2 0x6FD JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x7B6 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x77B JUMP JUMPDEST PUSH2 0x7C0 DUP7 DUP4 PUSH2 0x77B JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7FB PUSH2 0x7F6 PUSH2 0x7F1 DUP5 PUSH2 0x626 JUMP JUMPDEST PUSH2 0x7D8 JUMP JUMPDEST PUSH2 0x626 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x814 DUP4 PUSH2 0x7E1 JUMP JUMPDEST PUSH2 0x828 PUSH2 0x820 DUP3 PUSH2 0x802 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x787 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x83C PUSH2 0x830 JUMP JUMPDEST PUSH2 0x847 DUP2 DUP5 DUP5 PUSH2 0x80B JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x86A JUMPI PUSH2 0x85F PUSH0 DUP3 PUSH2 0x834 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x84D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x8AF JUMPI PUSH2 0x880 DUP2 PUSH2 0x75A JUMP JUMPDEST PUSH2 0x889 DUP5 PUSH2 0x76C JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x898 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x8AC PUSH2 0x8A4 DUP6 PUSH2 0x76C JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x84C JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8CF PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x8B4 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8E7 DUP4 DUP4 PUSH2 0x8C0 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x900 DUP3 PUSH2 0x6C6 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x919 JUMPI PUSH2 0x918 PUSH2 0x6D0 JUMP JUMPDEST JUMPDEST PUSH2 0x923 DUP3 SLOAD PUSH2 0x72A JUMP JUMPDEST PUSH2 0x92E DUP3 DUP3 DUP6 PUSH2 0x86E JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x95F JUMPI PUSH0 DUP5 ISZERO PUSH2 0x94D JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x957 DUP6 DUP3 PUSH2 0x8DC JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x9BE JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x96D DUP7 PUSH2 0x75A JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x994 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x96F JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x9B1 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x9AD PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x8C0 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9EF DUP3 PUSH2 0x9C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9FF DUP2 PUSH2 0x9E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA18 PUSH0 DUP4 ADD DUP5 PUSH2 0x9F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA28 DUP3 PUSH2 0x626 JUMP JUMPDEST SWAP2 POP PUSH2 0xA33 DUP4 PUSH2 0x626 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xA4B JUMPI PUSH2 0xA4A PUSH2 0x4CA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA5A DUP2 PUSH2 0x626 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xA73 PUSH0 DUP4 ADD DUP7 PUSH2 0x9F6 JUMP JUMPDEST PUSH2 0xA80 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xA51 JUMP JUMPDEST PUSH2 0xA8D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xA51 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAA8 PUSH0 DUP4 ADD DUP5 PUSH2 0xA51 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16F5 DUP1 PUSH2 0xABB PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xD0FEBE4C GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xD0FEBE4C EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x32A JUMPI DUP1 PUSH4 0xE086E5EC EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x37C JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0xBC6E6604 EQ PUSH2 0x2F6 JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xC5 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x250 JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x186 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x101 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x10A PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x103B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x146 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x141 SWAP2 SWAP1 PUSH2 0x10EC JUMP JUMPDEST PUSH2 0x434 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x153 SWAP2 SWAP1 PUSH2 0x1144 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x167 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x456 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x116C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x191 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x1185 JUMP JUMPDEST PUSH2 0x45F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0x1144 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D6 PUSH2 0x48D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x11F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x212 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x10EC JUMP JUMPDEST PUSH2 0x495 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x1209 JUMP JUMPDEST PUSH2 0x4C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x247 SWAP2 SWAP1 PUSH2 0x116C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x264 PUSH2 0x50E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x271 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27A PUSH2 0x521 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x287 SWAP2 SWAP1 PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A4 PUSH2 0x549 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B1 SWAP2 SWAP1 PUSH2 0x103B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DB SWAP2 SWAP1 PUSH2 0x10EC JUMP JUMPDEST PUSH2 0x5D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2ED SWAP2 SWAP1 PUSH2 0x1144 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x301 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30A PUSH2 0x5FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x116C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x328 PUSH2 0x608 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x335 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x350 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34B SWAP2 SWAP1 PUSH2 0x125C JUMP JUMPDEST PUSH2 0x678 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x116C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x371 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x37A PUSH2 0x6FA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x387 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39D SWAP2 SWAP1 PUSH2 0x1209 JUMP JUMPDEST PUSH2 0x7FB JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3B3 SWAP1 PUSH2 0x12C7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3DF SWAP1 PUSH2 0x12C7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x42A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x401 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x42A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x40D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x43E PUSH2 0x87F JUMP JUMPDEST SWAP1 POP PUSH2 0x44B DUP2 DUP6 DUP6 PUSH2 0x886 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x469 PUSH2 0x87F JUMP JUMPDEST SWAP1 POP PUSH2 0x476 DUP6 DUP3 DUP6 PUSH2 0x898 JUMP JUMPDEST PUSH2 0x481 DUP6 DUP6 DUP6 PUSH2 0x92A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x49D PUSH2 0xA1A JUMP JUMPDEST PUSH2 0x4C5 DUP3 PUSH2 0x4A9 PUSH2 0x48D JUMP JUMPDEST PUSH1 0xA PUSH2 0x4B5 SWAP2 SWAP1 PUSH2 0x1453 JUMP JUMPDEST DUP4 PUSH2 0x4C0 SWAP2 SWAP1 PUSH2 0x149D JUMP JUMPDEST PUSH2 0xAA1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x516 PUSH2 0xA1A JUMP JUMPDEST PUSH2 0x51F PUSH0 PUSH2 0xB20 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x558 SWAP1 PUSH2 0x12C7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x584 SWAP1 PUSH2 0x12C7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5CF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5A6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5CF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5B2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x5E3 PUSH2 0x87F JUMP JUMPDEST SWAP1 POP PUSH2 0x5F0 DUP2 DUP6 DUP6 PUSH2 0x92A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH9 0x56BC75E2D63100000 DUP2 JUMP JUMPDEST PUSH8 0x16345785D8A0000 CALLVALUE LT ISZERO PUSH2 0x653 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64A SWAP1 PUSH2 0x1528 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH9 0x56BC75E2D63100000 CALLVALUE PUSH2 0x669 SWAP2 SWAP1 PUSH2 0x149D JUMP JUMPDEST SWAP1 POP PUSH2 0x675 CALLER DUP3 PUSH2 0xAA1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x702 PUSH2 0xA1A JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP PUSH0 DUP2 GT PUSH2 0x748 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x73F SWAP1 PUSH2 0x1590 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x751 PUSH2 0x521 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x774 SWAP1 PUSH2 0x15DB JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x7AE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7B3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x7F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7EE SWAP1 PUSH2 0x1639 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x803 PUSH2 0xA1A JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x873 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x86A SWAP2 SWAP1 PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x87C DUP2 PUSH2 0xB20 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x893 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xBE3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8A3 DUP5 DUP5 PUSH2 0x678 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x924 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x915 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x90C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1657 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x923 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xBE3 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x99A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x991 SWAP2 SWAP1 PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA0A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA01 SWAP2 SWAP1 PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA15 DUP4 DUP4 DUP4 PUSH2 0xDB2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xA22 PUSH2 0x87F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA40 PUSH2 0x521 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA9F JUMPI PUSH2 0xA63 PUSH2 0x87F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA96 SWAP2 SWAP1 PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB11 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB08 SWAP2 SWAP1 PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1C PUSH0 DUP4 DUP4 PUSH2 0xDB2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC53 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC4A SWAP2 SWAP1 PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCC3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBA SWAP2 SWAP1 PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xDAC JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xDA3 SWAP2 SWAP1 PUSH2 0x116C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE02 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xDF6 SWAP2 SWAP1 PUSH2 0x168C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xED0 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xE8B JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE82 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1657 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF17 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xF61 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xFBE SWAP2 SWAP1 PUSH2 0x116C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x100D DUP3 PUSH2 0xFCB JUMP JUMPDEST PUSH2 0x1017 DUP2 DUP6 PUSH2 0xFD5 JUMP JUMPDEST SWAP4 POP PUSH2 0x1027 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xFE5 JUMP JUMPDEST PUSH2 0x1030 DUP2 PUSH2 0xFF3 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1053 DUP2 DUP5 PUSH2 0x1003 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1088 DUP3 PUSH2 0x105F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1098 DUP2 PUSH2 0x107E JUMP JUMPDEST DUP2 EQ PUSH2 0x10A2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10B3 DUP2 PUSH2 0x108F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10CB DUP2 PUSH2 0x10B9 JUMP JUMPDEST DUP2 EQ PUSH2 0x10D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10E6 DUP2 PUSH2 0x10C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1102 JUMPI PUSH2 0x1101 PUSH2 0x105B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x110F DUP6 DUP3 DUP7 ADD PUSH2 0x10A5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1120 DUP6 DUP3 DUP7 ADD PUSH2 0x10D8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x113E DUP2 PUSH2 0x112A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1157 PUSH0 DUP4 ADD DUP5 PUSH2 0x1135 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1166 DUP2 PUSH2 0x10B9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x117F PUSH0 DUP4 ADD DUP5 PUSH2 0x115D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x119C JUMPI PUSH2 0x119B PUSH2 0x105B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11A9 DUP7 DUP3 DUP8 ADD PUSH2 0x10A5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x11BA DUP7 DUP3 DUP8 ADD PUSH2 0x10A5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x11CB DUP7 DUP3 DUP8 ADD PUSH2 0x10D8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11EA DUP2 PUSH2 0x11D5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1203 PUSH0 DUP4 ADD DUP5 PUSH2 0x11E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x121E JUMPI PUSH2 0x121D PUSH2 0x105B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x122B DUP5 DUP3 DUP6 ADD PUSH2 0x10A5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x123D DUP2 PUSH2 0x107E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1256 PUSH0 DUP4 ADD DUP5 PUSH2 0x1234 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1272 JUMPI PUSH2 0x1271 PUSH2 0x105B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x127F DUP6 DUP3 DUP7 ADD PUSH2 0x10A5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1290 DUP6 DUP3 DUP7 ADD PUSH2 0x10A5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x12DE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x12F1 JUMPI PUSH2 0x12F0 PUSH2 0x129A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1379 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x1355 JUMPI PUSH2 0x1354 PUSH2 0x12F7 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x1364 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x1372 DUP6 PUSH2 0x1324 JUMP JUMPDEST SWAP5 POP PUSH2 0x1339 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1391 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x144C JUMP JUMPDEST DUP2 PUSH2 0x139E JUMPI PUSH0 SWAP1 POP PUSH2 0x144C JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x13B4 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x13BE JUMPI PUSH2 0x13ED JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x144C JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x13D0 JUMPI PUSH2 0x13CF PUSH2 0x12F7 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x13E7 JUMPI PUSH2 0x13E6 PUSH2 0x12F7 JUMP JUMPDEST JUMPDEST POP PUSH2 0x144C JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1422 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x141D JUMPI PUSH2 0x141C PUSH2 0x12F7 JUMP JUMPDEST JUMPDEST PUSH2 0x144C JUMP JUMPDEST PUSH2 0x142F DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1330 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x1446 JUMPI PUSH2 0x1445 PUSH2 0x12F7 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x145D DUP3 PUSH2 0x10B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1468 DUP4 PUSH2 0x11D5 JUMP JUMPDEST SWAP3 POP PUSH2 0x1495 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x1382 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14A7 DUP3 PUSH2 0x10B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x14B2 DUP4 PUSH2 0x10B9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x14C0 DUP2 PUSH2 0x10B9 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x14D7 JUMPI PUSH2 0x14D6 PUSH2 0x12F7 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D696E696D756D20707572636861736520697320302E31204554480000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1512 PUSH1 0x1B DUP4 PUSH2 0xFD5 JUMP JUMPDEST SWAP2 POP PUSH2 0x151D DUP3 PUSH2 0x14DE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x153F DUP2 PUSH2 0x1506 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F2045544820746F2077697468647261770000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x157A PUSH1 0x12 DUP4 PUSH2 0xFD5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1585 DUP3 PUSH2 0x1546 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x15A7 DUP2 PUSH2 0x156E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x15C6 PUSH0 DUP4 PUSH2 0x15AE JUMP JUMPDEST SWAP2 POP PUSH2 0x15D1 DUP3 PUSH2 0x15B8 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x15E5 DUP3 PUSH2 0x15BB JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455448207769746864726177616C206661696C65640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1623 PUSH1 0x15 DUP4 PUSH2 0xFD5 JUMP JUMPDEST SWAP2 POP PUSH2 0x162E DUP3 PUSH2 0x15EF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1650 DUP2 PUSH2 0x1617 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x166A PUSH0 DUP4 ADD DUP7 PUSH2 0x1234 JUMP JUMPDEST PUSH2 0x1677 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x115D JUMP JUMPDEST PUSH2 0x1684 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x115D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1696 DUP3 PUSH2 0x10B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x16A1 DUP4 PUSH2 0x10B9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x16B9 JUMPI PUSH2 0x16B8 PUSH2 0x12F7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL SSTORE JUMPI SWAP4 0xDC DUP15 SWAP13 JUMPDEST PUSH7 0xC284F7B5B9B84E 0xED 0x4E 0xE7 0x23 DUP10 CODECOPY PUSH19 0xC18F8D1A4145117E5364736F6C634300081A00 CALLER ",
							"sourceMap": "222:1039:7:-:0;;;313:10;:8;;;:10;;:::i;:::-;307:2;:16;;;;:::i;:::-;294:9;:30;;;;:::i;:::-;269:55;;411:114;;;;;;;;;;463:10;1601:113:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;485:33:7::2;491:10;503:14;;485:5;;;:33;;:::i;:::-;222:1039:::0;;2707:82:3;2756:5;2780:2;2773:9;;2707:82;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7458:208:3:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;;;:35;;:::i;:::-;7458:208;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:180:8:-;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;193:102;235:8;282:5;279:1;275:13;254:34;;193:102;;;:::o;301:848::-;362:5;369:4;393:6;384:15;;417:5;408:14;;431:712;452:1;442:8;439:15;431:712;;;547:4;542:3;538:14;532:4;529:24;526:50;;;556:18;;:::i;:::-;526:50;606:1;596:8;592:16;589:451;;;1021:4;1014:5;1010:16;1001:25;;589:451;1071:4;1065;1061:15;1053:23;;1101:32;1124:8;1101:32;:::i;:::-;1089:44;;431:712;;;301:848;;;;;;;:::o;1155:1073::-;1209:5;1400:8;1390:40;;1421:1;1412:10;;1423:5;;1390:40;1449:4;1439:36;;1466:1;1457:10;;1468:5;;1439:36;1535:4;1583:1;1578:27;;;;1619:1;1614:191;;;;1528:277;;1578:27;1596:1;1587:10;;1598:5;;;1614:191;1659:3;1649:8;1646:17;1643:43;;;1666:18;;:::i;:::-;1643:43;1715:8;1712:1;1708:16;1699:25;;1750:3;1743:5;1740:14;1737:40;;;1757:18;;:::i;:::-;1737:40;1790:5;;;1528:277;;1914:2;1904:8;1901:16;1895:3;1889:4;1886:13;1882:36;1864:2;1854:8;1851:16;1846:2;1840:4;1837:12;1833:35;1817:111;1814:246;;;1970:8;1964:4;1960:19;1951:28;;2005:3;1998:5;1995:14;1992:40;;;2012:18;;:::i;:::-;1992:40;2045:5;;1814:246;2085:42;2123:3;2113:8;2107:4;2104:1;2085:42;:::i;:::-;2070:57;;;;2159:4;2154:3;2150:14;2143:5;2140:25;2137:51;;;2168:18;;:::i;:::-;2137:51;2217:4;2210:5;2206:16;2197:25;;1155:1073;;;;;;:::o;2234:77::-;2271:7;2300:5;2289:16;;2234:77;;;:::o;2317:86::-;2352:7;2392:4;2385:5;2381:16;2370:27;;2317:86;;;:::o;2409:281::-;2467:5;2491:23;2509:4;2491:23;:::i;:::-;2483:31;;2535:25;2551:8;2535:25;:::i;:::-;2523:37;;2579:104;2616:66;2606:8;2600:4;2579:104;:::i;:::-;2570:113;;2409:281;;;;:::o;2696:410::-;2736:7;2759:20;2777:1;2759:20;:::i;:::-;2754:25;;2793:20;2811:1;2793:20;:::i;:::-;2788:25;;2848:1;2845;2841:9;2870:30;2888:11;2870:30;:::i;:::-;2859:41;;3049:1;3040:7;3036:15;3033:1;3030:22;3010:1;3003:9;2983:83;2960:139;;3079:18;;:::i;:::-;2960:139;2744:362;2696:410;;;;:::o;3112:99::-;3164:6;3198:5;3192:12;3182:22;;3112:99;;;:::o;3217:180::-;3265:77;3262:1;3255:88;3362:4;3359:1;3352:15;3386:4;3383:1;3376:15;3403:180;3451:77;3448:1;3441:88;3548:4;3545:1;3538:15;3572:4;3569:1;3562:15;3589:320;3633:6;3670:1;3664:4;3660:12;3650:22;;3717:1;3711:4;3707:12;3738:18;3728:81;;3794:4;3786:6;3782:17;3772:27;;3728:81;3856:2;3848:6;3845:14;3825:18;3822:38;3819:84;;3875:18;;:::i;:::-;3819:84;3640:269;3589:320;;;:::o;3915:141::-;3964:4;3987:3;3979:11;;4010:3;4007:1;4000:14;4044:4;4041:1;4031:18;4023:26;;3915:141;;;:::o;4062:93::-;4099:6;4146:2;4141;4134:5;4130:14;4126:23;4116:33;;4062:93;;;:::o;4161:107::-;4205:8;4255:5;4249:4;4245:16;4224:37;;4161:107;;;;:::o;4274:393::-;4343:6;4393:1;4381:10;4377:18;4416:97;4446:66;4435:9;4416:97;:::i;:::-;4534:39;4564:8;4553:9;4534:39;:::i;:::-;4522:51;;4606:4;4602:9;4595:5;4591:21;4582:30;;4655:4;4645:8;4641:19;4634:5;4631:30;4621:40;;4350:317;;4274:393;;;;;:::o;4673:60::-;4701:3;4722:5;4715:12;;4673:60;;;:::o;4739:142::-;4789:9;4822:53;4840:34;4849:24;4867:5;4849:24;:::i;:::-;4840:34;:::i;:::-;4822:53;:::i;:::-;4809:66;;4739:142;;;:::o;4887:75::-;4930:3;4951:5;4944:12;;4887:75;;;:::o;4968:269::-;5078:39;5109:7;5078:39;:::i;:::-;5139:91;5188:41;5212:16;5188:41;:::i;:::-;5180:6;5173:4;5167:11;5139:91;:::i;:::-;5133:4;5126:105;5044:193;4968:269;;;:::o;5243:73::-;5288:3;5243:73;:::o;5322:189::-;5399:32;;:::i;:::-;5440:65;5498:6;5490;5484:4;5440:65;:::i;:::-;5375:136;5322:189;;:::o;5517:186::-;5577:120;5594:3;5587:5;5584:14;5577:120;;;5648:39;5685:1;5678:5;5648:39;:::i;:::-;5621:1;5614:5;5610:13;5601:22;;5577:120;;;5517:186;;:::o;5709:543::-;5810:2;5805:3;5802:11;5799:446;;;5844:38;5876:5;5844:38;:::i;:::-;5928:29;5946:10;5928:29;:::i;:::-;5918:8;5914:44;6111:2;6099:10;6096:18;6093:49;;;6132:8;6117:23;;6093:49;6155:80;6211:22;6229:3;6211:22;:::i;:::-;6201:8;6197:37;6184:11;6155:80;:::i;:::-;5814:431;;5799:446;5709:543;;;:::o;6258:117::-;6312:8;6362:5;6356:4;6352:16;6331:37;;6258:117;;;;:::o;6381:169::-;6425:6;6458:51;6506:1;6502:6;6494:5;6491:1;6487:13;6458:51;:::i;:::-;6454:56;6539:4;6533;6529:15;6519:25;;6432:118;6381:169;;;;:::o;6555:295::-;6631:4;6777:29;6802:3;6796:4;6777:29;:::i;:::-;6769:37;;6839:3;6836:1;6832:11;6826:4;6823:21;6815:29;;6555:295;;;;:::o;6855:1395::-;6972:37;7005:3;6972:37;:::i;:::-;7074:18;7066:6;7063:30;7060:56;;;7096:18;;:::i;:::-;7060:56;7140:38;7172:4;7166:11;7140:38;:::i;:::-;7225:67;7285:6;7277;7271:4;7225:67;:::i;:::-;7319:1;7343:4;7330:17;;7375:2;7367:6;7364:14;7392:1;7387:618;;;;8049:1;8066:6;8063:77;;;8115:9;8110:3;8106:19;8100:26;8091:35;;8063:77;8166:67;8226:6;8219:5;8166:67;:::i;:::-;8160:4;8153:81;8022:222;7357:887;;7387:618;7439:4;7435:9;7427:6;7423:22;7473:37;7505:4;7473:37;:::i;:::-;7532:1;7546:208;7560:7;7557:1;7554:14;7546:208;;;7639:9;7634:3;7630:19;7624:26;7616:6;7609:42;7690:1;7682:6;7678:14;7668:24;;7737:2;7726:9;7722:18;7709:31;;7583:4;7580:1;7576:12;7571:17;;7546:208;;;7782:6;7773:7;7770:19;7767:179;;;7840:9;7835:3;7831:19;7825:26;7883:48;7925:4;7917:6;7913:17;7902:9;7883:48;:::i;:::-;7875:6;7868:64;7790:156;7767:179;7992:1;7988;7980:6;7976:14;7972:22;7966:4;7959:36;7394:611;;;7357:887;;6947:1303;;;6855:1395;;:::o;8256:126::-;8293:7;8333:42;8326:5;8322:54;8311:65;;8256:126;;;:::o;8388:96::-;8425:7;8454:24;8472:5;8454:24;:::i;:::-;8443:35;;8388:96;;;:::o;8490:118::-;8577:24;8595:5;8577:24;:::i;:::-;8572:3;8565:37;8490:118;;:::o;8614:222::-;8707:4;8745:2;8734:9;8730:18;8722:26;;8758:71;8826:1;8815:9;8811:17;8802:6;8758:71;:::i;:::-;8614:222;;;;:::o;8842:191::-;8882:3;8901:20;8919:1;8901:20;:::i;:::-;8896:25;;8935:20;8953:1;8935:20;:::i;:::-;8930:25;;8978:1;8975;8971:9;8964:16;;8999:3;8996:1;8993:10;8990:36;;;9006:18;;:::i;:::-;8990:36;8842:191;;;;:::o;9039:118::-;9126:24;9144:5;9126:24;:::i;:::-;9121:3;9114:37;9039:118;;:::o;9163:442::-;9312:4;9350:2;9339:9;9335:18;9327:26;;9363:71;9431:1;9420:9;9416:17;9407:6;9363:71;:::i;:::-;9444:72;9512:2;9501:9;9497:18;9488:6;9444:72;:::i;:::-;9526;9594:2;9583:9;9579:18;9570:6;9526:72;:::i;:::-;9163:442;;;;;;:::o;9611:222::-;9704:4;9742:2;9731:9;9727:18;9719:26;;9755:71;9823:1;9812:9;9808:17;9799:6;9755:71;:::i;:::-;9611:222;;;;:::o;222:1039:7:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@TOKENS_PER_ETH_1043": {
									"entryPoint": 1531,
									"id": 1043,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_776": {
									"entryPoint": 2182,
									"id": 776,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_836": {
									"entryPoint": 3043,
									"id": 836,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 2586,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_725": {
									"entryPoint": 2721,
									"id": 725,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1001": {
									"entryPoint": 2175,
									"id": 1001,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_884": {
									"entryPoint": 2200,
									"id": 884,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 2848,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_615": {
									"entryPoint": 2346,
									"id": 615,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_692": {
									"entryPoint": 3506,
									"id": 692,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_512": {
									"entryPoint": 1656,
									"id": 512,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_536": {
									"entryPoint": 1076,
									"id": 536,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_471": {
									"entryPoint": 1225,
									"id": 471,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@buyTokens_1108": {
									"entryPoint": 1544,
									"id": 1108,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_449": {
									"entryPoint": 1165,
									"id": 449,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mint_1082": {
									"entryPoint": 1173,
									"id": 1082,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_431": {
									"entryPoint": 932,
									"id": 431,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1313,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1294,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_440": {
									"entryPoint": 1353,
									"id": 440,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_458": {
									"entryPoint": 1110,
									"id": 458,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_568": {
									"entryPoint": 1119,
									"id": 568,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 2043,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_495": {
									"entryPoint": 1497,
									"id": 495,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@withdrawETH_1144": {
									"entryPoint": 1786,
									"id": 1144,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 4261,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4312,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4617,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4485,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4332,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4405,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4099,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_67506928248065293fd0e6cd746954406197a4dec19736b9aac55321bf2aecea_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5382,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5486,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_baecbe042ed394ebb1865c6c73030bf8141b916e67a70abf380f65fa81210c79_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5655,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5563,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4577,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5595,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4675,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5719,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4420,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4155,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_67506928248065293fd0e6cd746954406197a4dec19736b9aac55321bf2aecea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5416,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5520,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecbe042ed394ebb1865c6c73030bf8141b916e67a70abf380f65fa81210c79__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5689,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4460,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4592,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4043,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5550,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4053,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5772,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 4912,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 5203,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 4994,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5277,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4222,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4394,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4191,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4281,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4565,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4069,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4807,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4855,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 4762,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4187,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4083,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 4900,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_67506928248065293fd0e6cd746954406197a4dec19736b9aac55321bf2aecea": {
									"entryPoint": 5342,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95": {
									"entryPoint": 5446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_baecbe042ed394ebb1865c6c73030bf8141b916e67a70abf380f65fa81210c79": {
									"entryPoint": 5615,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 5560,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4239,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4290,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13984:8",
										"nodeType": "YulBlock",
										"src": "0:13984:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:8",
													"nodeType": "YulBlock",
													"src": "66:40:8",
													"statements": [
														{
															"nativeSrc": "77:22:8",
															"nodeType": "YulAssignment",
															"src": "77:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:8"
																},
																"nativeSrc": "87:12:8",
																"nodeType": "YulFunctionCall",
																"src": "87:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:8",
														"nodeType": "YulTypedName",
														"src": "49:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:8",
														"nodeType": "YulTypedName",
														"src": "59:6:8",
														"type": ""
													}
												],
												"src": "7:99:8"
											},
											{
												"body": {
													"nativeSrc": "208:73:8",
													"nodeType": "YulBlock",
													"src": "208:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:8"
																},
																"nativeSrc": "218:19:8",
																"nodeType": "YulFunctionCall",
																"src": "218:19:8"
															},
															"nativeSrc": "218:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:8"
														},
														{
															"nativeSrc": "246:29:8",
															"nodeType": "YulAssignment",
															"src": "246:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:8",
																		"nodeType": "YulLiteral",
																		"src": "270:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:8"
																},
																"nativeSrc": "261:14:8",
																"nodeType": "YulFunctionCall",
																"src": "261:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:8",
														"nodeType": "YulTypedName",
														"src": "180:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:8",
														"nodeType": "YulTypedName",
														"src": "185:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:8",
														"nodeType": "YulTypedName",
														"src": "196:11:8",
														"type": ""
													}
												],
												"src": "112:169:8"
											},
											{
												"body": {
													"nativeSrc": "349:77:8",
													"nodeType": "YulBlock",
													"src": "349:77:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:8"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:8"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:8"
																},
																"nativeSrc": "360:23:8",
																"nodeType": "YulFunctionCall",
																"src": "360:23:8"
															},
															"nativeSrc": "360:23:8",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:8"
																		},
																		"nativeSrc": "399:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:8",
																		"nodeType": "YulLiteral",
																		"src": "417:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:8"
																},
																"nativeSrc": "392:27:8",
																"nodeType": "YulFunctionCall",
																"src": "392:27:8"
															},
															"nativeSrc": "392:27:8",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:8"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:8",
														"nodeType": "YulTypedName",
														"src": "331:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:8",
														"nodeType": "YulTypedName",
														"src": "336:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:8",
														"nodeType": "YulTypedName",
														"src": "341:6:8",
														"type": ""
													}
												],
												"src": "287:139:8"
											},
											{
												"body": {
													"nativeSrc": "480:54:8",
													"nodeType": "YulBlock",
													"src": "480:54:8",
													"statements": [
														{
															"nativeSrc": "490:38:8",
															"nodeType": "YulAssignment",
															"src": "490:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:8",
																				"nodeType": "YulLiteral",
																				"src": "515:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:8"
																		},
																		"nativeSrc": "504:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:8",
																				"nodeType": "YulLiteral",
																				"src": "524:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:8"
																		},
																		"nativeSrc": "520:7:8",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:8"
																},
																"nativeSrc": "500:28:8",
																"nodeType": "YulFunctionCall",
																"src": "500:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:8",
														"nodeType": "YulTypedName",
														"src": "463:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:8",
														"nodeType": "YulTypedName",
														"src": "473:6:8",
														"type": ""
													}
												],
												"src": "432:102:8"
											},
											{
												"body": {
													"nativeSrc": "632:285:8",
													"nodeType": "YulBlock",
													"src": "632:285:8",
													"statements": [
														{
															"nativeSrc": "642:53:8",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:8"
																},
																"nativeSrc": "656:39:8",
																"nodeType": "YulFunctionCall",
																"src": "656:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:8",
																	"nodeType": "YulTypedName",
																	"src": "646:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:8",
															"nodeType": "YulAssignment",
															"src": "704:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:8"
																},
																"nativeSrc": "711:71:8",
																"nodeType": "YulFunctionCall",
																"src": "711:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:8",
																				"nodeType": "YulLiteral",
																				"src": "837:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:8"
																		},
																		"nativeSrc": "826:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:8",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:8"
																},
																"nativeSrc": "791:65:8",
																"nodeType": "YulFunctionCall",
																"src": "791:65:8"
															},
															"nativeSrc": "791:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:8"
														},
														{
															"nativeSrc": "865:46:8",
															"nodeType": "YulAssignment",
															"src": "865:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:8",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:8"
																		},
																		"nativeSrc": "881:29:8",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:8"
																},
																"nativeSrc": "872:39:8",
																"nodeType": "YulFunctionCall",
																"src": "872:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:8",
														"nodeType": "YulTypedName",
														"src": "613:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:8",
														"nodeType": "YulTypedName",
														"src": "620:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:8",
														"nodeType": "YulTypedName",
														"src": "628:3:8",
														"type": ""
													}
												],
												"src": "540:377:8"
											},
											{
												"body": {
													"nativeSrc": "1041:195:8",
													"nodeType": "YulBlock",
													"src": "1041:195:8",
													"statements": [
														{
															"nativeSrc": "1051:26:8",
															"nodeType": "YulAssignment",
															"src": "1051:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:8"
																},
																"nativeSrc": "1059:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:8"
																		},
																		"nativeSrc": "1094:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:8"
																		},
																		"nativeSrc": "1113:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:8"
																},
																"nativeSrc": "1087:47:8",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:8"
															},
															"nativeSrc": "1087:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:8"
														},
														{
															"nativeSrc": "1143:86:8",
															"nodeType": "YulAssignment",
															"src": "1143:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:8"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:8",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:8"
																},
																"nativeSrc": "1151:78:8",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:8",
														"nodeType": "YulTypedName",
														"src": "1013:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:8",
														"nodeType": "YulTypedName",
														"src": "1025:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:8",
														"nodeType": "YulTypedName",
														"src": "1036:4:8",
														"type": ""
													}
												],
												"src": "923:313:8"
											},
											{
												"body": {
													"nativeSrc": "1282:35:8",
													"nodeType": "YulBlock",
													"src": "1282:35:8",
													"statements": [
														{
															"nativeSrc": "1292:19:8",
															"nodeType": "YulAssignment",
															"src": "1292:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:8"
																},
																"nativeSrc": "1302:9:8",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:8",
														"nodeType": "YulTypedName",
														"src": "1275:6:8",
														"type": ""
													}
												],
												"src": "1242:75:8"
											},
											{
												"body": {
													"nativeSrc": "1412:28:8",
													"nodeType": "YulBlock",
													"src": "1412:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:8"
																},
																"nativeSrc": "1422:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:8"
															},
															"nativeSrc": "1422:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:8"
											},
											{
												"body": {
													"nativeSrc": "1535:28:8",
													"nodeType": "YulBlock",
													"src": "1535:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:8"
																},
																"nativeSrc": "1545:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:8"
															},
															"nativeSrc": "1545:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:8"
											},
											{
												"body": {
													"nativeSrc": "1614:81:8",
													"nodeType": "YulBlock",
													"src": "1614:81:8",
													"statements": [
														{
															"nativeSrc": "1624:65:8",
															"nodeType": "YulAssignment",
															"src": "1624:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:8",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:8"
																},
																"nativeSrc": "1635:54:8",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:8",
														"nodeType": "YulTypedName",
														"src": "1596:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:8",
														"nodeType": "YulTypedName",
														"src": "1606:7:8",
														"type": ""
													}
												],
												"src": "1569:126:8"
											},
											{
												"body": {
													"nativeSrc": "1746:51:8",
													"nodeType": "YulBlock",
													"src": "1746:51:8",
													"statements": [
														{
															"nativeSrc": "1756:35:8",
															"nodeType": "YulAssignment",
															"src": "1756:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:8"
																},
																"nativeSrc": "1767:24:8",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:8",
														"nodeType": "YulTypedName",
														"src": "1728:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:8",
														"nodeType": "YulTypedName",
														"src": "1738:7:8",
														"type": ""
													}
												],
												"src": "1701:96:8"
											},
											{
												"body": {
													"nativeSrc": "1846:79:8",
													"nodeType": "YulBlock",
													"src": "1846:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:8",
																"nodeType": "YulBlock",
																"src": "1903:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:8"
																			},
																			"nativeSrc": "1905:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:8"
																		},
																		"nativeSrc": "1905:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:8"
																				},
																				"nativeSrc": "1876:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:8"
																		},
																		"nativeSrc": "1866:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:8"
																},
																"nativeSrc": "1859:43:8",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:8"
															},
															"nativeSrc": "1856:63:8",
															"nodeType": "YulIf",
															"src": "1856:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:8",
														"nodeType": "YulTypedName",
														"src": "1839:5:8",
														"type": ""
													}
												],
												"src": "1803:122:8"
											},
											{
												"body": {
													"nativeSrc": "1983:87:8",
													"nodeType": "YulBlock",
													"src": "1983:87:8",
													"statements": [
														{
															"nativeSrc": "1993:29:8",
															"nodeType": "YulAssignment",
															"src": "1993:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:8"
																},
																"nativeSrc": "2002:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:8"
																},
																"nativeSrc": "2031:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:8"
															},
															"nativeSrc": "2031:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:8",
														"nodeType": "YulTypedName",
														"src": "1961:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:8",
														"nodeType": "YulTypedName",
														"src": "1969:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:8",
														"nodeType": "YulTypedName",
														"src": "1977:5:8",
														"type": ""
													}
												],
												"src": "1931:139:8"
											},
											{
												"body": {
													"nativeSrc": "2121:32:8",
													"nodeType": "YulBlock",
													"src": "2121:32:8",
													"statements": [
														{
															"nativeSrc": "2131:16:8",
															"nodeType": "YulAssignment",
															"src": "2131:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:8",
																"nodeType": "YulIdentifier",
																"src": "2142:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:8",
														"nodeType": "YulTypedName",
														"src": "2103:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:8",
														"nodeType": "YulTypedName",
														"src": "2113:7:8",
														"type": ""
													}
												],
												"src": "2076:77:8"
											},
											{
												"body": {
													"nativeSrc": "2202:79:8",
													"nodeType": "YulBlock",
													"src": "2202:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:8",
																"nodeType": "YulBlock",
																"src": "2259:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:8"
																			},
																			"nativeSrc": "2261:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:8"
																		},
																		"nativeSrc": "2261:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:8"
																				},
																				"nativeSrc": "2232:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:8"
																		},
																		"nativeSrc": "2222:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:8"
																},
																"nativeSrc": "2215:43:8",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:8"
															},
															"nativeSrc": "2212:63:8",
															"nodeType": "YulIf",
															"src": "2212:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:8",
														"nodeType": "YulTypedName",
														"src": "2195:5:8",
														"type": ""
													}
												],
												"src": "2159:122:8"
											},
											{
												"body": {
													"nativeSrc": "2339:87:8",
													"nodeType": "YulBlock",
													"src": "2339:87:8",
													"statements": [
														{
															"nativeSrc": "2349:29:8",
															"nodeType": "YulAssignment",
															"src": "2349:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:8"
																},
																"nativeSrc": "2358:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:8"
																},
																"nativeSrc": "2387:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:8"
															},
															"nativeSrc": "2387:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:8",
														"nodeType": "YulTypedName",
														"src": "2317:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:8",
														"nodeType": "YulTypedName",
														"src": "2325:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:8",
														"nodeType": "YulTypedName",
														"src": "2333:5:8",
														"type": ""
													}
												],
												"src": "2287:139:8"
											},
											{
												"body": {
													"nativeSrc": "2515:391:8",
													"nodeType": "YulBlock",
													"src": "2515:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:8",
																"nodeType": "YulBlock",
																"src": "2561:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:8"
																			},
																			"nativeSrc": "2563:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:8"
																		},
																		"nativeSrc": "2563:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:8"
																		},
																		"nativeSrc": "2532:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:8"
																},
																"nativeSrc": "2528:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:8"
															},
															"nativeSrc": "2525:119:8",
															"nodeType": "YulIf",
															"src": "2525:119:8"
														},
														{
															"nativeSrc": "2654:117:8",
															"nodeType": "YulBlock",
															"src": "2654:117:8",
															"statements": [
																{
																	"nativeSrc": "2669:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:8",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:8"
																				},
																				"nativeSrc": "2729:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:8"
																		},
																		"nativeSrc": "2708:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:8",
															"nodeType": "YulBlock",
															"src": "2781:118:8",
															"statements": [
																{
																	"nativeSrc": "2796:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:8",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:8"
																				},
																				"nativeSrc": "2857:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:8"
																		},
																		"nativeSrc": "2836:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:8",
														"nodeType": "YulTypedName",
														"src": "2477:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:8",
														"nodeType": "YulTypedName",
														"src": "2488:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:8",
														"nodeType": "YulTypedName",
														"src": "2500:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:8",
														"nodeType": "YulTypedName",
														"src": "2508:6:8",
														"type": ""
													}
												],
												"src": "2432:474:8"
											},
											{
												"body": {
													"nativeSrc": "2954:48:8",
													"nodeType": "YulBlock",
													"src": "2954:48:8",
													"statements": [
														{
															"nativeSrc": "2964:32:8",
															"nodeType": "YulAssignment",
															"src": "2964:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:8"
																		},
																		"nativeSrc": "2982:13:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:8"
																},
																"nativeSrc": "2975:21:8",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:8",
														"nodeType": "YulTypedName",
														"src": "2936:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:8",
														"nodeType": "YulTypedName",
														"src": "2946:7:8",
														"type": ""
													}
												],
												"src": "2912:90:8"
											},
											{
												"body": {
													"nativeSrc": "3067:50:8",
													"nodeType": "YulBlock",
													"src": "3067:50:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:8",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:8"
																		},
																		"nativeSrc": "3089:21:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:8"
																},
																"nativeSrc": "3077:34:8",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:8"
															},
															"nativeSrc": "3077:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:8"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:8",
														"nodeType": "YulTypedName",
														"src": "3055:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:8",
														"nodeType": "YulTypedName",
														"src": "3062:3:8",
														"type": ""
													}
												],
												"src": "3008:109:8"
											},
											{
												"body": {
													"nativeSrc": "3215:118:8",
													"nodeType": "YulBlock",
													"src": "3215:118:8",
													"statements": [
														{
															"nativeSrc": "3225:26:8",
															"nodeType": "YulAssignment",
															"src": "3225:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:8"
																},
																"nativeSrc": "3233:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:8"
																		},
																		"nativeSrc": "3308:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:8",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:8"
																},
																"nativeSrc": "3261:65:8",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:8"
															},
															"nativeSrc": "3261:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:8",
														"nodeType": "YulTypedName",
														"src": "3187:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:8",
														"nodeType": "YulTypedName",
														"src": "3199:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:8",
														"nodeType": "YulTypedName",
														"src": "3210:4:8",
														"type": ""
													}
												],
												"src": "3123:210:8"
											},
											{
												"body": {
													"nativeSrc": "3404:53:8",
													"nodeType": "YulBlock",
													"src": "3404:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:8"
																		},
																		"nativeSrc": "3426:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:8"
																},
																"nativeSrc": "3414:37:8",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:8"
															},
															"nativeSrc": "3414:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:8",
														"nodeType": "YulTypedName",
														"src": "3392:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:8",
														"nodeType": "YulTypedName",
														"src": "3399:3:8",
														"type": ""
													}
												],
												"src": "3339:118:8"
											},
											{
												"body": {
													"nativeSrc": "3561:124:8",
													"nodeType": "YulBlock",
													"src": "3561:124:8",
													"statements": [
														{
															"nativeSrc": "3571:26:8",
															"nodeType": "YulAssignment",
															"src": "3571:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:8"
																},
																"nativeSrc": "3579:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:8"
																		},
																		"nativeSrc": "3660:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:8"
																},
																"nativeSrc": "3607:71:8",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:8"
															},
															"nativeSrc": "3607:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:8",
														"nodeType": "YulTypedName",
														"src": "3533:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:8",
														"nodeType": "YulTypedName",
														"src": "3545:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:8",
														"nodeType": "YulTypedName",
														"src": "3556:4:8",
														"type": ""
													}
												],
												"src": "3463:222:8"
											},
											{
												"body": {
													"nativeSrc": "3791:519:8",
													"nodeType": "YulBlock",
													"src": "3791:519:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:8",
																"nodeType": "YulBlock",
																"src": "3837:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:8"
																			},
																			"nativeSrc": "3839:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:8"
																		},
																		"nativeSrc": "3839:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:8"
																		},
																		"nativeSrc": "3808:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:8"
																},
																"nativeSrc": "3804:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:8"
															},
															"nativeSrc": "3801:119:8",
															"nodeType": "YulIf",
															"src": "3801:119:8"
														},
														{
															"nativeSrc": "3930:117:8",
															"nodeType": "YulBlock",
															"src": "3930:117:8",
															"statements": [
																{
																	"nativeSrc": "3945:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:8",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:8"
																				},
																				"nativeSrc": "4005:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:8"
																		},
																		"nativeSrc": "3984:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:8",
															"nodeType": "YulBlock",
															"src": "4057:118:8",
															"statements": [
																{
																	"nativeSrc": "4072:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:8"
																				},
																				"nativeSrc": "4133:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:8"
																		},
																		"nativeSrc": "4112:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:8",
															"nodeType": "YulBlock",
															"src": "4185:118:8",
															"statements": [
																{
																	"nativeSrc": "4200:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:8"
																				},
																				"nativeSrc": "4261:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:8"
																		},
																		"nativeSrc": "4240:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:8",
														"nodeType": "YulTypedName",
														"src": "3745:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:8",
														"nodeType": "YulTypedName",
														"src": "3756:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:8",
														"nodeType": "YulTypedName",
														"src": "3768:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:8",
														"nodeType": "YulTypedName",
														"src": "3776:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:8",
														"nodeType": "YulTypedName",
														"src": "3784:6:8",
														"type": ""
													}
												],
												"src": "3691:619:8"
											},
											{
												"body": {
													"nativeSrc": "4359:43:8",
													"nodeType": "YulBlock",
													"src": "4359:43:8",
													"statements": [
														{
															"nativeSrc": "4369:27:8",
															"nodeType": "YulAssignment",
															"src": "4369:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:8",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:8",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:8"
																},
																"nativeSrc": "4380:16:8",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:8",
														"nodeType": "YulTypedName",
														"src": "4341:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:8",
														"nodeType": "YulTypedName",
														"src": "4351:7:8",
														"type": ""
													}
												],
												"src": "4316:86:8"
											},
											{
												"body": {
													"nativeSrc": "4469:51:8",
													"nodeType": "YulBlock",
													"src": "4469:51:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:8",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:8"
																		},
																		"nativeSrc": "4491:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:8"
																},
																"nativeSrc": "4479:35:8",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:8"
															},
															"nativeSrc": "4479:35:8",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:8"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:8",
														"nodeType": "YulTypedName",
														"src": "4457:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:8",
														"nodeType": "YulTypedName",
														"src": "4464:3:8",
														"type": ""
													}
												],
												"src": "4408:112:8"
											},
											{
												"body": {
													"nativeSrc": "4620:120:8",
													"nodeType": "YulBlock",
													"src": "4620:120:8",
													"statements": [
														{
															"nativeSrc": "4630:26:8",
															"nodeType": "YulAssignment",
															"src": "4630:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:8"
																},
																"nativeSrc": "4638:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:8",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:8"
																		},
																		"nativeSrc": "4715:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:8",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:8"
																},
																"nativeSrc": "4666:67:8",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:8"
															},
															"nativeSrc": "4666:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:8",
														"nodeType": "YulTypedName",
														"src": "4592:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:8",
														"nodeType": "YulTypedName",
														"src": "4604:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:8",
														"nodeType": "YulTypedName",
														"src": "4615:4:8",
														"type": ""
													}
												],
												"src": "4526:214:8"
											},
											{
												"body": {
													"nativeSrc": "4812:263:8",
													"nodeType": "YulBlock",
													"src": "4812:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4858:83:8",
																"nodeType": "YulBlock",
																"src": "4858:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4860:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "4860:77:8"
																			},
																			"nativeSrc": "4860:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4860:79:8"
																		},
																		"nativeSrc": "4860:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4860:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4833:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4833:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4842:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4842:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4829:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4829:3:8"
																		},
																		"nativeSrc": "4829:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4854:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4854:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4825:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4825:3:8"
																},
																"nativeSrc": "4825:32:8",
																"nodeType": "YulFunctionCall",
																"src": "4825:32:8"
															},
															"nativeSrc": "4822:119:8",
															"nodeType": "YulIf",
															"src": "4822:119:8"
														},
														{
															"nativeSrc": "4951:117:8",
															"nodeType": "YulBlock",
															"src": "4951:117:8",
															"statements": [
																{
																	"nativeSrc": "4966:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4966:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4980:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4980:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4970:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4970:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4995:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4995:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5030:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5030:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5041:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5041:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5026:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5026:3:8"
																				},
																				"nativeSrc": "5026:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5026:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5050:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5050:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5005:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5005:20:8"
																		},
																		"nativeSrc": "5005:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4995:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4995:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4746:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4782:9:8",
														"nodeType": "YulTypedName",
														"src": "4782:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4793:7:8",
														"nodeType": "YulTypedName",
														"src": "4793:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4805:6:8",
														"nodeType": "YulTypedName",
														"src": "4805:6:8",
														"type": ""
													}
												],
												"src": "4746:329:8"
											},
											{
												"body": {
													"nativeSrc": "5146:53:8",
													"nodeType": "YulBlock",
													"src": "5146:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5163:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5163:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5186:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5186:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5168:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "5168:17:8"
																		},
																		"nativeSrc": "5168:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5168:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5156:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5156:6:8"
																},
																"nativeSrc": "5156:37:8",
																"nodeType": "YulFunctionCall",
																"src": "5156:37:8"
															},
															"nativeSrc": "5156:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "5156:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5081:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5134:5:8",
														"nodeType": "YulTypedName",
														"src": "5134:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5141:3:8",
														"nodeType": "YulTypedName",
														"src": "5141:3:8",
														"type": ""
													}
												],
												"src": "5081:118:8"
											},
											{
												"body": {
													"nativeSrc": "5303:124:8",
													"nodeType": "YulBlock",
													"src": "5303:124:8",
													"statements": [
														{
															"nativeSrc": "5313:26:8",
															"nodeType": "YulAssignment",
															"src": "5313:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5325:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5325:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5336:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5336:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5321:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5321:3:8"
																},
																"nativeSrc": "5321:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5321:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5313:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5313:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5393:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5393:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5406:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5406:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5417:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5417:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5402:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5402:3:8"
																		},
																		"nativeSrc": "5402:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5402:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5349:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "5349:43:8"
																},
																"nativeSrc": "5349:71:8",
																"nodeType": "YulFunctionCall",
																"src": "5349:71:8"
															},
															"nativeSrc": "5349:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "5349:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5205:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5275:9:8",
														"nodeType": "YulTypedName",
														"src": "5275:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5287:6:8",
														"nodeType": "YulTypedName",
														"src": "5287:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5298:4:8",
														"nodeType": "YulTypedName",
														"src": "5298:4:8",
														"type": ""
													}
												],
												"src": "5205:222:8"
											},
											{
												"body": {
													"nativeSrc": "5516:391:8",
													"nodeType": "YulBlock",
													"src": "5516:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5562:83:8",
																"nodeType": "YulBlock",
																"src": "5562:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5564:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "5564:77:8"
																			},
																			"nativeSrc": "5564:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5564:79:8"
																		},
																		"nativeSrc": "5564:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5564:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5537:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5537:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5546:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5546:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5533:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5533:3:8"
																		},
																		"nativeSrc": "5533:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5533:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5558:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5558:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5529:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5529:3:8"
																},
																"nativeSrc": "5529:32:8",
																"nodeType": "YulFunctionCall",
																"src": "5529:32:8"
															},
															"nativeSrc": "5526:119:8",
															"nodeType": "YulIf",
															"src": "5526:119:8"
														},
														{
															"nativeSrc": "5655:117:8",
															"nodeType": "YulBlock",
															"src": "5655:117:8",
															"statements": [
																{
																	"nativeSrc": "5670:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5670:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5684:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5684:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5674:6:8",
																			"nodeType": "YulTypedName",
																			"src": "5674:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5699:63:8",
																	"nodeType": "YulAssignment",
																	"src": "5699:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5734:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5734:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5745:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5745:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5730:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5730:3:8"
																				},
																				"nativeSrc": "5730:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5730:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5754:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5754:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5709:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5709:20:8"
																		},
																		"nativeSrc": "5709:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5709:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5699:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5699:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5782:118:8",
															"nodeType": "YulBlock",
															"src": "5782:118:8",
															"statements": [
																{
																	"nativeSrc": "5797:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5797:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5811:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5811:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5801:6:8",
																			"nodeType": "YulTypedName",
																			"src": "5801:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5827:63:8",
																	"nodeType": "YulAssignment",
																	"src": "5827:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5862:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5862:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5873:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5873:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5858:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5858:3:8"
																				},
																				"nativeSrc": "5858:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5858:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5882:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5882:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5837:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5837:20:8"
																		},
																		"nativeSrc": "5837:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5837:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5827:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5827:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5433:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5478:9:8",
														"nodeType": "YulTypedName",
														"src": "5478:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5489:7:8",
														"nodeType": "YulTypedName",
														"src": "5489:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5501:6:8",
														"nodeType": "YulTypedName",
														"src": "5501:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5509:6:8",
														"nodeType": "YulTypedName",
														"src": "5509:6:8",
														"type": ""
													}
												],
												"src": "5433:474:8"
											},
											{
												"body": {
													"nativeSrc": "5941:152:8",
													"nodeType": "YulBlock",
													"src": "5941:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5958:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5958:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5961:77:8",
																		"nodeType": "YulLiteral",
																		"src": "5961:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5951:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5951:6:8"
																},
																"nativeSrc": "5951:88:8",
																"nodeType": "YulFunctionCall",
																"src": "5951:88:8"
															},
															"nativeSrc": "5951:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "5951:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6055:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6055:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6058:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6058:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6048:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6048:6:8"
																},
																"nativeSrc": "6048:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6048:15:8"
															},
															"nativeSrc": "6048:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "6048:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6079:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6079:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6082:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6082:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6072:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6072:6:8"
																},
																"nativeSrc": "6072:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6072:15:8"
															},
															"nativeSrc": "6072:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "6072:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "5913:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "5913:180:8"
											},
											{
												"body": {
													"nativeSrc": "6150:269:8",
													"nodeType": "YulBlock",
													"src": "6150:269:8",
													"statements": [
														{
															"nativeSrc": "6160:22:8",
															"nodeType": "YulAssignment",
															"src": "6160:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6174:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6174:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6180:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6180:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6170:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6170:3:8"
																},
																"nativeSrc": "6170:12:8",
																"nodeType": "YulFunctionCall",
																"src": "6170:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6160:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6160:6:8"
																}
															]
														},
														{
															"nativeSrc": "6191:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "6191:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6221:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6221:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6227:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6227:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6217:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6217:3:8"
																},
																"nativeSrc": "6217:12:8",
																"nodeType": "YulFunctionCall",
																"src": "6217:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6195:18:8",
																	"nodeType": "YulTypedName",
																	"src": "6195:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6268:51:8",
																"nodeType": "YulBlock",
																"src": "6268:51:8",
																"statements": [
																	{
																		"nativeSrc": "6282:27:8",
																		"nodeType": "YulAssignment",
																		"src": "6282:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6296:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "6296:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6304:4:8",
																					"nodeType": "YulLiteral",
																					"src": "6304:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6292:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "6292:3:8"
																			},
																			"nativeSrc": "6292:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6292:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6282:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6282:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6248:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "6248:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6241:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6241:6:8"
																},
																"nativeSrc": "6241:26:8",
																"nodeType": "YulFunctionCall",
																"src": "6241:26:8"
															},
															"nativeSrc": "6238:81:8",
															"nodeType": "YulIf",
															"src": "6238:81:8"
														},
														{
															"body": {
																"nativeSrc": "6371:42:8",
																"nodeType": "YulBlock",
																"src": "6371:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6385:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "6385:16:8"
																			},
																			"nativeSrc": "6385:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6385:18:8"
																		},
																		"nativeSrc": "6385:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6385:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6335:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "6335:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6358:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6358:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6366:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6366:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6355:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "6355:2:8"
																		},
																		"nativeSrc": "6355:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6355:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6332:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "6332:2:8"
																},
																"nativeSrc": "6332:38:8",
																"nodeType": "YulFunctionCall",
																"src": "6332:38:8"
															},
															"nativeSrc": "6329:84:8",
															"nodeType": "YulIf",
															"src": "6329:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6099:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6134:4:8",
														"nodeType": "YulTypedName",
														"src": "6134:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6143:6:8",
														"nodeType": "YulTypedName",
														"src": "6143:6:8",
														"type": ""
													}
												],
												"src": "6099:320:8"
											},
											{
												"body": {
													"nativeSrc": "6453:152:8",
													"nodeType": "YulBlock",
													"src": "6453:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6470:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6470:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6473:77:8",
																		"nodeType": "YulLiteral",
																		"src": "6473:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6463:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6463:6:8"
																},
																"nativeSrc": "6463:88:8",
																"nodeType": "YulFunctionCall",
																"src": "6463:88:8"
															},
															"nativeSrc": "6463:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "6463:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6567:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6567:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6570:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6570:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6560:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6560:6:8"
																},
																"nativeSrc": "6560:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6560:15:8"
															},
															"nativeSrc": "6560:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "6560:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6591:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6591:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6594:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6594:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6584:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6584:6:8"
																},
																"nativeSrc": "6584:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6584:15:8"
															},
															"nativeSrc": "6584:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "6584:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6425:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "6425:180:8"
											},
											{
												"body": {
													"nativeSrc": "6662:51:8",
													"nodeType": "YulBlock",
													"src": "6662:51:8",
													"statements": [
														{
															"nativeSrc": "6672:34:8",
															"nodeType": "YulAssignment",
															"src": "6672:34:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6697:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6697:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6700:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "6700:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6693:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6693:3:8"
																},
																"nativeSrc": "6693:13:8",
																"nodeType": "YulFunctionCall",
																"src": "6693:13:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6672:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "6672:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "6611:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6643:5:8",
														"nodeType": "YulTypedName",
														"src": "6643:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6653:8:8",
														"nodeType": "YulTypedName",
														"src": "6653:8:8",
														"type": ""
													}
												],
												"src": "6611:102:8"
											},
											{
												"body": {
													"nativeSrc": "6792:775:8",
													"nodeType": "YulBlock",
													"src": "6792:775:8",
													"statements": [
														{
															"nativeSrc": "6802:15:8",
															"nodeType": "YulAssignment",
															"src": "6802:15:8",
															"value": {
																"name": "_power",
																"nativeSrc": "6811:6:8",
																"nodeType": "YulIdentifier",
																"src": "6811:6:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "6802:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "6802:5:8"
																}
															]
														},
														{
															"nativeSrc": "6826:14:8",
															"nodeType": "YulAssignment",
															"src": "6826:14:8",
															"value": {
																"name": "_base",
																"nativeSrc": "6835:5:8",
																"nodeType": "YulIdentifier",
																"src": "6835:5:8"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "6826:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6826:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6884:677:8",
																"nodeType": "YulBlock",
																"src": "6884:677:8",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "6972:22:8",
																			"nodeType": "YulBlock",
																			"src": "6972:22:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "6974:16:8",
																							"nodeType": "YulIdentifier",
																							"src": "6974:16:8"
																						},
																						"nativeSrc": "6974:18:8",
																						"nodeType": "YulFunctionCall",
																						"src": "6974:18:8"
																					},
																					"nativeSrc": "6974:18:8",
																					"nodeType": "YulExpressionStatement",
																					"src": "6974:18:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "6950:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "6950:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "6960:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "6960:3:8"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "6965:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "6965:4:8"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "6956:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "6956:3:8"
																					},
																					"nativeSrc": "6956:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6956:14:8"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "6947:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "6947:2:8"
																			},
																			"nativeSrc": "6947:24:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6947:24:8"
																		},
																		"nativeSrc": "6944:50:8",
																		"nodeType": "YulIf",
																		"src": "6944:50:8"
																	},
																	{
																		"body": {
																			"nativeSrc": "7039:419:8",
																			"nodeType": "YulBlock",
																			"src": "7039:419:8",
																			"statements": [
																				{
																					"nativeSrc": "7419:25:8",
																					"nodeType": "YulAssignment",
																					"src": "7419:25:8",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "7432:5:8",
																								"nodeType": "YulIdentifier",
																								"src": "7432:5:8"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "7439:4:8",
																								"nodeType": "YulIdentifier",
																								"src": "7439:4:8"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "7428:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "7428:3:8"
																						},
																						"nativeSrc": "7428:16:8",
																						"nodeType": "YulFunctionCall",
																						"src": "7428:16:8"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "7419:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "7419:5:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "7014:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "7014:8:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7024:1:8",
																					"nodeType": "YulLiteral",
																					"src": "7024:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7010:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "7010:3:8"
																			},
																			"nativeSrc": "7010:16:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7010:16:8"
																		},
																		"nativeSrc": "7007:451:8",
																		"nodeType": "YulIf",
																		"src": "7007:451:8"
																	},
																	{
																		"nativeSrc": "7471:23:8",
																		"nodeType": "YulAssignment",
																		"src": "7471:23:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7483:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "7483:4:8"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "7489:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "7489:4:8"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "7479:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "7479:3:8"
																			},
																			"nativeSrc": "7479:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7479:15:8"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "7471:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "7471:4:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7507:44:8",
																		"nodeType": "YulAssignment",
																		"src": "7507:44:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "7542:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "7542:8:8"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "7519:22:8",
																				"nodeType": "YulIdentifier",
																				"src": "7519:22:8"
																			},
																			"nativeSrc": "7519:32:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7519:32:8"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "7507:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "7507:8:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "6860:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "6860:8:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6870:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6870:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6857:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "6857:2:8"
																},
																"nativeSrc": "6857:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6857:15:8"
															},
															"nativeSrc": "6849:712:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6873:2:8",
																"nodeType": "YulBlock",
																"src": "6873:2:8",
																"statements": []
															},
															"pre": {
																"nativeSrc": "6853:3:8",
																"nodeType": "YulBlock",
																"src": "6853:3:8",
																"statements": []
															},
															"src": "6849:712:8"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "6719:848:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "6747:6:8",
														"nodeType": "YulTypedName",
														"src": "6747:6:8",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "6755:5:8",
														"nodeType": "YulTypedName",
														"src": "6755:5:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "6762:8:8",
														"nodeType": "YulTypedName",
														"src": "6762:8:8",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "6772:3:8",
														"nodeType": "YulTypedName",
														"src": "6772:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "6780:5:8",
														"nodeType": "YulTypedName",
														"src": "6780:5:8",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "6787:4:8",
														"nodeType": "YulTypedName",
														"src": "6787:4:8",
														"type": ""
													}
												],
												"src": "6719:848:8"
											},
											{
												"body": {
													"nativeSrc": "7633:1013:8",
													"nodeType": "YulBlock",
													"src": "7633:1013:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "7828:20:8",
																"nodeType": "YulBlock",
																"src": "7828:20:8",
																"statements": [
																	{
																		"nativeSrc": "7830:10:8",
																		"nodeType": "YulAssignment",
																		"src": "7830:10:8",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "7839:1:8",
																			"nodeType": "YulLiteral",
																			"src": "7839:1:8",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "7830:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "7830:5:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7841:5:8",
																		"nodeType": "YulLeave",
																		"src": "7841:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "7818:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "7818:8:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7811:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7811:6:8"
																},
																"nativeSrc": "7811:16:8",
																"nodeType": "YulFunctionCall",
																"src": "7811:16:8"
															},
															"nativeSrc": "7808:40:8",
															"nodeType": "YulIf",
															"src": "7808:40:8"
														},
														{
															"body": {
																"nativeSrc": "7873:20:8",
																"nodeType": "YulBlock",
																"src": "7873:20:8",
																"statements": [
																	{
																		"nativeSrc": "7875:10:8",
																		"nodeType": "YulAssignment",
																		"src": "7875:10:8",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "7884:1:8",
																			"nodeType": "YulLiteral",
																			"src": "7884:1:8",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "7875:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "7875:5:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7886:5:8",
																		"nodeType": "YulLeave",
																		"src": "7886:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "7867:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "7867:4:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7860:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7860:6:8"
																},
																"nativeSrc": "7860:12:8",
																"nodeType": "YulFunctionCall",
																"src": "7860:12:8"
															},
															"nativeSrc": "7857:36:8",
															"nodeType": "YulIf",
															"src": "7857:36:8"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8003:20:8",
																		"nodeType": "YulBlock",
																		"src": "8003:20:8",
																		"statements": [
																			{
																				"nativeSrc": "8005:10:8",
																				"nodeType": "YulAssignment",
																				"src": "8005:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8014:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8014:1:8",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "8005:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "8005:5:8"
																					}
																				]
																			},
																			{
																				"nativeSrc": "8016:5:8",
																				"nodeType": "YulLeave",
																				"src": "8016:5:8"
																			}
																		]
																	},
																	"nativeSrc": "7996:27:8",
																	"nodeType": "YulCase",
																	"src": "7996:27:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8001:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8001:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8047:176:8",
																		"nodeType": "YulBlock",
																		"src": "8047:176:8",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "8082:22:8",
																					"nodeType": "YulBlock",
																					"src": "8082:22:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "8084:16:8",
																									"nodeType": "YulIdentifier",
																									"src": "8084:16:8"
																								},
																								"nativeSrc": "8084:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "8084:18:8"
																							},
																							"nativeSrc": "8084:18:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "8084:18:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "8067:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "8067:8:8"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "8077:3:8",
																							"nodeType": "YulLiteral",
																							"src": "8077:3:8",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "8064:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "8064:2:8"
																					},
																					"nativeSrc": "8064:17:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8064:17:8"
																				},
																				"nativeSrc": "8061:43:8",
																				"nodeType": "YulIf",
																				"src": "8061:43:8"
																			},
																			{
																				"nativeSrc": "8117:25:8",
																				"nodeType": "YulAssignment",
																				"src": "8117:25:8",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "8130:1:8",
																							"nodeType": "YulLiteral",
																							"src": "8130:1:8",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "8133:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "8133:8:8"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "8126:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "8126:3:8"
																					},
																					"nativeSrc": "8126:16:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8126:16:8"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "8117:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "8117:5:8"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8173:22:8",
																					"nodeType": "YulBlock",
																					"src": "8173:22:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "8175:16:8",
																									"nodeType": "YulIdentifier",
																									"src": "8175:16:8"
																								},
																								"nativeSrc": "8175:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "8175:18:8"
																							},
																							"nativeSrc": "8175:18:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "8175:18:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "8161:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "8161:5:8"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "8168:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "8168:3:8"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "8158:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "8158:2:8"
																					},
																					"nativeSrc": "8158:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8158:14:8"
																				},
																				"nativeSrc": "8155:40:8",
																				"nodeType": "YulIf",
																				"src": "8155:40:8"
																			},
																			{
																				"nativeSrc": "8208:5:8",
																				"nodeType": "YulLeave",
																				"src": "8208:5:8"
																			}
																		]
																	},
																	"nativeSrc": "8032:191:8",
																	"nodeType": "YulCase",
																	"src": "8032:191:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8037:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8037:1:8",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "7953:4:8",
																"nodeType": "YulIdentifier",
																"src": "7953:4:8"
															},
															"nativeSrc": "7946:277:8",
															"nodeType": "YulSwitch",
															"src": "7946:277:8"
														},
														{
															"body": {
																"nativeSrc": "8355:123:8",
																"nodeType": "YulBlock",
																"src": "8355:123:8",
																"statements": [
																	{
																		"nativeSrc": "8369:28:8",
																		"nodeType": "YulAssignment",
																		"src": "8369:28:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "8382:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "8382:4:8"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "8388:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "8388:8:8"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "8378:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "8378:3:8"
																			},
																			"nativeSrc": "8378:19:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8378:19:8"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8369:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "8369:5:8"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "8428:22:8",
																			"nodeType": "YulBlock",
																			"src": "8428:22:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "8430:16:8",
																							"nodeType": "YulIdentifier",
																							"src": "8430:16:8"
																						},
																						"nativeSrc": "8430:18:8",
																						"nodeType": "YulFunctionCall",
																						"src": "8430:18:8"
																					},
																					"nativeSrc": "8430:18:8",
																					"nodeType": "YulExpressionStatement",
																					"src": "8430:18:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "8416:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "8416:5:8"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "8423:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8423:3:8"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "8413:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "8413:2:8"
																			},
																			"nativeSrc": "8413:14:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8413:14:8"
																		},
																		"nativeSrc": "8410:40:8",
																		"nodeType": "YulIf",
																		"src": "8410:40:8"
																	},
																	{
																		"nativeSrc": "8463:5:8",
																		"nodeType": "YulLeave",
																		"src": "8463:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "8258:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "8258:4:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8264:2:8",
																						"nodeType": "YulLiteral",
																						"src": "8264:2:8",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8255:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "8255:2:8"
																				},
																				"nativeSrc": "8255:12:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8255:12:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "8272:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "8272:8:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8282:2:8",
																						"nodeType": "YulLiteral",
																						"src": "8282:2:8",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8269:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "8269:2:8"
																				},
																				"nativeSrc": "8269:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8269:16:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8251:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8251:3:8"
																		},
																		"nativeSrc": "8251:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8251:35:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "8307:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "8307:4:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8313:3:8",
																						"nodeType": "YulLiteral",
																						"src": "8313:3:8",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8304:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "8304:2:8"
																				},
																				"nativeSrc": "8304:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8304:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "8322:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "8322:8:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8332:2:8",
																						"nodeType": "YulLiteral",
																						"src": "8332:2:8",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8319:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "8319:2:8"
																				},
																				"nativeSrc": "8319:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8319:16:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8300:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8300:3:8"
																		},
																		"nativeSrc": "8300:36:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8300:36:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8235:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "8235:2:8"
																},
																"nativeSrc": "8235:111:8",
																"nodeType": "YulFunctionCall",
																"src": "8235:111:8"
															},
															"nativeSrc": "8232:246:8",
															"nodeType": "YulIf",
															"src": "8232:246:8"
														},
														{
															"nativeSrc": "8488:57:8",
															"nodeType": "YulAssignment",
															"src": "8488:57:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8522:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8522:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "8525:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "8525:4:8"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "8531:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "8531:8:8"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "8541:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8541:3:8"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "8503:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "8503:18:8"
																},
																"nativeSrc": "8503:42:8",
																"nodeType": "YulFunctionCall",
																"src": "8503:42:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8488:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "8488:5:8"
																},
																{
																	"name": "base",
																	"nativeSrc": "8495:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8495:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8584:22:8",
																"nodeType": "YulBlock",
																"src": "8584:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8586:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "8586:16:8"
																			},
																			"nativeSrc": "8586:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8586:18:8"
																		},
																		"nativeSrc": "8586:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8586:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "8561:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "8561:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "8572:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "8572:3:8"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "8577:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "8577:4:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "8568:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8568:3:8"
																		},
																		"nativeSrc": "8568:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8568:14:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8558:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "8558:2:8"
																},
																"nativeSrc": "8558:25:8",
																"nodeType": "YulFunctionCall",
																"src": "8558:25:8"
															},
															"nativeSrc": "8555:51:8",
															"nodeType": "YulIf",
															"src": "8555:51:8"
														},
														{
															"nativeSrc": "8615:25:8",
															"nodeType": "YulAssignment",
															"src": "8615:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "8628:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "8628:5:8"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "8635:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "8635:4:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8624:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8624:3:8"
																},
																"nativeSrc": "8624:16:8",
																"nodeType": "YulFunctionCall",
																"src": "8624:16:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8615:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "8615:5:8"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "7573:1073:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "7603:4:8",
														"nodeType": "YulTypedName",
														"src": "7603:4:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "7609:8:8",
														"nodeType": "YulTypedName",
														"src": "7609:8:8",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "7619:3:8",
														"nodeType": "YulTypedName",
														"src": "7619:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "7627:5:8",
														"nodeType": "YulTypedName",
														"src": "7627:5:8",
														"type": ""
													}
												],
												"src": "7573:1073:8"
											},
											{
												"body": {
													"nativeSrc": "8716:217:8",
													"nodeType": "YulBlock",
													"src": "8716:217:8",
													"statements": [
														{
															"nativeSrc": "8726:31:8",
															"nodeType": "YulAssignment",
															"src": "8726:31:8",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "8752:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "8752:4:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8734:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "8734:17:8"
																},
																"nativeSrc": "8734:23:8",
																"nodeType": "YulFunctionCall",
																"src": "8734:23:8"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "8726:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8726:4:8"
																}
															]
														},
														{
															"nativeSrc": "8766:37:8",
															"nodeType": "YulAssignment",
															"src": "8766:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "8794:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "8794:8:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "8778:15:8",
																	"nodeType": "YulIdentifier",
																	"src": "8778:15:8"
																},
																"nativeSrc": "8778:25:8",
																"nodeType": "YulFunctionCall",
																"src": "8778:25:8"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "8766:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "8766:8:8"
																}
															]
														},
														{
															"nativeSrc": "8813:113:8",
															"nodeType": "YulAssignment",
															"src": "8813:113:8",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "8843:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "8843:4:8"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "8849:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "8849:8:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8859:66:8",
																		"nodeType": "YulLiteral",
																		"src": "8859:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "8822:20:8",
																	"nodeType": "YulIdentifier",
																	"src": "8822:20:8"
																},
																"nativeSrc": "8822:104:8",
																"nodeType": "YulFunctionCall",
																"src": "8822:104:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8813:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "8813:5:8"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "8652:281:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "8691:4:8",
														"nodeType": "YulTypedName",
														"src": "8691:4:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "8697:8:8",
														"nodeType": "YulTypedName",
														"src": "8697:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "8710:5:8",
														"nodeType": "YulTypedName",
														"src": "8710:5:8",
														"type": ""
													}
												],
												"src": "8652:281:8"
											},
											{
												"body": {
													"nativeSrc": "8987:362:8",
													"nodeType": "YulBlock",
													"src": "8987:362:8",
													"statements": [
														{
															"nativeSrc": "8997:25:8",
															"nodeType": "YulAssignment",
															"src": "8997:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9020:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9020:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9002:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9002:17:8"
																},
																"nativeSrc": "9002:20:8",
																"nodeType": "YulFunctionCall",
																"src": "9002:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8997:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "8997:1:8"
																}
															]
														},
														{
															"nativeSrc": "9031:25:8",
															"nodeType": "YulAssignment",
															"src": "9031:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9054:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9054:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9036:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9036:17:8"
																},
																"nativeSrc": "9036:20:8",
																"nodeType": "YulFunctionCall",
																"src": "9036:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9031:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "9031:1:8"
																}
															]
														},
														{
															"nativeSrc": "9065:28:8",
															"nodeType": "YulVariableDeclaration",
															"src": "9065:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9088:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9088:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9091:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9091:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9084:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9084:3:8"
																},
																"nativeSrc": "9084:9:8",
																"nodeType": "YulFunctionCall",
																"src": "9084:9:8"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "9069:11:8",
																	"nodeType": "YulTypedName",
																	"src": "9069:11:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9102:41:8",
															"nodeType": "YulAssignment",
															"src": "9102:41:8",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "9131:11:8",
																		"nodeType": "YulIdentifier",
																		"src": "9131:11:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9113:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9113:17:8"
																},
																"nativeSrc": "9113:30:8",
																"nodeType": "YulFunctionCall",
																"src": "9113:30:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "9102:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "9102:7:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9320:22:8",
																"nodeType": "YulBlock",
																"src": "9320:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9322:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "9322:16:8"
																			},
																			"nativeSrc": "9322:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9322:18:8"
																		},
																		"nativeSrc": "9322:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9322:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "9253:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "9253:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9246:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "9246:6:8"
																				},
																				"nativeSrc": "9246:9:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9246:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "9276:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "9276:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "9283:7:8",
																								"nodeType": "YulIdentifier",
																								"src": "9283:7:8"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "9292:1:8",
																								"nodeType": "YulIdentifier",
																								"src": "9292:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "9279:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "9279:3:8"
																						},
																						"nativeSrc": "9279:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "9279:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "9273:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "9273:2:8"
																				},
																				"nativeSrc": "9273:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9273:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "9226:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "9226:2:8"
																		},
																		"nativeSrc": "9226:83:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9226:83:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9206:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9206:6:8"
																},
																"nativeSrc": "9206:113:8",
																"nodeType": "YulFunctionCall",
																"src": "9206:113:8"
															},
															"nativeSrc": "9203:139:8",
															"nodeType": "YulIf",
															"src": "9203:139:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "8939:410:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8970:1:8",
														"nodeType": "YulTypedName",
														"src": "8970:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8973:1:8",
														"nodeType": "YulTypedName",
														"src": "8973:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "8979:7:8",
														"nodeType": "YulTypedName",
														"src": "8979:7:8",
														"type": ""
													}
												],
												"src": "8939:410:8"
											},
											{
												"body": {
													"nativeSrc": "9461:71:8",
													"nodeType": "YulBlock",
													"src": "9461:71:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9483:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9483:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9491:1:8",
																				"nodeType": "YulLiteral",
																				"src": "9491:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9479:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9479:3:8"
																		},
																		"nativeSrc": "9479:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9479:14:8"
																	},
																	{
																		"hexValue": "4d696e696d756d20707572636861736520697320302e3120455448",
																		"kind": "string",
																		"nativeSrc": "9495:29:8",
																		"nodeType": "YulLiteral",
																		"src": "9495:29:8",
																		"type": "",
																		"value": "Minimum purchase is 0.1 ETH"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9472:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9472:6:8"
																},
																"nativeSrc": "9472:53:8",
																"nodeType": "YulFunctionCall",
																"src": "9472:53:8"
															},
															"nativeSrc": "9472:53:8",
															"nodeType": "YulExpressionStatement",
															"src": "9472:53:8"
														}
													]
												},
												"name": "store_literal_in_memory_67506928248065293fd0e6cd746954406197a4dec19736b9aac55321bf2aecea",
												"nativeSrc": "9355:177:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9453:6:8",
														"nodeType": "YulTypedName",
														"src": "9453:6:8",
														"type": ""
													}
												],
												"src": "9355:177:8"
											},
											{
												"body": {
													"nativeSrc": "9684:220:8",
													"nodeType": "YulBlock",
													"src": "9684:220:8",
													"statements": [
														{
															"nativeSrc": "9694:74:8",
															"nodeType": "YulAssignment",
															"src": "9694:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9760:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9760:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9765:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9765:2:8",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9701:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "9701:58:8"
																},
																"nativeSrc": "9701:67:8",
																"nodeType": "YulFunctionCall",
																"src": "9701:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9694:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9694:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9866:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9866:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_67506928248065293fd0e6cd746954406197a4dec19736b9aac55321bf2aecea",
																	"nativeSrc": "9777:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "9777:88:8"
																},
																"nativeSrc": "9777:93:8",
																"nodeType": "YulFunctionCall",
																"src": "9777:93:8"
															},
															"nativeSrc": "9777:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "9777:93:8"
														},
														{
															"nativeSrc": "9879:19:8",
															"nodeType": "YulAssignment",
															"src": "9879:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9890:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9890:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9895:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9895:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9886:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9886:3:8"
																},
																"nativeSrc": "9886:12:8",
																"nodeType": "YulFunctionCall",
																"src": "9886:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9879:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9879:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_67506928248065293fd0e6cd746954406197a4dec19736b9aac55321bf2aecea_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9538:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9672:3:8",
														"nodeType": "YulTypedName",
														"src": "9672:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9680:3:8",
														"nodeType": "YulTypedName",
														"src": "9680:3:8",
														"type": ""
													}
												],
												"src": "9538:366:8"
											},
											{
												"body": {
													"nativeSrc": "10081:248:8",
													"nodeType": "YulBlock",
													"src": "10081:248:8",
													"statements": [
														{
															"nativeSrc": "10091:26:8",
															"nodeType": "YulAssignment",
															"src": "10091:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10103:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "10103:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10114:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10114:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10099:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10099:3:8"
																},
																"nativeSrc": "10099:18:8",
																"nodeType": "YulFunctionCall",
																"src": "10099:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10091:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10091:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10138:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10138:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10149:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10149:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10134:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10134:3:8"
																		},
																		"nativeSrc": "10134:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10134:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10157:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "10157:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10163:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10163:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10153:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10153:3:8"
																		},
																		"nativeSrc": "10153:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10153:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10127:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10127:6:8"
																},
																"nativeSrc": "10127:47:8",
																"nodeType": "YulFunctionCall",
																"src": "10127:47:8"
															},
															"nativeSrc": "10127:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "10127:47:8"
														},
														{
															"nativeSrc": "10183:139:8",
															"nodeType": "YulAssignment",
															"src": "10183:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10317:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "10317:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_67506928248065293fd0e6cd746954406197a4dec19736b9aac55321bf2aecea_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10191:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "10191:124:8"
																},
																"nativeSrc": "10191:131:8",
																"nodeType": "YulFunctionCall",
																"src": "10191:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10183:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10183:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_67506928248065293fd0e6cd746954406197a4dec19736b9aac55321bf2aecea__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9910:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10061:9:8",
														"nodeType": "YulTypedName",
														"src": "10061:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10076:4:8",
														"nodeType": "YulTypedName",
														"src": "10076:4:8",
														"type": ""
													}
												],
												"src": "9910:419:8"
											},
											{
												"body": {
													"nativeSrc": "10441:62:8",
													"nodeType": "YulBlock",
													"src": "10441:62:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10463:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "10463:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10471:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10471:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10459:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10459:3:8"
																		},
																		"nativeSrc": "10459:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10459:14:8"
																	},
																	{
																		"hexValue": "4e6f2045544820746f207769746864726177",
																		"kind": "string",
																		"nativeSrc": "10475:20:8",
																		"nodeType": "YulLiteral",
																		"src": "10475:20:8",
																		"type": "",
																		"value": "No ETH to withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10452:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10452:6:8"
																},
																"nativeSrc": "10452:44:8",
																"nodeType": "YulFunctionCall",
																"src": "10452:44:8"
															},
															"nativeSrc": "10452:44:8",
															"nodeType": "YulExpressionStatement",
															"src": "10452:44:8"
														}
													]
												},
												"name": "store_literal_in_memory_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95",
												"nativeSrc": "10335:168:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10433:6:8",
														"nodeType": "YulTypedName",
														"src": "10433:6:8",
														"type": ""
													}
												],
												"src": "10335:168:8"
											},
											{
												"body": {
													"nativeSrc": "10655:220:8",
													"nodeType": "YulBlock",
													"src": "10655:220:8",
													"statements": [
														{
															"nativeSrc": "10665:74:8",
															"nodeType": "YulAssignment",
															"src": "10665:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10731:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10731:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10736:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10736:2:8",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10672:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "10672:58:8"
																},
																"nativeSrc": "10672:67:8",
																"nodeType": "YulFunctionCall",
																"src": "10672:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10665:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10665:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10837:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10837:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95",
																	"nativeSrc": "10748:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "10748:88:8"
																},
																"nativeSrc": "10748:93:8",
																"nodeType": "YulFunctionCall",
																"src": "10748:93:8"
															},
															"nativeSrc": "10748:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "10748:93:8"
														},
														{
															"nativeSrc": "10850:19:8",
															"nodeType": "YulAssignment",
															"src": "10850:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10861:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10861:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10866:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10866:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10857:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10857:3:8"
																},
																"nativeSrc": "10857:12:8",
																"nodeType": "YulFunctionCall",
																"src": "10857:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10850:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10850:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10509:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10643:3:8",
														"nodeType": "YulTypedName",
														"src": "10643:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10651:3:8",
														"nodeType": "YulTypedName",
														"src": "10651:3:8",
														"type": ""
													}
												],
												"src": "10509:366:8"
											},
											{
												"body": {
													"nativeSrc": "11052:248:8",
													"nodeType": "YulBlock",
													"src": "11052:248:8",
													"statements": [
														{
															"nativeSrc": "11062:26:8",
															"nodeType": "YulAssignment",
															"src": "11062:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11074:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11074:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11085:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11085:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11070:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11070:3:8"
																},
																"nativeSrc": "11070:18:8",
																"nodeType": "YulFunctionCall",
																"src": "11070:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11062:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11062:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11109:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11109:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11120:1:8",
																				"nodeType": "YulLiteral",
																				"src": "11120:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11105:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11105:3:8"
																		},
																		"nativeSrc": "11105:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11105:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11128:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "11128:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11134:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11134:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11124:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11124:3:8"
																		},
																		"nativeSrc": "11124:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11124:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11098:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11098:6:8"
																},
																"nativeSrc": "11098:47:8",
																"nodeType": "YulFunctionCall",
																"src": "11098:47:8"
															},
															"nativeSrc": "11098:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "11098:47:8"
														},
														{
															"nativeSrc": "11154:139:8",
															"nodeType": "YulAssignment",
															"src": "11154:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11288:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "11288:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11162:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "11162:124:8"
																},
																"nativeSrc": "11162:131:8",
																"nodeType": "YulFunctionCall",
																"src": "11162:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11154:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11154:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10881:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11032:9:8",
														"nodeType": "YulTypedName",
														"src": "11032:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11047:4:8",
														"nodeType": "YulTypedName",
														"src": "11047:4:8",
														"type": ""
													}
												],
												"src": "10881:419:8"
											},
											{
												"body": {
													"nativeSrc": "11419:34:8",
													"nodeType": "YulBlock",
													"src": "11419:34:8",
													"statements": [
														{
															"nativeSrc": "11429:18:8",
															"nodeType": "YulAssignment",
															"src": "11429:18:8",
															"value": {
																"name": "pos",
																"nativeSrc": "11444:3:8",
																"nodeType": "YulIdentifier",
																"src": "11444:3:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "11429:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "11429:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "11306:147:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11391:3:8",
														"nodeType": "YulTypedName",
														"src": "11391:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "11396:6:8",
														"nodeType": "YulTypedName",
														"src": "11396:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "11407:11:8",
														"nodeType": "YulTypedName",
														"src": "11407:11:8",
														"type": ""
													}
												],
												"src": "11306:147:8"
											},
											{
												"body": {
													"nativeSrc": "11565:8:8",
													"nodeType": "YulBlock",
													"src": "11565:8:8",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "11459:114:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11557:6:8",
														"nodeType": "YulTypedName",
														"src": "11557:6:8",
														"type": ""
													}
												],
												"src": "11459:114:8"
											},
											{
												"body": {
													"nativeSrc": "11742:235:8",
													"nodeType": "YulBlock",
													"src": "11742:235:8",
													"statements": [
														{
															"nativeSrc": "11752:90:8",
															"nodeType": "YulAssignment",
															"src": "11752:90:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11835:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11835:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11840:1:8",
																		"nodeType": "YulLiteral",
																		"src": "11840:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "11759:75:8",
																	"nodeType": "YulIdentifier",
																	"src": "11759:75:8"
																},
																"nativeSrc": "11759:83:8",
																"nodeType": "YulFunctionCall",
																"src": "11759:83:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11752:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11752:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11940:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11940:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "11851:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "11851:88:8"
																},
																"nativeSrc": "11851:93:8",
																"nodeType": "YulFunctionCall",
																"src": "11851:93:8"
															},
															"nativeSrc": "11851:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "11851:93:8"
														},
														{
															"nativeSrc": "11953:18:8",
															"nodeType": "YulAssignment",
															"src": "11953:18:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11964:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11964:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11969:1:8",
																		"nodeType": "YulLiteral",
																		"src": "11969:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11960:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11960:3:8"
																},
																"nativeSrc": "11960:11:8",
																"nodeType": "YulFunctionCall",
																"src": "11960:11:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11953:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11953:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "11579:398:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11730:3:8",
														"nodeType": "YulTypedName",
														"src": "11730:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11738:3:8",
														"nodeType": "YulTypedName",
														"src": "11738:3:8",
														"type": ""
													}
												],
												"src": "11579:398:8"
											},
											{
												"body": {
													"nativeSrc": "12171:191:8",
													"nodeType": "YulBlock",
													"src": "12171:191:8",
													"statements": [
														{
															"nativeSrc": "12182:154:8",
															"nodeType": "YulAssignment",
															"src": "12182:154:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12332:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12332:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "12189:141:8",
																	"nodeType": "YulIdentifier",
																	"src": "12189:141:8"
																},
																"nativeSrc": "12189:147:8",
																"nodeType": "YulFunctionCall",
																"src": "12189:147:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12182:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12182:3:8"
																}
															]
														},
														{
															"nativeSrc": "12346:10:8",
															"nodeType": "YulAssignment",
															"src": "12346:10:8",
															"value": {
																"name": "pos",
																"nativeSrc": "12353:3:8",
																"nodeType": "YulIdentifier",
																"src": "12353:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12346:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12346:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "11983:379:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12158:3:8",
														"nodeType": "YulTypedName",
														"src": "12158:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12167:3:8",
														"nodeType": "YulTypedName",
														"src": "12167:3:8",
														"type": ""
													}
												],
												"src": "11983:379:8"
											},
											{
												"body": {
													"nativeSrc": "12474:65:8",
													"nodeType": "YulBlock",
													"src": "12474:65:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12496:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "12496:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12504:1:8",
																				"nodeType": "YulLiteral",
																				"src": "12504:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12492:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12492:3:8"
																		},
																		"nativeSrc": "12492:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12492:14:8"
																	},
																	{
																		"hexValue": "455448207769746864726177616c206661696c6564",
																		"kind": "string",
																		"nativeSrc": "12508:23:8",
																		"nodeType": "YulLiteral",
																		"src": "12508:23:8",
																		"type": "",
																		"value": "ETH withdrawal failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12485:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12485:6:8"
																},
																"nativeSrc": "12485:47:8",
																"nodeType": "YulFunctionCall",
																"src": "12485:47:8"
															},
															"nativeSrc": "12485:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "12485:47:8"
														}
													]
												},
												"name": "store_literal_in_memory_baecbe042ed394ebb1865c6c73030bf8141b916e67a70abf380f65fa81210c79",
												"nativeSrc": "12368:171:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12466:6:8",
														"nodeType": "YulTypedName",
														"src": "12466:6:8",
														"type": ""
													}
												],
												"src": "12368:171:8"
											},
											{
												"body": {
													"nativeSrc": "12691:220:8",
													"nodeType": "YulBlock",
													"src": "12691:220:8",
													"statements": [
														{
															"nativeSrc": "12701:74:8",
															"nodeType": "YulAssignment",
															"src": "12701:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12767:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12767:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12772:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12772:2:8",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12708:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "12708:58:8"
																},
																"nativeSrc": "12708:67:8",
																"nodeType": "YulFunctionCall",
																"src": "12708:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12701:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12701:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12873:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12873:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_baecbe042ed394ebb1865c6c73030bf8141b916e67a70abf380f65fa81210c79",
																	"nativeSrc": "12784:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "12784:88:8"
																},
																"nativeSrc": "12784:93:8",
																"nodeType": "YulFunctionCall",
																"src": "12784:93:8"
															},
															"nativeSrc": "12784:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "12784:93:8"
														},
														{
															"nativeSrc": "12886:19:8",
															"nodeType": "YulAssignment",
															"src": "12886:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12897:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12897:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12902:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12902:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12893:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12893:3:8"
																},
																"nativeSrc": "12893:12:8",
																"nodeType": "YulFunctionCall",
																"src": "12893:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12886:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12886:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_baecbe042ed394ebb1865c6c73030bf8141b916e67a70abf380f65fa81210c79_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12545:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12679:3:8",
														"nodeType": "YulTypedName",
														"src": "12679:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12687:3:8",
														"nodeType": "YulTypedName",
														"src": "12687:3:8",
														"type": ""
													}
												],
												"src": "12545:366:8"
											},
											{
												"body": {
													"nativeSrc": "13088:248:8",
													"nodeType": "YulBlock",
													"src": "13088:248:8",
													"statements": [
														{
															"nativeSrc": "13098:26:8",
															"nodeType": "YulAssignment",
															"src": "13098:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13110:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "13110:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13121:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13121:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13106:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13106:3:8"
																},
																"nativeSrc": "13106:18:8",
																"nodeType": "YulFunctionCall",
																"src": "13106:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13098:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "13098:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13145:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13145:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13156:1:8",
																				"nodeType": "YulLiteral",
																				"src": "13156:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13141:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13141:3:8"
																		},
																		"nativeSrc": "13141:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13141:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13164:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "13164:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13170:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13170:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13160:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13160:3:8"
																		},
																		"nativeSrc": "13160:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13160:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13134:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13134:6:8"
																},
																"nativeSrc": "13134:47:8",
																"nodeType": "YulFunctionCall",
																"src": "13134:47:8"
															},
															"nativeSrc": "13134:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "13134:47:8"
														},
														{
															"nativeSrc": "13190:139:8",
															"nodeType": "YulAssignment",
															"src": "13190:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13324:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "13324:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_baecbe042ed394ebb1865c6c73030bf8141b916e67a70abf380f65fa81210c79_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13198:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "13198:124:8"
																},
																"nativeSrc": "13198:131:8",
																"nodeType": "YulFunctionCall",
																"src": "13198:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13190:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "13190:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecbe042ed394ebb1865c6c73030bf8141b916e67a70abf380f65fa81210c79__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12917:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13068:9:8",
														"nodeType": "YulTypedName",
														"src": "13068:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13083:4:8",
														"nodeType": "YulTypedName",
														"src": "13083:4:8",
														"type": ""
													}
												],
												"src": "12917:419:8"
											},
											{
												"body": {
													"nativeSrc": "13496:288:8",
													"nodeType": "YulBlock",
													"src": "13496:288:8",
													"statements": [
														{
															"nativeSrc": "13506:26:8",
															"nodeType": "YulAssignment",
															"src": "13506:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13518:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "13518:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13529:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13529:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13514:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13514:3:8"
																},
																"nativeSrc": "13514:18:8",
																"nodeType": "YulFunctionCall",
																"src": "13514:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13506:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "13506:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13586:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "13586:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13599:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13599:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13610:1:8",
																				"nodeType": "YulLiteral",
																				"src": "13610:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13595:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13595:3:8"
																		},
																		"nativeSrc": "13595:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13595:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13542:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "13542:43:8"
																},
																"nativeSrc": "13542:71:8",
																"nodeType": "YulFunctionCall",
																"src": "13542:71:8"
															},
															"nativeSrc": "13542:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "13542:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13667:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "13667:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13680:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13680:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13691:2:8",
																				"nodeType": "YulLiteral",
																				"src": "13691:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13676:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13676:3:8"
																		},
																		"nativeSrc": "13676:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13676:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13623:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "13623:43:8"
																},
																"nativeSrc": "13623:72:8",
																"nodeType": "YulFunctionCall",
																"src": "13623:72:8"
															},
															"nativeSrc": "13623:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "13623:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13749:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "13749:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13762:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13762:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13773:2:8",
																				"nodeType": "YulLiteral",
																				"src": "13773:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13758:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13758:3:8"
																		},
																		"nativeSrc": "13758:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13758:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13705:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "13705:43:8"
																},
																"nativeSrc": "13705:72:8",
																"nodeType": "YulFunctionCall",
																"src": "13705:72:8"
															},
															"nativeSrc": "13705:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "13705:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "13342:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13452:9:8",
														"nodeType": "YulTypedName",
														"src": "13452:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13464:6:8",
														"nodeType": "YulTypedName",
														"src": "13464:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13472:6:8",
														"nodeType": "YulTypedName",
														"src": "13472:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13480:6:8",
														"nodeType": "YulTypedName",
														"src": "13480:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13491:4:8",
														"nodeType": "YulTypedName",
														"src": "13491:4:8",
														"type": ""
													}
												],
												"src": "13342:442:8"
											},
											{
												"body": {
													"nativeSrc": "13834:147:8",
													"nodeType": "YulBlock",
													"src": "13834:147:8",
													"statements": [
														{
															"nativeSrc": "13844:25:8",
															"nodeType": "YulAssignment",
															"src": "13844:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13867:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "13867:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13849:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "13849:17:8"
																},
																"nativeSrc": "13849:20:8",
																"nodeType": "YulFunctionCall",
																"src": "13849:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13844:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "13844:1:8"
																}
															]
														},
														{
															"nativeSrc": "13878:25:8",
															"nodeType": "YulAssignment",
															"src": "13878:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13901:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "13901:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13883:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "13883:17:8"
																},
																"nativeSrc": "13883:20:8",
																"nodeType": "YulFunctionCall",
																"src": "13883:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13878:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "13878:1:8"
																}
															]
														},
														{
															"nativeSrc": "13912:16:8",
															"nodeType": "YulAssignment",
															"src": "13912:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13923:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "13923:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13926:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "13926:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13919:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13919:3:8"
																},
																"nativeSrc": "13919:9:8",
																"nodeType": "YulFunctionCall",
																"src": "13919:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "13912:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13912:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13952:22:8",
																"nodeType": "YulBlock",
																"src": "13952:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13954:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "13954:16:8"
																			},
																			"nativeSrc": "13954:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "13954:18:8"
																		},
																		"nativeSrc": "13954:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "13954:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13944:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "13944:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "13947:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13947:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13941:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "13941:2:8"
																},
																"nativeSrc": "13941:10:8",
																"nodeType": "YulFunctionCall",
																"src": "13941:10:8"
															},
															"nativeSrc": "13938:36:8",
															"nodeType": "YulIf",
															"src": "13938:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "13790:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13821:1:8",
														"nodeType": "YulTypedName",
														"src": "13821:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13824:1:8",
														"nodeType": "YulTypedName",
														"src": "13824:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "13830:3:8",
														"nodeType": "YulTypedName",
														"src": "13830:3:8",
														"type": ""
													}
												],
												"src": "13790:191:8"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_67506928248065293fd0e6cd746954406197a4dec19736b9aac55321bf2aecea(memPtr) {\n\n        mstore(add(memPtr, 0), \"Minimum purchase is 0.1 ETH\")\n\n    }\n\n    function abi_encode_t_stringliteral_67506928248065293fd0e6cd746954406197a4dec19736b9aac55321bf2aecea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_67506928248065293fd0e6cd746954406197a4dec19736b9aac55321bf2aecea(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_67506928248065293fd0e6cd746954406197a4dec19736b9aac55321bf2aecea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_67506928248065293fd0e6cd746954406197a4dec19736b9aac55321bf2aecea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95(memPtr) {\n\n        mstore(add(memPtr, 0), \"No ETH to withdraw\")\n\n    }\n\n    function abi_encode_t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_baecbe042ed394ebb1865c6c73030bf8141b916e67a70abf380f65fa81210c79(memPtr) {\n\n        mstore(add(memPtr, 0), \"ETH withdrawal failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecbe042ed394ebb1865c6c73030bf8141b916e67a70abf380f65fa81210c79_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_baecbe042ed394ebb1865c6c73030bf8141b916e67a70abf380f65fa81210c79(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecbe042ed394ebb1865c6c73030bf8141b916e67a70abf380f65fa81210c79__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecbe042ed394ebb1865c6c73030bf8141b916e67a70abf380f65fa81210c79_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100f2575f3560e01c80638da5cb5b11610089578063d0febe4c11610058578063d0febe4c14610320578063dd62ed3e1461032a578063e086e5ec14610366578063f2fde38b1461037c576100f2565b80638da5cb5b1461026657806395d89b4114610290578063a9059cbb146102ba578063bc6e6604146102f6576100f2565b8063313ce567116100c5578063313ce567146101c257806340c10f19146101ec57806370a0823114610214578063715018a614610250576100f2565b806306fdde03146100f6578063095ea7b31461012057806318160ddd1461015c57806323b872dd14610186575b5f80fd5b348015610101575f80fd5b5061010a6103a4565b604051610117919061103b565b60405180910390f35b34801561012b575f80fd5b50610146600480360381019061014191906110ec565b610434565b6040516101539190611144565b60405180910390f35b348015610167575f80fd5b50610170610456565b60405161017d919061116c565b60405180910390f35b348015610191575f80fd5b506101ac60048036038101906101a79190611185565b61045f565b6040516101b99190611144565b60405180910390f35b3480156101cd575f80fd5b506101d661048d565b6040516101e391906111f0565b60405180910390f35b3480156101f7575f80fd5b50610212600480360381019061020d91906110ec565b610495565b005b34801561021f575f80fd5b5061023a60048036038101906102359190611209565b6104c9565b604051610247919061116c565b60405180910390f35b34801561025b575f80fd5b5061026461050e565b005b348015610271575f80fd5b5061027a610521565b6040516102879190611243565b60405180910390f35b34801561029b575f80fd5b506102a4610549565b6040516102b1919061103b565b60405180910390f35b3480156102c5575f80fd5b506102e060048036038101906102db91906110ec565b6105d9565b6040516102ed9190611144565b60405180910390f35b348015610301575f80fd5b5061030a6105fb565b604051610317919061116c565b60405180910390f35b610328610608565b005b348015610335575f80fd5b50610350600480360381019061034b919061125c565b610678565b60405161035d919061116c565b60405180910390f35b348015610371575f80fd5b5061037a6106fa565b005b348015610387575f80fd5b506103a2600480360381019061039d9190611209565b6107fb565b005b6060600380546103b3906112c7565b80601f01602080910402602001604051908101604052809291908181526020018280546103df906112c7565b801561042a5780601f106104015761010080835404028352916020019161042a565b820191905f5260205f20905b81548152906001019060200180831161040d57829003601f168201915b5050505050905090565b5f8061043e61087f565b905061044b818585610886565b600191505092915050565b5f600254905090565b5f8061046961087f565b9050610476858285610898565b61048185858561092a565b60019150509392505050565b5f6012905090565b61049d610a1a565b6104c5826104a961048d565b600a6104b59190611453565b836104c0919061149d565b610aa1565b5050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610516610a1a565b61051f5f610b20565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610558906112c7565b80601f0160208091040260200160405190810160405280929190818152602001828054610584906112c7565b80156105cf5780601f106105a6576101008083540402835291602001916105cf565b820191905f5260205f20905b8154815290600101906020018083116105b257829003601f168201915b5050505050905090565b5f806105e361087f565b90506105f081858561092a565b600191505092915050565b68056bc75e2d6310000081565b67016345785d8a0000341015610653576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064a90611528565b60405180910390fd5b5f68056bc75e2d6310000034610669919061149d565b90506106753382610aa1565b50565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610702610a1a565b5f4790505f8111610748576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073f90611590565b60405180910390fd5b5f610751610521565b73ffffffffffffffffffffffffffffffffffffffff1682604051610774906115db565b5f6040518083038185875af1925050503d805f81146107ae576040519150601f19603f3d011682016040523d82523d5f602084013e6107b3565b606091505b50509050806107f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ee90611639565b60405180910390fd5b5050565b610803610a1a565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610873575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161086a9190611243565b60405180910390fd5b61087c81610b20565b50565b5f33905090565b6108938383836001610be3565b505050565b5f6108a38484610678565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146109245781811015610915578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161090c93929190611657565b60405180910390fd5b61092384848484035f610be3565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361099a575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016109919190611243565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a0a575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a019190611243565b60405180910390fd5b610a15838383610db2565b505050565b610a2261087f565b73ffffffffffffffffffffffffffffffffffffffff16610a40610521565b73ffffffffffffffffffffffffffffffffffffffff1614610a9f57610a6361087f565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610a969190611243565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b11575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610b089190611243565b60405180910390fd5b610b1c5f8383610db2565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610c53575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610c4a9190611243565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610cc3575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610cba9190611243565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610dac578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610da3919061116c565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e02578060025f828254610df6919061168c565b92505081905550610ed0565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610e8b578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610e8293929190611657565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f17578060025f8282540392505081905550610f61565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610fbe919061116c565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61100d82610fcb565b6110178185610fd5565b9350611027818560208601610fe5565b61103081610ff3565b840191505092915050565b5f6020820190508181035f8301526110538184611003565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6110888261105f565b9050919050565b6110988161107e565b81146110a2575f80fd5b50565b5f813590506110b38161108f565b92915050565b5f819050919050565b6110cb816110b9565b81146110d5575f80fd5b50565b5f813590506110e6816110c2565b92915050565b5f80604083850312156111025761110161105b565b5b5f61110f858286016110a5565b9250506020611120858286016110d8565b9150509250929050565b5f8115159050919050565b61113e8161112a565b82525050565b5f6020820190506111575f830184611135565b92915050565b611166816110b9565b82525050565b5f60208201905061117f5f83018461115d565b92915050565b5f805f6060848603121561119c5761119b61105b565b5b5f6111a9868287016110a5565b93505060206111ba868287016110a5565b92505060406111cb868287016110d8565b9150509250925092565b5f60ff82169050919050565b6111ea816111d5565b82525050565b5f6020820190506112035f8301846111e1565b92915050565b5f6020828403121561121e5761121d61105b565b5b5f61122b848285016110a5565b91505092915050565b61123d8161107e565b82525050565b5f6020820190506112565f830184611234565b92915050565b5f80604083850312156112725761127161105b565b5b5f61127f858286016110a5565b9250506020611290858286016110a5565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806112de57607f821691505b6020821081036112f1576112f061129a565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b600185111561137957808604811115611355576113546112f7565b5b60018516156113645780820291505b808102905061137285611324565b9450611339565b94509492505050565b5f82611391576001905061144c565b8161139e575f905061144c565b81600181146113b457600281146113be576113ed565b600191505061144c565b60ff8411156113d0576113cf6112f7565b5b8360020a9150848211156113e7576113e66112f7565b5b5061144c565b5060208310610133831016604e8410600b84101617156114225782820a90508381111561141d5761141c6112f7565b5b61144c565b61142f8484846001611330565b92509050818404811115611446576114456112f7565b5b81810290505b9392505050565b5f61145d826110b9565b9150611468836111d5565b92506114957fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611382565b905092915050565b5f6114a7826110b9565b91506114b2836110b9565b92508282026114c0816110b9565b915082820484148315176114d7576114d66112f7565b5b5092915050565b7f4d696e696d756d20707572636861736520697320302e312045544800000000005f82015250565b5f611512601b83610fd5565b915061151d826114de565b602082019050919050565b5f6020820190508181035f83015261153f81611506565b9050919050565b7f4e6f2045544820746f20776974686472617700000000000000000000000000005f82015250565b5f61157a601283610fd5565b915061158582611546565b602082019050919050565b5f6020820190508181035f8301526115a78161156e565b9050919050565b5f81905092915050565b50565b5f6115c65f836115ae565b91506115d1826115b8565b5f82019050919050565b5f6115e5826115bb565b9150819050919050565b7f455448207769746864726177616c206661696c656400000000000000000000005f82015250565b5f611623601583610fd5565b915061162e826115ef565b602082019050919050565b5f6020820190508181035f83015261165081611617565b9050919050565b5f60608201905061166a5f830186611234565b611677602083018561115d565b611684604083018461115d565b949350505050565b5f611696826110b9565b91506116a1836110b9565b92508282019050808211156116b9576116b86112f7565b5b9291505056fea2646970667358221220fa555793dc8e9c5b66c284f7b5b9b84eed4ee723893972c18f8d1a4145117e5364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xD0FEBE4C GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xD0FEBE4C EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x32A JUMPI DUP1 PUSH4 0xE086E5EC EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x37C JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0xBC6E6604 EQ PUSH2 0x2F6 JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xC5 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x250 JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x186 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x101 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x10A PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x103B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x146 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x141 SWAP2 SWAP1 PUSH2 0x10EC JUMP JUMPDEST PUSH2 0x434 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x153 SWAP2 SWAP1 PUSH2 0x1144 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x167 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x456 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x116C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x191 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x1185 JUMP JUMPDEST PUSH2 0x45F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0x1144 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D6 PUSH2 0x48D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x11F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x212 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x10EC JUMP JUMPDEST PUSH2 0x495 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x1209 JUMP JUMPDEST PUSH2 0x4C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x247 SWAP2 SWAP1 PUSH2 0x116C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x264 PUSH2 0x50E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x271 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27A PUSH2 0x521 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x287 SWAP2 SWAP1 PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A4 PUSH2 0x549 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B1 SWAP2 SWAP1 PUSH2 0x103B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DB SWAP2 SWAP1 PUSH2 0x10EC JUMP JUMPDEST PUSH2 0x5D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2ED SWAP2 SWAP1 PUSH2 0x1144 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x301 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30A PUSH2 0x5FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x116C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x328 PUSH2 0x608 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x335 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x350 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34B SWAP2 SWAP1 PUSH2 0x125C JUMP JUMPDEST PUSH2 0x678 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x116C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x371 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x37A PUSH2 0x6FA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x387 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39D SWAP2 SWAP1 PUSH2 0x1209 JUMP JUMPDEST PUSH2 0x7FB JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3B3 SWAP1 PUSH2 0x12C7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3DF SWAP1 PUSH2 0x12C7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x42A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x401 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x42A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x40D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x43E PUSH2 0x87F JUMP JUMPDEST SWAP1 POP PUSH2 0x44B DUP2 DUP6 DUP6 PUSH2 0x886 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x469 PUSH2 0x87F JUMP JUMPDEST SWAP1 POP PUSH2 0x476 DUP6 DUP3 DUP6 PUSH2 0x898 JUMP JUMPDEST PUSH2 0x481 DUP6 DUP6 DUP6 PUSH2 0x92A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x49D PUSH2 0xA1A JUMP JUMPDEST PUSH2 0x4C5 DUP3 PUSH2 0x4A9 PUSH2 0x48D JUMP JUMPDEST PUSH1 0xA PUSH2 0x4B5 SWAP2 SWAP1 PUSH2 0x1453 JUMP JUMPDEST DUP4 PUSH2 0x4C0 SWAP2 SWAP1 PUSH2 0x149D JUMP JUMPDEST PUSH2 0xAA1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x516 PUSH2 0xA1A JUMP JUMPDEST PUSH2 0x51F PUSH0 PUSH2 0xB20 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x558 SWAP1 PUSH2 0x12C7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x584 SWAP1 PUSH2 0x12C7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5CF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5A6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5CF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5B2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x5E3 PUSH2 0x87F JUMP JUMPDEST SWAP1 POP PUSH2 0x5F0 DUP2 DUP6 DUP6 PUSH2 0x92A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH9 0x56BC75E2D63100000 DUP2 JUMP JUMPDEST PUSH8 0x16345785D8A0000 CALLVALUE LT ISZERO PUSH2 0x653 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64A SWAP1 PUSH2 0x1528 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH9 0x56BC75E2D63100000 CALLVALUE PUSH2 0x669 SWAP2 SWAP1 PUSH2 0x149D JUMP JUMPDEST SWAP1 POP PUSH2 0x675 CALLER DUP3 PUSH2 0xAA1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x702 PUSH2 0xA1A JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP PUSH0 DUP2 GT PUSH2 0x748 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x73F SWAP1 PUSH2 0x1590 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x751 PUSH2 0x521 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x774 SWAP1 PUSH2 0x15DB JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x7AE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7B3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x7F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7EE SWAP1 PUSH2 0x1639 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x803 PUSH2 0xA1A JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x873 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x86A SWAP2 SWAP1 PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x87C DUP2 PUSH2 0xB20 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x893 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xBE3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8A3 DUP5 DUP5 PUSH2 0x678 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x924 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x915 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x90C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1657 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x923 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xBE3 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x99A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x991 SWAP2 SWAP1 PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA0A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA01 SWAP2 SWAP1 PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA15 DUP4 DUP4 DUP4 PUSH2 0xDB2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xA22 PUSH2 0x87F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA40 PUSH2 0x521 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA9F JUMPI PUSH2 0xA63 PUSH2 0x87F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA96 SWAP2 SWAP1 PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB11 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB08 SWAP2 SWAP1 PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1C PUSH0 DUP4 DUP4 PUSH2 0xDB2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC53 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC4A SWAP2 SWAP1 PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCC3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBA SWAP2 SWAP1 PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xDAC JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xDA3 SWAP2 SWAP1 PUSH2 0x116C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE02 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xDF6 SWAP2 SWAP1 PUSH2 0x168C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xED0 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xE8B JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE82 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1657 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF17 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xF61 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xFBE SWAP2 SWAP1 PUSH2 0x116C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x100D DUP3 PUSH2 0xFCB JUMP JUMPDEST PUSH2 0x1017 DUP2 DUP6 PUSH2 0xFD5 JUMP JUMPDEST SWAP4 POP PUSH2 0x1027 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xFE5 JUMP JUMPDEST PUSH2 0x1030 DUP2 PUSH2 0xFF3 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1053 DUP2 DUP5 PUSH2 0x1003 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1088 DUP3 PUSH2 0x105F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1098 DUP2 PUSH2 0x107E JUMP JUMPDEST DUP2 EQ PUSH2 0x10A2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10B3 DUP2 PUSH2 0x108F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10CB DUP2 PUSH2 0x10B9 JUMP JUMPDEST DUP2 EQ PUSH2 0x10D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10E6 DUP2 PUSH2 0x10C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1102 JUMPI PUSH2 0x1101 PUSH2 0x105B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x110F DUP6 DUP3 DUP7 ADD PUSH2 0x10A5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1120 DUP6 DUP3 DUP7 ADD PUSH2 0x10D8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x113E DUP2 PUSH2 0x112A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1157 PUSH0 DUP4 ADD DUP5 PUSH2 0x1135 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1166 DUP2 PUSH2 0x10B9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x117F PUSH0 DUP4 ADD DUP5 PUSH2 0x115D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x119C JUMPI PUSH2 0x119B PUSH2 0x105B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11A9 DUP7 DUP3 DUP8 ADD PUSH2 0x10A5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x11BA DUP7 DUP3 DUP8 ADD PUSH2 0x10A5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x11CB DUP7 DUP3 DUP8 ADD PUSH2 0x10D8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11EA DUP2 PUSH2 0x11D5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1203 PUSH0 DUP4 ADD DUP5 PUSH2 0x11E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x121E JUMPI PUSH2 0x121D PUSH2 0x105B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x122B DUP5 DUP3 DUP6 ADD PUSH2 0x10A5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x123D DUP2 PUSH2 0x107E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1256 PUSH0 DUP4 ADD DUP5 PUSH2 0x1234 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1272 JUMPI PUSH2 0x1271 PUSH2 0x105B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x127F DUP6 DUP3 DUP7 ADD PUSH2 0x10A5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1290 DUP6 DUP3 DUP7 ADD PUSH2 0x10A5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x12DE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x12F1 JUMPI PUSH2 0x12F0 PUSH2 0x129A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1379 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x1355 JUMPI PUSH2 0x1354 PUSH2 0x12F7 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x1364 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x1372 DUP6 PUSH2 0x1324 JUMP JUMPDEST SWAP5 POP PUSH2 0x1339 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1391 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x144C JUMP JUMPDEST DUP2 PUSH2 0x139E JUMPI PUSH0 SWAP1 POP PUSH2 0x144C JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x13B4 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x13BE JUMPI PUSH2 0x13ED JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x144C JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x13D0 JUMPI PUSH2 0x13CF PUSH2 0x12F7 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x13E7 JUMPI PUSH2 0x13E6 PUSH2 0x12F7 JUMP JUMPDEST JUMPDEST POP PUSH2 0x144C JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1422 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x141D JUMPI PUSH2 0x141C PUSH2 0x12F7 JUMP JUMPDEST JUMPDEST PUSH2 0x144C JUMP JUMPDEST PUSH2 0x142F DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1330 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x1446 JUMPI PUSH2 0x1445 PUSH2 0x12F7 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x145D DUP3 PUSH2 0x10B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1468 DUP4 PUSH2 0x11D5 JUMP JUMPDEST SWAP3 POP PUSH2 0x1495 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x1382 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14A7 DUP3 PUSH2 0x10B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x14B2 DUP4 PUSH2 0x10B9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x14C0 DUP2 PUSH2 0x10B9 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x14D7 JUMPI PUSH2 0x14D6 PUSH2 0x12F7 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D696E696D756D20707572636861736520697320302E31204554480000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1512 PUSH1 0x1B DUP4 PUSH2 0xFD5 JUMP JUMPDEST SWAP2 POP PUSH2 0x151D DUP3 PUSH2 0x14DE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x153F DUP2 PUSH2 0x1506 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F2045544820746F2077697468647261770000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x157A PUSH1 0x12 DUP4 PUSH2 0xFD5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1585 DUP3 PUSH2 0x1546 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x15A7 DUP2 PUSH2 0x156E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x15C6 PUSH0 DUP4 PUSH2 0x15AE JUMP JUMPDEST SWAP2 POP PUSH2 0x15D1 DUP3 PUSH2 0x15B8 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x15E5 DUP3 PUSH2 0x15BB JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455448207769746864726177616C206661696C65640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1623 PUSH1 0x15 DUP4 PUSH2 0xFD5 JUMP JUMPDEST SWAP2 POP PUSH2 0x162E DUP3 PUSH2 0x15EF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1650 DUP2 PUSH2 0x1617 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x166A PUSH0 DUP4 ADD DUP7 PUSH2 0x1234 JUMP JUMPDEST PUSH2 0x1677 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x115D JUMP JUMPDEST PUSH2 0x1684 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x115D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1696 DUP3 PUSH2 0x10B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x16A1 DUP4 PUSH2 0x10B9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x16B9 JUMPI PUSH2 0x16B8 PUSH2 0x12F7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL SSTORE JUMPI SWAP4 0xDC DUP15 SWAP13 JUMPDEST PUSH7 0xC284F7B5B9B84E 0xED 0x4E 0xE7 0x23 DUP10 CODECOPY PUSH19 0xC18F8D1A4145117E5364736F6C634300081A00 CALLER ",
							"sourceMap": "222:1039:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;531:114:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3004:116:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;1638:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:178;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;330:53:7;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;651:288;;;:::i;:::-;;3551:140:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;996:263:7;;;;;;;;;;;;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1779:89:3;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;2849:97::-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;2707:82::-;2756:5;2780:2;2773:9;;2707:82;:::o;531:114:7:-;1531:13:0;:11;:13::i;:::-;600:38:7::1;606:2;626:10;:8;:10::i;:::-;620:2;:16;;;;:::i;:::-;610:6;:27;;;;:::i;:::-;600:5;:38::i;:::-;531:114:::0;;:::o;3004:116:3:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1981:93:3:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;3315:178::-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;330:53:7:-;371:12;330:53;:::o;651:288::-;720:9;707;:22;;699:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;840:20;371:12;864:9;:26;;;;:::i;:::-;840:51;;901:31;907:10;919:12;901:5;:31::i;:::-;689:250;651:288::o;3551:140:3:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;996:263:7:-;1531:13:0;:11;:13::i;:::-;1048:15:7::1;1066:21;1048:39;;1115:1;1105:7;:11;1097:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;1151:12;1169:7;:5;:7::i;:::-;:12;;1189:7;1169:32;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1150:51;;;1219:7;1211:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;1038:221;;996:263::o:0;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;8726:128:3:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:477::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10600:17;10580:16;:37;10576:310;;10656:5;10637:16;:24;10633:130;;;10715:7;10724:16;10742:5;10688:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10633:130;10804:57;10813:5;10820:7;10848:5;10829:16;:24;10855:5;10804:8;:57::i;:::-;10576:310;10504:388;10415:477;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;7458:208:3:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;9701:432:3:-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:8:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:329::-;4805:6;4854:2;4842:9;4833:7;4829:23;4825:32;4822:119;;;4860:79;;:::i;:::-;4822:119;4980:1;5005:53;5050:7;5041:6;5030:9;5026:22;5005:53;:::i;:::-;4995:63;;4951:117;4746:329;;;;:::o;5081:118::-;5168:24;5186:5;5168:24;:::i;:::-;5163:3;5156:37;5081:118;;:::o;5205:222::-;5298:4;5336:2;5325:9;5321:18;5313:26;;5349:71;5417:1;5406:9;5402:17;5393:6;5349:71;:::i;:::-;5205:222;;;;:::o;5433:474::-;5501:6;5509;5558:2;5546:9;5537:7;5533:23;5529:32;5526:119;;;5564:79;;:::i;:::-;5526:119;5684:1;5709:53;5754:7;5745:6;5734:9;5730:22;5709:53;:::i;:::-;5699:63;;5655:117;5811:2;5837:53;5882:7;5873:6;5862:9;5858:22;5837:53;:::i;:::-;5827:63;;5782:118;5433:474;;;;;:::o;5913:180::-;5961:77;5958:1;5951:88;6058:4;6055:1;6048:15;6082:4;6079:1;6072:15;6099:320;6143:6;6180:1;6174:4;6170:12;6160:22;;6227:1;6221:4;6217:12;6248:18;6238:81;;6304:4;6296:6;6292:17;6282:27;;6238:81;6366:2;6358:6;6355:14;6335:18;6332:38;6329:84;;6385:18;;:::i;:::-;6329:84;6150:269;6099:320;;;:::o;6425:180::-;6473:77;6470:1;6463:88;6570:4;6567:1;6560:15;6594:4;6591:1;6584:15;6611:102;6653:8;6700:5;6697:1;6693:13;6672:34;;6611:102;;;:::o;6719:848::-;6780:5;6787:4;6811:6;6802:15;;6835:5;6826:14;;6849:712;6870:1;6860:8;6857:15;6849:712;;;6965:4;6960:3;6956:14;6950:4;6947:24;6944:50;;;6974:18;;:::i;:::-;6944:50;7024:1;7014:8;7010:16;7007:451;;;7439:4;7432:5;7428:16;7419:25;;7007:451;7489:4;7483;7479:15;7471:23;;7519:32;7542:8;7519:32;:::i;:::-;7507:44;;6849:712;;;6719:848;;;;;;;:::o;7573:1073::-;7627:5;7818:8;7808:40;;7839:1;7830:10;;7841:5;;7808:40;7867:4;7857:36;;7884:1;7875:10;;7886:5;;7857:36;7953:4;8001:1;7996:27;;;;8037:1;8032:191;;;;7946:277;;7996:27;8014:1;8005:10;;8016:5;;;8032:191;8077:3;8067:8;8064:17;8061:43;;;8084:18;;:::i;:::-;8061:43;8133:8;8130:1;8126:16;8117:25;;8168:3;8161:5;8158:14;8155:40;;;8175:18;;:::i;:::-;8155:40;8208:5;;;7946:277;;8332:2;8322:8;8319:16;8313:3;8307:4;8304:13;8300:36;8282:2;8272:8;8269:16;8264:2;8258:4;8255:12;8251:35;8235:111;8232:246;;;8388:8;8382:4;8378:19;8369:28;;8423:3;8416:5;8413:14;8410:40;;;8430:18;;:::i;:::-;8410:40;8463:5;;8232:246;8503:42;8541:3;8531:8;8525:4;8522:1;8503:42;:::i;:::-;8488:57;;;;8577:4;8572:3;8568:14;8561:5;8558:25;8555:51;;;8586:18;;:::i;:::-;8555:51;8635:4;8628:5;8624:16;8615:25;;7573:1073;;;;;;:::o;8652:281::-;8710:5;8734:23;8752:4;8734:23;:::i;:::-;8726:31;;8778:25;8794:8;8778:25;:::i;:::-;8766:37;;8822:104;8859:66;8849:8;8843:4;8822:104;:::i;:::-;8813:113;;8652:281;;;;:::o;8939:410::-;8979:7;9002:20;9020:1;9002:20;:::i;:::-;8997:25;;9036:20;9054:1;9036:20;:::i;:::-;9031:25;;9091:1;9088;9084:9;9113:30;9131:11;9113:30;:::i;:::-;9102:41;;9292:1;9283:7;9279:15;9276:1;9273:22;9253:1;9246:9;9226:83;9203:139;;9322:18;;:::i;:::-;9203:139;8987:362;8939:410;;;;:::o;9355:177::-;9495:29;9491:1;9483:6;9479:14;9472:53;9355:177;:::o;9538:366::-;9680:3;9701:67;9765:2;9760:3;9701:67;:::i;:::-;9694:74;;9777:93;9866:3;9777:93;:::i;:::-;9895:2;9890:3;9886:12;9879:19;;9538:366;;;:::o;9910:419::-;10076:4;10114:2;10103:9;10099:18;10091:26;;10163:9;10157:4;10153:20;10149:1;10138:9;10134:17;10127:47;10191:131;10317:4;10191:131;:::i;:::-;10183:139;;9910:419;;;:::o;10335:168::-;10475:20;10471:1;10463:6;10459:14;10452:44;10335:168;:::o;10509:366::-;10651:3;10672:67;10736:2;10731:3;10672:67;:::i;:::-;10665:74;;10748:93;10837:3;10748:93;:::i;:::-;10866:2;10861:3;10857:12;10850:19;;10509:366;;;:::o;10881:419::-;11047:4;11085:2;11074:9;11070:18;11062:26;;11134:9;11128:4;11124:20;11120:1;11109:9;11105:17;11098:47;11162:131;11288:4;11162:131;:::i;:::-;11154:139;;10881:419;;;:::o;11306:147::-;11407:11;11444:3;11429:18;;11306:147;;;;:::o;11459:114::-;;:::o;11579:398::-;11738:3;11759:83;11840:1;11835:3;11759:83;:::i;:::-;11752:90;;11851:93;11940:3;11851:93;:::i;:::-;11969:1;11964:3;11960:11;11953:18;;11579:398;;;:::o;11983:379::-;12167:3;12189:147;12332:3;12189:147;:::i;:::-;12182:154;;12353:3;12346:10;;11983:379;;;:::o;12368:171::-;12508:23;12504:1;12496:6;12492:14;12485:47;12368:171;:::o;12545:366::-;12687:3;12708:67;12772:2;12767:3;12708:67;:::i;:::-;12701:74;;12784:93;12873:3;12784:93;:::i;:::-;12902:2;12897:3;12893:12;12886:19;;12545:366;;;:::o;12917:419::-;13083:4;13121:2;13110:9;13106:18;13098:26;;13170:9;13164:4;13160:20;13156:1;13145:9;13141:17;13134:47;13198:131;13324:4;13198:131;:::i;:::-;13190:139;;12917:419;;;:::o;13342:442::-;13491:4;13529:2;13518:9;13514:18;13506:26;;13542:71;13610:1;13599:9;13595:17;13586:6;13542:71;:::i;:::-;13623:72;13691:2;13680:9;13676:18;13667:6;13623:72;:::i;:::-;13705;13773:2;13762:9;13758:18;13749:6;13705:72;:::i;:::-;13342:442;;;;;;:::o;13790:191::-;13830:3;13849:20;13867:1;13849:20;:::i;:::-;13844:25;;13883:20;13901:1;13883:20;:::i;:::-;13878:25;;13926:1;13923;13919:9;13912:16;;13947:3;13944:1;13941:10;13938:36;;;13954:18;;:::i;:::-;13938:36;13790:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1175400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"TOKENS_PER_ETH()": "414",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2896",
								"buyTokens()": "infinite",
								"decimals()": "361",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2538",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"withdrawETH()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 222,
									"end": 1261,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 222,
									"end": 1261,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 222,
									"end": 1261,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 313,
									"end": 323,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 313,
									"end": 321,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 313,
									"end": 321,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 313,
									"end": 321,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 313,
									"end": 323,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 313,
									"end": 323,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 313,
									"end": 323,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 313,
									"end": 323,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 313,
									"end": 323,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 307,
									"end": 309,
									"name": "PUSH",
									"source": 7,
									"value": "A"
								},
								{
									"begin": 307,
									"end": 323,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 307,
									"end": 323,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 307,
									"end": 323,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 307,
									"end": 323,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 307,
									"end": 323,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 307,
									"end": 323,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 307,
									"end": 323,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 294,
									"end": 303,
									"name": "PUSH",
									"source": 7,
									"value": "F4240"
								},
								{
									"begin": 294,
									"end": 324,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 294,
									"end": 324,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 294,
									"end": 324,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 294,
									"end": 324,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 294,
									"end": 324,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 294,
									"end": 324,
									"name": "tag",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 294,
									"end": 324,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 269,
									"end": 324,
									"name": "PUSH",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 269,
									"end": 324,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 411,
									"end": 525,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 411,
									"end": 525,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 411,
									"end": 525,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 411,
									"end": 525,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 411,
									"end": 525,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 411,
									"end": 525,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 525,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 411,
									"end": 525,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 411,
									"end": 525,
									"name": "tag",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 411,
									"end": 525,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 411,
									"end": 525,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 463,
									"end": 473,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "D"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "53686F6562756D78546F6B656E00000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "5342580000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 485,
									"end": 518,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 491,
									"end": 501,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 503,
									"end": 517,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 503,
									"end": 517,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 485,
									"end": 490,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 485,
									"end": 490,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 490,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 485,
									"end": 518,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 518,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 485,
									"end": 518,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 485,
									"end": 518,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 485,
									"end": 518,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 222,
									"end": 1261,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 222,
									"end": 1261,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2707,
									"end": 2789,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 2707,
									"end": 2789,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2756,
									"end": 2761,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2780,
									"end": 2782,
									"name": "PUSH",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 2773,
									"end": 2782,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2773,
									"end": 2782,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2707,
									"end": 2789,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2707,
									"end": 2789,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7547,
									"end": 7548,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7601,
									"end": 7602,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 3,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 7572,
									"end": 7604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7644,
									"end": 7651,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7653,
									"end": 7658,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7458,
									"end": 7666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6113,
									"end": 6114,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6097,
									"end": 6101,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6249,
									"end": 6254,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 6233,
									"end": 6254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "tag",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6285,
									"end": 6304,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6316,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6317,
									"end": 6321,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6354,
									"end": 6359,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6340,
									"end": 6351,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6411,
									"end": 6415,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6417,
									"end": 6428,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6430,
									"end": 6435,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 3,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 6386,
									"end": 6436,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "tag",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "tag",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6603,
									"end": 6608,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6589,
									"end": 6600,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6580,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6581,
									"end": 6585,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 6633,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6661,
									"end": 6662,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6647,
									"end": 6649,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6826,
									"end": 6831,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7038,
									"end": 7043,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7030,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7031,
									"end": 7033,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7098,
									"end": 7100,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7092,
									"end": 7096,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7102,
									"end": 7107,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 7083,
									"end": 7108,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "tag",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 187,
									"name": "tag",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 7,
									"end": 187,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 55,
									"end": 132,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 52,
									"end": 53,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 45,
									"end": 133,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 152,
									"end": 156,
									"name": "PUSH",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 149,
									"end": 150,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 142,
									"end": 157,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 176,
									"end": 180,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 173,
									"end": 174,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 166,
									"end": 181,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 193,
									"end": 295,
									"name": "tag",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 193,
									"end": 295,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 235,
									"end": 243,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 282,
									"end": 287,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 279,
									"end": 280,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 275,
									"end": 288,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 254,
									"end": 288,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 254,
									"end": 288,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 193,
									"end": 295,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 193,
									"end": 295,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 193,
									"end": 295,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 193,
									"end": 295,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "tag",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 362,
									"end": 367,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 369,
									"end": 373,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 393,
									"end": 399,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 384,
									"end": 399,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 384,
									"end": 399,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 417,
									"end": 422,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 408,
									"end": 422,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 408,
									"end": 422,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "tag",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 452,
									"end": 453,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 442,
									"end": 450,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 439,
									"end": 454,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 547,
									"end": 551,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 542,
									"end": 545,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 538,
									"end": 552,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 532,
									"end": 536,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 529,
									"end": 553,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 526,
									"end": 576,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 526,
									"end": 576,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 526,
									"end": 576,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 556,
									"end": 574,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 556,
									"end": 574,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 556,
									"end": 574,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 556,
									"end": 574,
									"name": "tag",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 556,
									"end": 574,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 526,
									"end": 576,
									"name": "tag",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 526,
									"end": 576,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 606,
									"end": 607,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 596,
									"end": 604,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 592,
									"end": 608,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 589,
									"end": 1040,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 589,
									"end": 1040,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 589,
									"end": 1040,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1021,
									"end": 1025,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1014,
									"end": 1019,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1010,
									"end": 1026,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1001,
									"end": 1026,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1001,
									"end": 1026,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 589,
									"end": 1040,
									"name": "tag",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 589,
									"end": 1040,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1071,
									"end": 1075,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1065,
									"end": 1069,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1061,
									"end": 1076,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1053,
									"end": 1076,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1053,
									"end": 1076,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1101,
									"end": 1133,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 1124,
									"end": 1132,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1101,
									"end": 1133,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 1101,
									"end": 1133,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1101,
									"end": 1133,
									"name": "tag",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 1101,
									"end": 1133,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1089,
									"end": 1133,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 1089,
									"end": 1133,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "tag",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 301,
									"end": 1149,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "tag",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1209,
									"end": 1214,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1400,
									"end": 1408,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1390,
									"end": 1430,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 1390,
									"end": 1430,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1421,
									"end": 1422,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1412,
									"end": 1422,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1412,
									"end": 1422,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1423,
									"end": 1428,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 1423,
									"end": 1428,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1390,
									"end": 1430,
									"name": "tag",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 1390,
									"end": 1430,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1449,
									"end": 1453,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1439,
									"end": 1475,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "86"
								},
								{
									"begin": 1439,
									"end": 1475,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1466,
									"end": 1467,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1457,
									"end": 1467,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1457,
									"end": 1467,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1468,
									"end": 1473,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 1468,
									"end": 1473,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1439,
									"end": 1475,
									"name": "tag",
									"source": 8,
									"value": "86"
								},
								{
									"begin": 1439,
									"end": 1475,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1535,
									"end": 1539,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1583,
									"end": 1584,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1619,
									"end": 1620,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1614,
									"end": 1805,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1614,
									"end": 1805,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1614,
									"end": 1805,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "89"
								},
								{
									"begin": 1614,
									"end": 1805,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1528,
									"end": 1805,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "87"
								},
								{
									"begin": 1528,
									"end": 1805,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "tag",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1596,
									"end": 1597,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1587,
									"end": 1597,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1587,
									"end": 1597,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1598,
									"end": 1603,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1598,
									"end": 1603,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 1598,
									"end": 1603,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1614,
									"end": 1805,
									"name": "tag",
									"source": 8,
									"value": "89"
								},
								{
									"begin": 1614,
									"end": 1805,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1659,
									"end": 1662,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 1649,
									"end": 1657,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1646,
									"end": 1663,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1643,
									"end": 1686,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1643,
									"end": 1686,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "90"
								},
								{
									"begin": 1643,
									"end": 1686,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1666,
									"end": 1684,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 1666,
									"end": 1684,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 1666,
									"end": 1684,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1666,
									"end": 1684,
									"name": "tag",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 1666,
									"end": 1684,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1643,
									"end": 1686,
									"name": "tag",
									"source": 8,
									"value": "90"
								},
								{
									"begin": 1643,
									"end": 1686,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1715,
									"end": 1723,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1708,
									"end": 1724,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 1699,
									"end": 1724,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1699,
									"end": 1724,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1750,
									"end": 1753,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1743,
									"end": 1748,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1740,
									"end": 1754,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1737,
									"end": 1777,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1737,
									"end": 1777,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "92"
								},
								{
									"begin": 1737,
									"end": 1777,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1757,
									"end": 1775,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "93"
								},
								{
									"begin": 1757,
									"end": 1775,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 1757,
									"end": 1775,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1757,
									"end": 1775,
									"name": "tag",
									"source": 8,
									"value": "93"
								},
								{
									"begin": 1757,
									"end": 1775,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1737,
									"end": 1777,
									"name": "tag",
									"source": 8,
									"value": "92"
								},
								{
									"begin": 1737,
									"end": 1777,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1790,
									"end": 1795,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1790,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 1790,
									"end": 1795,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1528,
									"end": 1805,
									"name": "tag",
									"source": 8,
									"value": "87"
								},
								{
									"begin": 1528,
									"end": 1805,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1528,
									"end": 1805,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1914,
									"end": 1916,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1904,
									"end": 1912,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1901,
									"end": 1917,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1895,
									"end": 1898,
									"name": "PUSH",
									"source": 8,
									"value": "133"
								},
								{
									"begin": 1889,
									"end": 1893,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1886,
									"end": 1899,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1882,
									"end": 1918,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1864,
									"end": 1866,
									"name": "PUSH",
									"source": 8,
									"value": "4E"
								},
								{
									"begin": 1854,
									"end": 1862,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1851,
									"end": 1867,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1846,
									"end": 1848,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 1840,
									"end": 1844,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1837,
									"end": 1849,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1833,
									"end": 1868,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1817,
									"end": 1928,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1814,
									"end": 2060,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1814,
									"end": 2060,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "94"
								},
								{
									"begin": 1814,
									"end": 2060,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1970,
									"end": 1978,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1964,
									"end": 1968,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1960,
									"end": 1979,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 1951,
									"end": 1979,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1951,
									"end": 1979,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2005,
									"end": 2008,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1998,
									"end": 2003,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1995,
									"end": 2009,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1992,
									"end": 2032,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1992,
									"end": 2032,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "95"
								},
								{
									"begin": 1992,
									"end": 2032,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2012,
									"end": 2030,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 2012,
									"end": 2030,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 2012,
									"end": 2030,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2012,
									"end": 2030,
									"name": "tag",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 2012,
									"end": 2030,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1992,
									"end": 2032,
									"name": "tag",
									"source": 8,
									"value": "95"
								},
								{
									"begin": 1992,
									"end": 2032,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2045,
									"end": 2050,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 2045,
									"end": 2050,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1814,
									"end": 2060,
									"name": "tag",
									"source": 8,
									"value": "94"
								},
								{
									"begin": 1814,
									"end": 2060,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2085,
									"end": 2127,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "97"
								},
								{
									"begin": 2123,
									"end": 2126,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2113,
									"end": 2121,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2107,
									"end": 2111,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2104,
									"end": 2105,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2085,
									"end": 2127,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 2085,
									"end": 2127,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2085,
									"end": 2127,
									"name": "tag",
									"source": 8,
									"value": "97"
								},
								{
									"begin": 2085,
									"end": 2127,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2070,
									"end": 2127,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2070,
									"end": 2127,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2070,
									"end": 2127,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2070,
									"end": 2127,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2159,
									"end": 2163,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2154,
									"end": 2157,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2150,
									"end": 2164,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 2143,
									"end": 2148,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2140,
									"end": 2165,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 2137,
									"end": 2188,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2137,
									"end": 2188,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 2137,
									"end": 2188,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2168,
									"end": 2186,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "99"
								},
								{
									"begin": 2168,
									"end": 2186,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 2168,
									"end": 2186,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2168,
									"end": 2186,
									"name": "tag",
									"source": 8,
									"value": "99"
								},
								{
									"begin": 2168,
									"end": 2186,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2137,
									"end": 2188,
									"name": "tag",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 2137,
									"end": 2188,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2217,
									"end": 2221,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2210,
									"end": 2215,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2206,
									"end": 2222,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2197,
									"end": 2222,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2197,
									"end": 2222,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "tag",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1155,
									"end": 2228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2234,
									"end": 2311,
									"name": "tag",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 2234,
									"end": 2311,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2271,
									"end": 2278,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2300,
									"end": 2305,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2289,
									"end": 2305,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2289,
									"end": 2305,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2234,
									"end": 2311,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2234,
									"end": 2311,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2234,
									"end": 2311,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2234,
									"end": 2311,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2317,
									"end": 2403,
									"name": "tag",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 2317,
									"end": 2403,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2352,
									"end": 2359,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2392,
									"end": 2396,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 2385,
									"end": 2390,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2381,
									"end": 2397,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2370,
									"end": 2397,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2370,
									"end": 2397,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2317,
									"end": 2403,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2317,
									"end": 2403,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2317,
									"end": 2403,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2317,
									"end": 2403,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2409,
									"end": 2690,
									"name": "tag",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2409,
									"end": 2690,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2467,
									"end": 2472,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2491,
									"end": 2514,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "103"
								},
								{
									"begin": 2509,
									"end": 2513,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2491,
									"end": 2514,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 2491,
									"end": 2514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2491,
									"end": 2514,
									"name": "tag",
									"source": 8,
									"value": "103"
								},
								{
									"begin": 2491,
									"end": 2514,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2483,
									"end": 2514,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2483,
									"end": 2514,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2535,
									"end": 2560,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "104"
								},
								{
									"begin": 2551,
									"end": 2559,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2535,
									"end": 2560,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 2535,
									"end": 2560,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2535,
									"end": 2560,
									"name": "tag",
									"source": 8,
									"value": "104"
								},
								{
									"begin": 2535,
									"end": 2560,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2523,
									"end": 2560,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2523,
									"end": 2560,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2579,
									"end": 2683,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "105"
								},
								{
									"begin": 2616,
									"end": 2682,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2606,
									"end": 2614,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2600,
									"end": 2604,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2579,
									"end": 2683,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 2579,
									"end": 2683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2579,
									"end": 2683,
									"name": "tag",
									"source": 8,
									"value": "105"
								},
								{
									"begin": 2579,
									"end": 2683,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2570,
									"end": 2683,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2570,
									"end": 2683,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2409,
									"end": 2690,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2409,
									"end": 2690,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2409,
									"end": 2690,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2409,
									"end": 2690,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2409,
									"end": 2690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2696,
									"end": 3106,
									"name": "tag",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 2696,
									"end": 3106,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2736,
									"end": 2743,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2759,
									"end": 2779,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "107"
								},
								{
									"begin": 2777,
									"end": 2778,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2759,
									"end": 2779,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 2759,
									"end": 2779,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2759,
									"end": 2779,
									"name": "tag",
									"source": 8,
									"value": "107"
								},
								{
									"begin": 2759,
									"end": 2779,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2754,
									"end": 2779,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2754,
									"end": 2779,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2793,
									"end": 2813,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "108"
								},
								{
									"begin": 2811,
									"end": 2812,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2793,
									"end": 2813,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 2793,
									"end": 2813,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2793,
									"end": 2813,
									"name": "tag",
									"source": 8,
									"value": "108"
								},
								{
									"begin": 2793,
									"end": 2813,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2788,
									"end": 2813,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2788,
									"end": 2813,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2848,
									"end": 2849,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2845,
									"end": 2846,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 2850,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2870,
									"end": 2900,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "109"
								},
								{
									"begin": 2888,
									"end": 2899,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2870,
									"end": 2900,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 2870,
									"end": 2900,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2870,
									"end": 2900,
									"name": "tag",
									"source": 8,
									"value": "109"
								},
								{
									"begin": 2870,
									"end": 2900,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2859,
									"end": 2900,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2859,
									"end": 2900,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3049,
									"end": 3050,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3040,
									"end": 3047,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3036,
									"end": 3051,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 3033,
									"end": 3034,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3030,
									"end": 3052,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 3010,
									"end": 3011,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3003,
									"end": 3012,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2983,
									"end": 3066,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 2960,
									"end": 3099,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "110"
								},
								{
									"begin": 2960,
									"end": 3099,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3079,
									"end": 3097,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "111"
								},
								{
									"begin": 3079,
									"end": 3097,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 3079,
									"end": 3097,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3079,
									"end": 3097,
									"name": "tag",
									"source": 8,
									"value": "111"
								},
								{
									"begin": 3079,
									"end": 3097,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2960,
									"end": 3099,
									"name": "tag",
									"source": 8,
									"value": "110"
								},
								{
									"begin": 2960,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2744,
									"end": 3106,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2696,
									"end": 3106,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2696,
									"end": 3106,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2696,
									"end": 3106,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2696,
									"end": 3106,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2696,
									"end": 3106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3112,
									"end": 3211,
									"name": "tag",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 3112,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3164,
									"end": 3170,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3198,
									"end": 3203,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3192,
									"end": 3204,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3182,
									"end": 3204,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3182,
									"end": 3204,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3112,
									"end": 3211,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3112,
									"end": 3211,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3112,
									"end": 3211,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3112,
									"end": 3211,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3217,
									"end": 3397,
									"name": "tag",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 3217,
									"end": 3397,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3265,
									"end": 3342,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3262,
									"end": 3263,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3255,
									"end": 3343,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3362,
									"end": 3366,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 3359,
									"end": 3360,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 3352,
									"end": 3367,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3386,
									"end": 3390,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 3383,
									"end": 3384,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3376,
									"end": 3391,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 3403,
									"end": 3583,
									"name": "tag",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 3403,
									"end": 3583,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3451,
									"end": 3528,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3448,
									"end": 3449,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3441,
									"end": 3529,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3548,
									"end": 3552,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 3545,
									"end": 3546,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 3538,
									"end": 3553,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3572,
									"end": 3576,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 3569,
									"end": 3570,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3562,
									"end": 3577,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 3589,
									"end": 3909,
									"name": "tag",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 3589,
									"end": 3909,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3633,
									"end": 3639,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3670,
									"end": 3671,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 3664,
									"end": 3668,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3660,
									"end": 3672,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 3650,
									"end": 3672,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3650,
									"end": 3672,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3717,
									"end": 3718,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3711,
									"end": 3715,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3707,
									"end": 3719,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3738,
									"end": 3756,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3728,
									"end": 3809,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "116"
								},
								{
									"begin": 3728,
									"end": 3809,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3794,
									"end": 3798,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 3786,
									"end": 3792,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3782,
									"end": 3799,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3772,
									"end": 3799,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3772,
									"end": 3799,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3728,
									"end": 3809,
									"name": "tag",
									"source": 8,
									"value": "116"
								},
								{
									"begin": 3728,
									"end": 3809,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3856,
									"end": 3858,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3848,
									"end": 3854,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3845,
									"end": 3859,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 3825,
									"end": 3843,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3822,
									"end": 3860,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 3819,
									"end": 3903,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "117"
								},
								{
									"begin": 3819,
									"end": 3903,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3875,
									"end": 3893,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "118"
								},
								{
									"begin": 3875,
									"end": 3893,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 3875,
									"end": 3893,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3875,
									"end": 3893,
									"name": "tag",
									"source": 8,
									"value": "118"
								},
								{
									"begin": 3875,
									"end": 3893,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3819,
									"end": 3903,
									"name": "tag",
									"source": 8,
									"value": "117"
								},
								{
									"begin": 3819,
									"end": 3903,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3640,
									"end": 3909,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3589,
									"end": 3909,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3589,
									"end": 3909,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3589,
									"end": 3909,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3589,
									"end": 3909,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3915,
									"end": 4056,
									"name": "tag",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 3915,
									"end": 4056,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3964,
									"end": 3968,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3987,
									"end": 3990,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3979,
									"end": 3990,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3979,
									"end": 3990,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4010,
									"end": 4013,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4007,
									"end": 4008,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4000,
									"end": 4014,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4044,
									"end": 4048,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4041,
									"end": 4042,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4031,
									"end": 4049,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 4023,
									"end": 4049,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4023,
									"end": 4049,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3915,
									"end": 4056,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3915,
									"end": 4056,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3915,
									"end": 4056,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3915,
									"end": 4056,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4062,
									"end": 4155,
									"name": "tag",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 4062,
									"end": 4155,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4099,
									"end": 4105,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4146,
									"end": 4148,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4141,
									"end": 4143,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 4134,
									"end": 4139,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4130,
									"end": 4144,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4126,
									"end": 4149,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 4116,
									"end": 4149,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4116,
									"end": 4149,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4062,
									"end": 4155,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4062,
									"end": 4155,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4062,
									"end": 4155,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4062,
									"end": 4155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4161,
									"end": 4268,
									"name": "tag",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 4161,
									"end": 4268,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4205,
									"end": 4213,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4255,
									"end": 4260,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4245,
									"end": 4261,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 4224,
									"end": 4261,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4224,
									"end": 4261,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4161,
									"end": 4268,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4161,
									"end": 4268,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4161,
									"end": 4268,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4161,
									"end": 4268,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4161,
									"end": 4268,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4274,
									"end": 4667,
									"name": "tag",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 4274,
									"end": 4667,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4343,
									"end": 4349,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4393,
									"end": 4394,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 4381,
									"end": 4391,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4377,
									"end": 4395,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 4416,
									"end": 4513,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "123"
								},
								{
									"begin": 4446,
									"end": 4512,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4435,
									"end": 4444,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4416,
									"end": 4513,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 4416,
									"end": 4513,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4416,
									"end": 4513,
									"name": "tag",
									"source": 8,
									"value": "123"
								},
								{
									"begin": 4416,
									"end": 4513,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4534,
									"end": 4573,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "124"
								},
								{
									"begin": 4564,
									"end": 4572,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 4553,
									"end": 4562,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4534,
									"end": 4573,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 4534,
									"end": 4573,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4534,
									"end": 4573,
									"name": "tag",
									"source": 8,
									"value": "124"
								},
								{
									"begin": 4534,
									"end": 4573,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4522,
									"end": 4573,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 4522,
									"end": 4573,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4606,
									"end": 4610,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4602,
									"end": 4611,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 4595,
									"end": 4600,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4591,
									"end": 4612,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4582,
									"end": 4612,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 4582,
									"end": 4612,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4655,
									"end": 4659,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4645,
									"end": 4653,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 4641,
									"end": 4660,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4634,
									"end": 4639,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4631,
									"end": 4661,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 4621,
									"end": 4661,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4621,
									"end": 4661,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4350,
									"end": 4667,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4350,
									"end": 4667,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4274,
									"end": 4667,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 4274,
									"end": 4667,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4274,
									"end": 4667,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4274,
									"end": 4667,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4274,
									"end": 4667,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4274,
									"end": 4667,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4673,
									"end": 4733,
									"name": "tag",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 4673,
									"end": 4733,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4701,
									"end": 4704,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4722,
									"end": 4727,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4715,
									"end": 4727,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4715,
									"end": 4727,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4673,
									"end": 4733,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4673,
									"end": 4733,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4673,
									"end": 4733,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4673,
									"end": 4733,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4739,
									"end": 4881,
									"name": "tag",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 4739,
									"end": 4881,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4789,
									"end": 4798,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4822,
									"end": 4875,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "127"
								},
								{
									"begin": 4840,
									"end": 4874,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "128"
								},
								{
									"begin": 4849,
									"end": 4873,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "129"
								},
								{
									"begin": 4867,
									"end": 4872,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4849,
									"end": 4873,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 4849,
									"end": 4873,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4849,
									"end": 4873,
									"name": "tag",
									"source": 8,
									"value": "129"
								},
								{
									"begin": 4849,
									"end": 4873,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4840,
									"end": 4874,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 4840,
									"end": 4874,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4840,
									"end": 4874,
									"name": "tag",
									"source": 8,
									"value": "128"
								},
								{
									"begin": 4840,
									"end": 4874,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4822,
									"end": 4875,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 4822,
									"end": 4875,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4822,
									"end": 4875,
									"name": "tag",
									"source": 8,
									"value": "127"
								},
								{
									"begin": 4822,
									"end": 4875,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4809,
									"end": 4875,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4809,
									"end": 4875,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4739,
									"end": 4881,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4739,
									"end": 4881,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4739,
									"end": 4881,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4739,
									"end": 4881,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4887,
									"end": 4962,
									"name": "tag",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 4887,
									"end": 4962,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4930,
									"end": 4933,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4951,
									"end": 4956,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4944,
									"end": 4956,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4944,
									"end": 4956,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4887,
									"end": 4962,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4887,
									"end": 4962,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4887,
									"end": 4962,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4887,
									"end": 4962,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4968,
									"end": 5237,
									"name": "tag",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 4968,
									"end": 5237,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5078,
									"end": 5117,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "132"
								},
								{
									"begin": 5109,
									"end": 5116,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5078,
									"end": 5117,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 5078,
									"end": 5117,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5078,
									"end": 5117,
									"name": "tag",
									"source": 8,
									"value": "132"
								},
								{
									"begin": 5078,
									"end": 5117,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5139,
									"end": 5230,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "133"
								},
								{
									"begin": 5188,
									"end": 5229,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "134"
								},
								{
									"begin": 5212,
									"end": 5228,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5188,
									"end": 5229,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 5188,
									"end": 5229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5188,
									"end": 5229,
									"name": "tag",
									"source": 8,
									"value": "134"
								},
								{
									"begin": 5188,
									"end": 5229,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5180,
									"end": 5186,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5173,
									"end": 5177,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5167,
									"end": 5178,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 5139,
									"end": 5230,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 5139,
									"end": 5230,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5139,
									"end": 5230,
									"name": "tag",
									"source": 8,
									"value": "133"
								},
								{
									"begin": 5139,
									"end": 5230,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5133,
									"end": 5137,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5126,
									"end": 5231,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 5044,
									"end": 5237,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4968,
									"end": 5237,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4968,
									"end": 5237,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4968,
									"end": 5237,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4968,
									"end": 5237,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5243,
									"end": 5316,
									"name": "tag",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 5243,
									"end": 5316,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5288,
									"end": 5291,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5243,
									"end": 5316,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5243,
									"end": 5316,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5322,
									"end": 5511,
									"name": "tag",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 5322,
									"end": 5511,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5399,
									"end": 5431,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "137"
								},
								{
									"begin": 5399,
									"end": 5431,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 5399,
									"end": 5431,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5399,
									"end": 5431,
									"name": "tag",
									"source": 8,
									"value": "137"
								},
								{
									"begin": 5399,
									"end": 5431,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5440,
									"end": 5505,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "138"
								},
								{
									"begin": 5498,
									"end": 5504,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5490,
									"end": 5496,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5484,
									"end": 5488,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5440,
									"end": 5505,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 5440,
									"end": 5505,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5440,
									"end": 5505,
									"name": "tag",
									"source": 8,
									"value": "138"
								},
								{
									"begin": 5440,
									"end": 5505,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5375,
									"end": 5511,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5322,
									"end": 5511,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5322,
									"end": 5511,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5322,
									"end": 5511,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5517,
									"end": 5703,
									"name": "tag",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 5517,
									"end": 5703,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5577,
									"end": 5697,
									"name": "tag",
									"source": 8,
									"value": "140"
								},
								{
									"begin": 5577,
									"end": 5697,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5594,
									"end": 5597,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5587,
									"end": 5592,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5584,
									"end": 5598,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 5577,
									"end": 5697,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5577,
									"end": 5697,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "142"
								},
								{
									"begin": 5577,
									"end": 5697,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5648,
									"end": 5687,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "143"
								},
								{
									"begin": 5685,
									"end": 5686,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5678,
									"end": 5683,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5648,
									"end": 5687,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 5648,
									"end": 5687,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5648,
									"end": 5687,
									"name": "tag",
									"source": 8,
									"value": "143"
								},
								{
									"begin": 5648,
									"end": 5687,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5621,
									"end": 5622,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 5614,
									"end": 5619,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5610,
									"end": 5623,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5601,
									"end": 5623,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5601,
									"end": 5623,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5577,
									"end": 5697,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "140"
								},
								{
									"begin": 5577,
									"end": 5697,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5577,
									"end": 5697,
									"name": "tag",
									"source": 8,
									"value": "142"
								},
								{
									"begin": 5577,
									"end": 5697,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5517,
									"end": 5703,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5517,
									"end": 5703,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5517,
									"end": 5703,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5709,
									"end": 6252,
									"name": "tag",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 5709,
									"end": 6252,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5810,
									"end": 5812,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 5805,
									"end": 5808,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5802,
									"end": 5813,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 5799,
									"end": 6245,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5799,
									"end": 6245,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "145"
								},
								{
									"begin": 5799,
									"end": 6245,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5844,
									"end": 5882,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "146"
								},
								{
									"begin": 5876,
									"end": 5881,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5844,
									"end": 5882,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 5844,
									"end": 5882,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5844,
									"end": 5882,
									"name": "tag",
									"source": 8,
									"value": "146"
								},
								{
									"begin": 5844,
									"end": 5882,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5928,
									"end": 5957,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "147"
								},
								{
									"begin": 5946,
									"end": 5956,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5928,
									"end": 5957,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 5928,
									"end": 5957,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5928,
									"end": 5957,
									"name": "tag",
									"source": 8,
									"value": "147"
								},
								{
									"begin": 5928,
									"end": 5957,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5918,
									"end": 5926,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5914,
									"end": 5958,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6111,
									"end": 6113,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6099,
									"end": 6109,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 6096,
									"end": 6114,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 6093,
									"end": 6142,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6093,
									"end": 6142,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "148"
								},
								{
									"begin": 6093,
									"end": 6142,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6132,
									"end": 6140,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6117,
									"end": 6140,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6117,
									"end": 6140,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6093,
									"end": 6142,
									"name": "tag",
									"source": 8,
									"value": "148"
								},
								{
									"begin": 6093,
									"end": 6142,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6155,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "149"
								},
								{
									"begin": 6211,
									"end": 6233,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "150"
								},
								{
									"begin": 6229,
									"end": 6232,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 6211,
									"end": 6233,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 6211,
									"end": 6233,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6211,
									"end": 6233,
									"name": "tag",
									"source": 8,
									"value": "150"
								},
								{
									"begin": 6211,
									"end": 6233,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6201,
									"end": 6209,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6197,
									"end": 6234,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6184,
									"end": 6195,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6155,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 6155,
									"end": 6235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6155,
									"end": 6235,
									"name": "tag",
									"source": 8,
									"value": "149"
								},
								{
									"begin": 6155,
									"end": 6235,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5814,
									"end": 6245,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5814,
									"end": 6245,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5799,
									"end": 6245,
									"name": "tag",
									"source": 8,
									"value": "145"
								},
								{
									"begin": 5799,
									"end": 6245,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5709,
									"end": 6252,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5709,
									"end": 6252,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5709,
									"end": 6252,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5709,
									"end": 6252,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6258,
									"end": 6375,
									"name": "tag",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 6258,
									"end": 6375,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6312,
									"end": 6320,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6362,
									"end": 6367,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6356,
									"end": 6360,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6352,
									"end": 6368,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 6331,
									"end": 6368,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6331,
									"end": 6368,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6258,
									"end": 6375,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 6258,
									"end": 6375,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6258,
									"end": 6375,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6258,
									"end": 6375,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6258,
									"end": 6375,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6381,
									"end": 6550,
									"name": "tag",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 6381,
									"end": 6550,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6425,
									"end": 6431,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6458,
									"end": 6509,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "153"
								},
								{
									"begin": 6506,
									"end": 6507,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6502,
									"end": 6508,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 6494,
									"end": 6499,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6491,
									"end": 6492,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 6487,
									"end": 6500,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 6458,
									"end": 6509,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 6458,
									"end": 6509,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6458,
									"end": 6509,
									"name": "tag",
									"source": 8,
									"value": "153"
								},
								{
									"begin": 6458,
									"end": 6509,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6454,
									"end": 6510,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 6539,
									"end": 6543,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 6533,
									"end": 6537,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6529,
									"end": 6544,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 6519,
									"end": 6544,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6519,
									"end": 6544,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6432,
									"end": 6550,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6381,
									"end": 6550,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 6381,
									"end": 6550,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6381,
									"end": 6550,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6381,
									"end": 6550,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6381,
									"end": 6550,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6555,
									"end": 6850,
									"name": "tag",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 6555,
									"end": 6850,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6631,
									"end": 6635,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6777,
									"end": 6806,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "155"
								},
								{
									"begin": 6802,
									"end": 6805,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6796,
									"end": 6800,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6777,
									"end": 6806,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 6777,
									"end": 6806,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6777,
									"end": 6806,
									"name": "tag",
									"source": 8,
									"value": "155"
								},
								{
									"begin": 6777,
									"end": 6806,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6769,
									"end": 6806,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6769,
									"end": 6806,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6839,
									"end": 6842,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6836,
									"end": 6837,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 6832,
									"end": 6843,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 6826,
									"end": 6830,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6823,
									"end": 6844,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 6815,
									"end": 6844,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6815,
									"end": 6844,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6555,
									"end": 6850,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 6555,
									"end": 6850,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6555,
									"end": 6850,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6555,
									"end": 6850,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6555,
									"end": 6850,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6855,
									"end": 8250,
									"name": "tag",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 6855,
									"end": 8250,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6972,
									"end": 7009,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "157"
								},
								{
									"begin": 7005,
									"end": 7008,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6972,
									"end": 7009,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 6972,
									"end": 7009,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6972,
									"end": 7009,
									"name": "tag",
									"source": 8,
									"value": "157"
								},
								{
									"begin": 6972,
									"end": 7009,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7074,
									"end": 7092,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7066,
									"end": 7072,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7063,
									"end": 7093,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 7060,
									"end": 7116,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 7060,
									"end": 7116,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "158"
								},
								{
									"begin": 7060,
									"end": 7116,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 7096,
									"end": 7114,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "159"
								},
								{
									"begin": 7096,
									"end": 7114,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 7096,
									"end": 7114,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7096,
									"end": 7114,
									"name": "tag",
									"source": 8,
									"value": "159"
								},
								{
									"begin": 7096,
									"end": 7114,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7060,
									"end": 7116,
									"name": "tag",
									"source": 8,
									"value": "158"
								},
								{
									"begin": 7060,
									"end": 7116,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7140,
									"end": 7178,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "160"
								},
								{
									"begin": 7172,
									"end": 7176,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7166,
									"end": 7177,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 7140,
									"end": 7178,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 7140,
									"end": 7178,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7140,
									"end": 7178,
									"name": "tag",
									"source": 8,
									"value": "160"
								},
								{
									"begin": 7140,
									"end": 7178,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7225,
									"end": 7292,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "161"
								},
								{
									"begin": 7285,
									"end": 7291,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7277,
									"end": 7283,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7271,
									"end": 7275,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 7225,
									"end": 7292,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 7225,
									"end": 7292,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7225,
									"end": 7292,
									"name": "tag",
									"source": 8,
									"value": "161"
								},
								{
									"begin": 7225,
									"end": 7292,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7319,
									"end": 7320,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7343,
									"end": 7347,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 7330,
									"end": 7347,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7330,
									"end": 7347,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7375,
									"end": 7377,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 7367,
									"end": 7373,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7364,
									"end": 7378,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 7392,
									"end": 7393,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 7387,
									"end": 8005,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7387,
									"end": 8005,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 7387,
									"end": 8005,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "163"
								},
								{
									"begin": 7387,
									"end": 8005,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 8049,
									"end": 8050,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8066,
									"end": 8072,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 8063,
									"end": 8140,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 8063,
									"end": 8140,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "164"
								},
								{
									"begin": 8063,
									"end": 8140,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 8115,
									"end": 8124,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8110,
									"end": 8113,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 8106,
									"end": 8125,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8100,
									"end": 8126,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 8091,
									"end": 8126,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8091,
									"end": 8126,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8063,
									"end": 8140,
									"name": "tag",
									"source": 8,
									"value": "164"
								},
								{
									"begin": 8063,
									"end": 8140,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8166,
									"end": 8233,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "165"
								},
								{
									"begin": 8226,
									"end": 8232,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 8219,
									"end": 8224,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8166,
									"end": 8233,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 8166,
									"end": 8233,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8166,
									"end": 8233,
									"name": "tag",
									"source": 8,
									"value": "165"
								},
								{
									"begin": 8166,
									"end": 8233,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8160,
									"end": 8164,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 8153,
									"end": 8234,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 8022,
									"end": 8244,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7357,
									"end": 8244,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "162"
								},
								{
									"begin": 7357,
									"end": 8244,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7387,
									"end": 8005,
									"name": "tag",
									"source": 8,
									"value": "163"
								},
								{
									"begin": 7387,
									"end": 8005,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7439,
									"end": 7443,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 7435,
									"end": 7444,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 7427,
									"end": 7433,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 7423,
									"end": 7445,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 7473,
									"end": 7510,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "166"
								},
								{
									"begin": 7505,
									"end": 7509,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 7473,
									"end": 7510,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 7473,
									"end": 7510,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7473,
									"end": 7510,
									"name": "tag",
									"source": 8,
									"value": "166"
								},
								{
									"begin": 7473,
									"end": 7510,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7532,
									"end": 7533,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7546,
									"end": 7754,
									"name": "tag",
									"source": 8,
									"value": "167"
								},
								{
									"begin": 7546,
									"end": 7754,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7560,
									"end": 7567,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7557,
									"end": 7558,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7554,
									"end": 7568,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 7546,
									"end": 7754,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 7546,
									"end": 7754,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "169"
								},
								{
									"begin": 7546,
									"end": 7754,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 7639,
									"end": 7648,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 7634,
									"end": 7637,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 7630,
									"end": 7649,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7624,
									"end": 7650,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 7616,
									"end": 7622,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7609,
									"end": 7651,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 7690,
									"end": 7691,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 7682,
									"end": 7688,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7678,
									"end": 7692,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7668,
									"end": 7692,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7668,
									"end": 7692,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7737,
									"end": 7739,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 7726,
									"end": 7735,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 7722,
									"end": 7740,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7709,
									"end": 7740,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 7709,
									"end": 7740,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7583,
									"end": 7587,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 7580,
									"end": 7581,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7576,
									"end": 7588,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7571,
									"end": 7588,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7571,
									"end": 7588,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7546,
									"end": 7754,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "167"
								},
								{
									"begin": 7546,
									"end": 7754,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7546,
									"end": 7754,
									"name": "tag",
									"source": 8,
									"value": "169"
								},
								{
									"begin": 7546,
									"end": 7754,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7782,
									"end": 7788,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 7773,
									"end": 7780,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7770,
									"end": 7789,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 7767,
									"end": 7946,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 7767,
									"end": 7946,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "170"
								},
								{
									"begin": 7767,
									"end": 7946,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 7840,
									"end": 7849,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 7835,
									"end": 7838,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 7831,
									"end": 7850,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7825,
									"end": 7851,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 7883,
									"end": 7931,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "171"
								},
								{
									"begin": 7925,
									"end": 7929,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 7917,
									"end": 7923,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 7913,
									"end": 7930,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 7902,
									"end": 7911,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7883,
									"end": 7931,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 7883,
									"end": 7931,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7883,
									"end": 7931,
									"name": "tag",
									"source": 8,
									"value": "171"
								},
								{
									"begin": 7883,
									"end": 7931,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7875,
									"end": 7881,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7868,
									"end": 7932,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 7790,
									"end": 7946,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7767,
									"end": 7946,
									"name": "tag",
									"source": 8,
									"value": "170"
								},
								{
									"begin": 7767,
									"end": 7946,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7992,
									"end": 7993,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 7988,
									"end": 7989,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 7980,
									"end": 7986,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 7976,
									"end": 7990,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 7972,
									"end": 7994,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7966,
									"end": 7970,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 7959,
									"end": 7995,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 7394,
									"end": 8005,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7394,
									"end": 8005,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7394,
									"end": 8005,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7357,
									"end": 8244,
									"name": "tag",
									"source": 8,
									"value": "162"
								},
								{
									"begin": 7357,
									"end": 8244,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7357,
									"end": 8244,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6947,
									"end": 8250,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6947,
									"end": 8250,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6947,
									"end": 8250,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6855,
									"end": 8250,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6855,
									"end": 8250,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6855,
									"end": 8250,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8256,
									"end": 8382,
									"name": "tag",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 8256,
									"end": 8382,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8293,
									"end": 8300,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8333,
									"end": 8375,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8326,
									"end": 8331,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8322,
									"end": 8376,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 8311,
									"end": 8376,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8311,
									"end": 8376,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8256,
									"end": 8382,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 8256,
									"end": 8382,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8256,
									"end": 8382,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8256,
									"end": 8382,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8388,
									"end": 8484,
									"name": "tag",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 8388,
									"end": 8484,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8425,
									"end": 8432,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8454,
									"end": 8478,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "174"
								},
								{
									"begin": 8472,
									"end": 8477,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8454,
									"end": 8478,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 8454,
									"end": 8478,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8454,
									"end": 8478,
									"name": "tag",
									"source": 8,
									"value": "174"
								},
								{
									"begin": 8454,
									"end": 8478,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8443,
									"end": 8478,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8443,
									"end": 8478,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8388,
									"end": 8484,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 8388,
									"end": 8484,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8388,
									"end": 8484,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8388,
									"end": 8484,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8490,
									"end": 8608,
									"name": "tag",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 8490,
									"end": 8608,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8577,
									"end": 8601,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "176"
								},
								{
									"begin": 8595,
									"end": 8600,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 8577,
									"end": 8601,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 8577,
									"end": 8601,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8577,
									"end": 8601,
									"name": "tag",
									"source": 8,
									"value": "176"
								},
								{
									"begin": 8577,
									"end": 8601,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8572,
									"end": 8575,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8565,
									"end": 8602,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 8490,
									"end": 8608,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8490,
									"end": 8608,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8490,
									"end": 8608,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8614,
									"end": 8836,
									"name": "tag",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 8614,
									"end": 8836,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8707,
									"end": 8711,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8745,
									"end": 8747,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 8734,
									"end": 8743,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8730,
									"end": 8748,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8722,
									"end": 8748,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8722,
									"end": 8748,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8758,
									"end": 8829,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "178"
								},
								{
									"begin": 8826,
									"end": 8827,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8815,
									"end": 8824,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8811,
									"end": 8828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8802,
									"end": 8808,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 8758,
									"end": 8829,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 8758,
									"end": 8829,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8758,
									"end": 8829,
									"name": "tag",
									"source": 8,
									"value": "178"
								},
								{
									"begin": 8758,
									"end": 8829,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8614,
									"end": 8836,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 8614,
									"end": 8836,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 8614,
									"end": 8836,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8614,
									"end": 8836,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8614,
									"end": 8836,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8842,
									"end": 9033,
									"name": "tag",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 8842,
									"end": 9033,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8882,
									"end": 8885,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8901,
									"end": 8921,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "180"
								},
								{
									"begin": 8919,
									"end": 8920,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8901,
									"end": 8921,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 8901,
									"end": 8921,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8901,
									"end": 8921,
									"name": "tag",
									"source": 8,
									"value": "180"
								},
								{
									"begin": 8901,
									"end": 8921,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8896,
									"end": 8921,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 8896,
									"end": 8921,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8935,
									"end": 8955,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "181"
								},
								{
									"begin": 8953,
									"end": 8954,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8935,
									"end": 8955,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 8935,
									"end": 8955,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8935,
									"end": 8955,
									"name": "tag",
									"source": 8,
									"value": "181"
								},
								{
									"begin": 8935,
									"end": 8955,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8930,
									"end": 8955,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 8930,
									"end": 8955,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8978,
									"end": 8979,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8975,
									"end": 8976,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8971,
									"end": 8980,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8964,
									"end": 8980,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8964,
									"end": 8980,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8999,
									"end": 9002,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 8996,
									"end": 8997,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8993,
									"end": 9003,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 8990,
									"end": 9026,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 8990,
									"end": 9026,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "182"
								},
								{
									"begin": 8990,
									"end": 9026,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 9006,
									"end": 9024,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "183"
								},
								{
									"begin": 9006,
									"end": 9024,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 9006,
									"end": 9024,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9006,
									"end": 9024,
									"name": "tag",
									"source": 8,
									"value": "183"
								},
								{
									"begin": 9006,
									"end": 9024,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8990,
									"end": 9026,
									"name": "tag",
									"source": 8,
									"value": "182"
								},
								{
									"begin": 8990,
									"end": 9026,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8842,
									"end": 9033,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 8842,
									"end": 9033,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 8842,
									"end": 9033,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8842,
									"end": 9033,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8842,
									"end": 9033,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9039,
									"end": 9157,
									"name": "tag",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 9039,
									"end": 9157,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9126,
									"end": 9150,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "185"
								},
								{
									"begin": 9144,
									"end": 9149,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 9126,
									"end": 9150,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 9126,
									"end": 9150,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9126,
									"end": 9150,
									"name": "tag",
									"source": 8,
									"value": "185"
								},
								{
									"begin": 9126,
									"end": 9150,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9121,
									"end": 9124,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9114,
									"end": 9151,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 9039,
									"end": 9157,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9039,
									"end": 9157,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9039,
									"end": 9157,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9163,
									"end": 9605,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 9163,
									"end": 9605,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9312,
									"end": 9316,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9350,
									"end": 9352,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 9339,
									"end": 9348,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9335,
									"end": 9353,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9327,
									"end": 9353,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9327,
									"end": 9353,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9363,
									"end": 9434,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "187"
								},
								{
									"begin": 9431,
									"end": 9432,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9420,
									"end": 9429,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 9416,
									"end": 9433,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9407,
									"end": 9413,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 9363,
									"end": 9434,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 9363,
									"end": 9434,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9363,
									"end": 9434,
									"name": "tag",
									"source": 8,
									"value": "187"
								},
								{
									"begin": 9363,
									"end": 9434,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9444,
									"end": 9516,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "188"
								},
								{
									"begin": 9512,
									"end": 9514,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 9501,
									"end": 9510,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 9497,
									"end": 9515,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9488,
									"end": 9494,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 9444,
									"end": 9516,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 9444,
									"end": 9516,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9444,
									"end": 9516,
									"name": "tag",
									"source": 8,
									"value": "188"
								},
								{
									"begin": 9444,
									"end": 9516,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9526,
									"end": 9598,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "189"
								},
								{
									"begin": 9594,
									"end": 9596,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 9583,
									"end": 9592,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 9579,
									"end": 9597,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9570,
									"end": 9576,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 9526,
									"end": 9598,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 9526,
									"end": 9598,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9526,
									"end": 9598,
									"name": "tag",
									"source": 8,
									"value": "189"
								},
								{
									"begin": 9526,
									"end": 9598,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9163,
									"end": 9605,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 9163,
									"end": 9605,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 9163,
									"end": 9605,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9163,
									"end": 9605,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9163,
									"end": 9605,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9163,
									"end": 9605,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9163,
									"end": 9605,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9611,
									"end": 9833,
									"name": "tag",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 9611,
									"end": 9833,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9704,
									"end": 9708,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9742,
									"end": 9744,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 9731,
									"end": 9740,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9727,
									"end": 9745,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9719,
									"end": 9745,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9719,
									"end": 9745,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9755,
									"end": 9826,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "191"
								},
								{
									"begin": 9823,
									"end": 9824,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9812,
									"end": 9821,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 9808,
									"end": 9825,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9799,
									"end": 9805,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 9755,
									"end": 9826,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 9755,
									"end": 9826,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9755,
									"end": 9826,
									"name": "tag",
									"source": 8,
									"value": "191"
								},
								{
									"begin": 9755,
									"end": 9826,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9611,
									"end": 9833,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 9611,
									"end": 9833,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 9611,
									"end": 9833,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9611,
									"end": 9833,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9611,
									"end": 9833,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 222,
									"end": 1261,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 222,
									"end": 1261,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 222,
									"end": 1261,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 222,
									"end": 1261,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 222,
									"end": 1261,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 222,
									"end": 1261,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 222,
									"end": 1261,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 222,
									"end": 1261,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 222,
									"end": 1261,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fa555793dc8e9c5b66c284f7b5b9b84eed4ee723893972c18f8d1a4145117e5364736f6c634300081a0033",
									".code": [
										{
											"begin": 222,
											"end": 1261,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "PUSH",
											"source": 7,
											"value": "D0FEBE4C"
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "PUSH",
											"source": 7,
											"value": "D0FEBE4C"
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "PUSH",
											"source": 7,
											"value": "DD62ED3E"
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "PUSH",
											"source": 7,
											"value": "E086E5EC"
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "PUSH",
											"source": 7,
											"value": "95D89B41"
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "PUSH",
											"source": 7,
											"value": "BC6E6604"
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "PUSH",
											"source": 7,
											"value": "313CE567"
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "PUSH",
											"source": 7,
											"value": "313CE567"
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "PUSH",
											"source": 7,
											"value": "40C10F19"
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "PUSH",
											"source": 7,
											"value": "6FDDE03"
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "PUSH",
											"source": 7,
											"value": "95EA7B3"
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 222,
											"end": 1261,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 531,
											"end": 645,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 531,
											"end": 645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 531,
											"end": 645,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 531,
											"end": 645,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 531,
											"end": 645,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 531,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 531,
											"end": 645,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 531,
											"end": 645,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 531,
											"end": 645,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 531,
											"end": 645,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 531,
											"end": 645,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 531,
											"end": 645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 531,
											"end": 645,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 531,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 531,
											"end": 645,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 531,
											"end": 645,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 531,
											"end": 645,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 531,
											"end": 645,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 531,
											"end": 645,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 531,
											"end": 645,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 531,
											"end": 645,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 531,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 531,
											"end": 645,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 531,
											"end": 645,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 531,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 531,
											"end": 645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 531,
											"end": 645,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 531,
											"end": 645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 531,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 531,
											"end": 645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 531,
											"end": 645,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 531,
											"end": 645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 531,
											"end": 645,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 330,
											"end": 383,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 330,
											"end": 383,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 330,
											"end": 383,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 330,
											"end": 383,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 330,
											"end": 383,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 330,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 330,
											"end": 383,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 330,
											"end": 383,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 330,
											"end": 383,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 330,
											"end": 383,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 330,
											"end": 383,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 330,
											"end": 383,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 330,
											"end": 383,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 330,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 330,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 330,
											"end": 383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 330,
											"end": 383,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 330,
											"end": 383,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 330,
											"end": 383,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 330,
											"end": 383,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 330,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 330,
											"end": 383,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 330,
											"end": 383,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 330,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 330,
											"end": 383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 330,
											"end": 383,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 330,
											"end": 383,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 330,
											"end": 383,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 330,
											"end": 383,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 330,
											"end": 383,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 330,
											"end": 383,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 330,
											"end": 383,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 330,
											"end": 383,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 330,
											"end": 383,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 651,
											"end": 939,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 651,
											"end": 939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 651,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 651,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 651,
											"end": 939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 651,
											"end": 939,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 651,
											"end": 939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 651,
											"end": 939,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1259,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 996,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 996,
											"end": 1259,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 996,
											"end": 1259,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 996,
											"end": 1259,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 996,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 996,
											"end": 1259,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 996,
											"end": 1259,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 996,
											"end": 1259,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 996,
											"end": 1259,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 996,
											"end": 1259,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 996,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 996,
											"end": 1259,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 996,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 996,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 996,
											"end": 1259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 996,
											"end": 1259,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 996,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 996,
											"end": 1259,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 531,
											"end": 645,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 531,
											"end": 645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 600,
											"end": 638,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 606,
											"end": 608,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 626,
											"end": 636,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 626,
											"end": 634,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 626,
											"end": 636,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 626,
											"end": 636,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 626,
											"end": 636,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 620,
											"end": 622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 620,
											"end": 636,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 620,
											"end": 636,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 620,
											"end": 636,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 620,
											"end": 636,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 620,
											"end": 636,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 620,
											"end": 636,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 620,
											"end": 636,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 610,
											"end": 616,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 610,
											"end": 637,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 610,
											"end": 637,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 610,
											"end": 637,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 610,
											"end": 637,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 610,
											"end": 637,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 610,
											"end": 637,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 610,
											"end": 637,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 600,
											"end": 605,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 600,
											"end": 638,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 600,
											"end": 638,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 600,
											"end": 638,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 531,
											"end": 645,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 531,
											"end": 645,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 531,
											"end": 645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 330,
											"end": 383,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 330,
											"end": 383,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 371,
											"end": 383,
											"name": "PUSH",
											"source": 7,
											"value": "56BC75E2D63100000"
										},
										{
											"begin": 330,
											"end": 383,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 330,
											"end": 383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 651,
											"end": 939,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 651,
											"end": 939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 720,
											"end": 729,
											"name": "PUSH",
											"source": 7,
											"value": "16345785D8A0000"
										},
										{
											"begin": 707,
											"end": 716,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 707,
											"end": 729,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 707,
											"end": 729,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 699,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 699,
											"end": 761,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 699,
											"end": 761,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 699,
											"end": 761,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 699,
											"end": 761,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 699,
											"end": 761,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 699,
											"end": 761,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 699,
											"end": 761,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 699,
											"end": 761,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 699,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 699,
											"end": 761,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 699,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 699,
											"end": 761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 699,
											"end": 761,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 699,
											"end": 761,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 699,
											"end": 761,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 699,
											"end": 761,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 699,
											"end": 761,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 699,
											"end": 761,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 699,
											"end": 761,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 699,
											"end": 761,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 699,
											"end": 761,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 699,
											"end": 761,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 699,
											"end": 761,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 840,
											"end": 860,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 383,
											"name": "PUSH",
											"source": 7,
											"value": "56BC75E2D63100000"
										},
										{
											"begin": 864,
											"end": 873,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 864,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 864,
											"end": 890,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 864,
											"end": 890,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 864,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 864,
											"end": 890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 864,
											"end": 890,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 864,
											"end": 890,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 840,
											"end": 891,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 840,
											"end": 891,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 901,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 907,
											"end": 917,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 919,
											"end": 931,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 901,
											"end": 906,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 901,
											"end": 932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 901,
											"end": 932,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 901,
											"end": 932,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 689,
											"end": 939,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 651,
											"end": 939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1259,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 996,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1066,
											"end": 1087,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 7
										},
										{
											"begin": 1048,
											"end": 1087,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1048,
											"end": 1087,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1115,
											"end": 1116,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1105,
											"end": 1112,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1105,
											"end": 1116,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1097,
											"end": 1139,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 1097,
											"end": 1139,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1097,
											"end": 1139,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1097,
											"end": 1139,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1097,
											"end": 1139,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1097,
											"end": 1139,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1097,
											"end": 1139,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1097,
											"end": 1139,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1097,
											"end": 1139,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1097,
											"end": 1139,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 1097,
											"end": 1139,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1097,
											"end": 1139,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 1097,
											"end": 1139,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1097,
											"end": 1139,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 1097,
											"end": 1139,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1097,
											"end": 1139,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1097,
											"end": 1139,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1097,
											"end": 1139,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1097,
											"end": 1139,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1097,
											"end": 1139,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1097,
											"end": 1139,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1097,
											"end": 1139,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1097,
											"end": 1139,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 1097,
											"end": 1139,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1163,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1169,
											"end": 1176,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 1169,
											"end": 1174,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1169,
											"end": 1176,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1176,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 1169,
											"end": 1176,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1181,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1169,
											"end": 1181,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1189,
											"end": 1196,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 1169,
											"end": 1201,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3F"
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1201,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1150,
											"end": 1201,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1150,
											"end": 1201,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1150,
											"end": 1201,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1226,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1211,
											"end": 1252,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 1211,
											"end": 1252,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1211,
											"end": 1252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1211,
											"end": 1252,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1211,
											"end": 1252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1211,
											"end": 1252,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1211,
											"end": 1252,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1211,
											"end": 1252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1211,
											"end": 1252,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1211,
											"end": 1252,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 1211,
											"end": 1252,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1211,
											"end": 1252,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 1211,
											"end": 1252,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1211,
											"end": 1252,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 1211,
											"end": 1252,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1211,
											"end": 1252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1211,
											"end": 1252,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1211,
											"end": 1252,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1211,
											"end": 1252,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1211,
											"end": 1252,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1211,
											"end": 1252,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1211,
											"end": 1252,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1211,
											"end": 1252,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 1211,
											"end": 1252,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1038,
											"end": 1259,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1038,
											"end": 1259,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 996,
											"end": 1259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10600,
											"end": 10617,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10580,
											"end": 10617,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10656,
											"end": 10661,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10637,
											"end": 10653,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10637,
											"end": 10661,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10715,
											"end": 10722,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10724,
											"end": 10740,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10742,
											"end": 10747,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 3,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 10688,
											"end": 10748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 10813,
											"end": 10818,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10820,
											"end": 10827,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10848,
											"end": 10853,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10829,
											"end": 10845,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10829,
											"end": 10853,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10855,
											"end": 10860,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10804,
											"end": 10812,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 10804,
											"end": 10861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10504,
											"end": 10892,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7547,
											"end": 7548,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 7572,
											"end": 7604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7644,
											"end": 7651,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7653,
											"end": 7658,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7624,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 7624,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7458,
											"end": 7666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 8
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4805,
											"end": 4811,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4851,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4833,
											"end": 4840,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4829,
											"end": 4852,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4825,
											"end": 4857,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 4860,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4980,
											"end": 4981,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 5050,
											"end": 5057,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5030,
											"end": 5039,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5026,
											"end": 5048,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 5005,
											"end": 5058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4951,
											"end": 5068,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "tag",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 5186,
											"end": 5191,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 5168,
											"end": 5192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "tag",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5163,
											"end": 5166,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5156,
											"end": 5193,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "tag",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5298,
											"end": 5302,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5336,
											"end": 5338,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5325,
											"end": 5334,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5321,
											"end": 5339,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5313,
											"end": 5339,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5313,
											"end": 5339,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 5417,
											"end": 5418,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5406,
											"end": 5415,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5402,
											"end": 5419,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5393,
											"end": 5399,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 5349,
											"end": 5420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "tag",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5205,
											"end": 5427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "tag",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5501,
											"end": 5507,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5509,
											"end": 5515,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5558,
											"end": 5560,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5546,
											"end": 5555,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5544,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5533,
											"end": 5556,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5529,
											"end": 5561,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 5564,
											"end": 5643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5684,
											"end": 5685,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 5754,
											"end": 5761,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5745,
											"end": 5751,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5734,
											"end": 5743,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5730,
											"end": 5752,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 5709,
											"end": 5762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "tag",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5699,
											"end": 5762,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5699,
											"end": 5762,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5772,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5811,
											"end": 5813,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 5882,
											"end": 5889,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5873,
											"end": 5879,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5862,
											"end": 5871,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5858,
											"end": 5880,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 5837,
											"end": 5890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "tag",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5827,
											"end": 5890,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5827,
											"end": 5890,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5782,
											"end": 5900,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5913,
											"end": 6093,
											"name": "tag",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 5913,
											"end": 6093,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5961,
											"end": 6038,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5958,
											"end": 5959,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5951,
											"end": 6039,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6058,
											"end": 6062,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 6055,
											"end": 6056,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6048,
											"end": 6063,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6082,
											"end": 6086,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6079,
											"end": 6080,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6072,
											"end": 6087,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6143,
											"end": 6149,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6180,
											"end": 6181,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 6174,
											"end": 6178,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6170,
											"end": 6182,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 6160,
											"end": 6182,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6160,
											"end": 6182,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6227,
											"end": 6228,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6221,
											"end": 6225,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6217,
											"end": 6229,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6248,
											"end": 6266,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6308,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 6296,
											"end": 6302,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6292,
											"end": 6309,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6282,
											"end": 6309,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6282,
											"end": 6309,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "tag",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6366,
											"end": 6368,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6358,
											"end": 6364,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6355,
											"end": 6369,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6335,
											"end": 6353,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6332,
											"end": 6370,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 6385,
											"end": 6403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "tag",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "tag",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6150,
											"end": 6419,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6099,
											"end": 6419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6425,
											"end": 6605,
											"name": "tag",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 6425,
											"end": 6605,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6473,
											"end": 6550,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6470,
											"end": 6471,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6463,
											"end": 6551,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6570,
											"end": 6574,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 6567,
											"end": 6568,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6560,
											"end": 6575,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6594,
											"end": 6598,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6591,
											"end": 6592,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6584,
											"end": 6599,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6611,
											"end": 6713,
											"name": "tag",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 6611,
											"end": 6713,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6653,
											"end": 6661,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6700,
											"end": 6705,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6697,
											"end": 6698,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6693,
											"end": 6706,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 6672,
											"end": 6706,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6672,
											"end": 6706,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6611,
											"end": 6713,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6611,
											"end": 6713,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6611,
											"end": 6713,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6611,
											"end": 6713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6719,
											"end": 7567,
											"name": "tag",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 6719,
											"end": 7567,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6780,
											"end": 6785,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6787,
											"end": 6791,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6811,
											"end": 6817,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6802,
											"end": 6817,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6802,
											"end": 6817,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6835,
											"end": 6840,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6849,
											"end": 7561,
											"name": "tag",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 6849,
											"end": 7561,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6870,
											"end": 6871,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6860,
											"end": 6868,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6857,
											"end": 6872,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6849,
											"end": 7561,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6849,
											"end": 7561,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 6849,
											"end": 7561,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6969,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6960,
											"end": 6963,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6956,
											"end": 6970,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 6950,
											"end": 6954,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6947,
											"end": 6971,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6944,
											"end": 6994,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6944,
											"end": 6994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 6944,
											"end": 6994,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6974,
											"end": 6992,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 6974,
											"end": 6992,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 6974,
											"end": 6992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6974,
											"end": 6992,
											"name": "tag",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 6974,
											"end": 6992,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6944,
											"end": 6994,
											"name": "tag",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 6944,
											"end": 6994,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7024,
											"end": 7025,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 7014,
											"end": 7022,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7010,
											"end": 7026,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7007,
											"end": 7458,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7007,
											"end": 7458,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 7007,
											"end": 7458,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7439,
											"end": 7443,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7432,
											"end": 7437,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7428,
											"end": 7444,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 7419,
											"end": 7444,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7419,
											"end": 7444,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7007,
											"end": 7458,
											"name": "tag",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 7007,
											"end": 7458,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7489,
											"end": 7493,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7483,
											"end": 7487,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7479,
											"end": 7494,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 7471,
											"end": 7494,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7471,
											"end": 7494,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7519,
											"end": 7551,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 7542,
											"end": 7550,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7519,
											"end": 7551,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 7519,
											"end": 7551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7519,
											"end": 7551,
											"name": "tag",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 7519,
											"end": 7551,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7507,
											"end": 7551,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 7507,
											"end": 7551,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6849,
											"end": 7561,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 6849,
											"end": 7561,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6849,
											"end": 7561,
											"name": "tag",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 6849,
											"end": 7561,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6719,
											"end": 7567,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 6719,
											"end": 7567,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6719,
											"end": 7567,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 6719,
											"end": 7567,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6719,
											"end": 7567,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6719,
											"end": 7567,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6719,
											"end": 7567,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6719,
											"end": 7567,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7573,
											"end": 8646,
											"name": "tag",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 7573,
											"end": 8646,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7627,
											"end": 7632,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7818,
											"end": 7826,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7808,
											"end": 7848,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 7808,
											"end": 7848,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7839,
											"end": 7840,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 7830,
											"end": 7840,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7830,
											"end": 7840,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7841,
											"end": 7846,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 7841,
											"end": 7846,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7808,
											"end": 7848,
											"name": "tag",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 7808,
											"end": 7848,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7867,
											"end": 7871,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7857,
											"end": 7893,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 7857,
											"end": 7893,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7884,
											"end": 7885,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7875,
											"end": 7885,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7875,
											"end": 7885,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7886,
											"end": 7891,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 7886,
											"end": 7891,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7857,
											"end": 7893,
											"name": "tag",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 7857,
											"end": 7893,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7953,
											"end": 7957,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8001,
											"end": 8002,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 7996,
											"end": 8023,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7996,
											"end": 8023,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 7996,
											"end": 8023,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 7996,
											"end": 8023,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8037,
											"end": 8038,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 8032,
											"end": 8223,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8032,
											"end": 8223,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 8032,
											"end": 8223,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 8032,
											"end": 8223,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7946,
											"end": 8223,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 7946,
											"end": 8223,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7996,
											"end": 8023,
											"name": "tag",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 7996,
											"end": 8023,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8014,
											"end": 8015,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8005,
											"end": 8015,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8005,
											"end": 8015,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8016,
											"end": 8021,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8016,
											"end": 8021,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 8016,
											"end": 8021,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8032,
											"end": 8223,
											"name": "tag",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 8032,
											"end": 8223,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8077,
											"end": 8080,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 8067,
											"end": 8075,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8064,
											"end": 8081,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8061,
											"end": 8104,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8061,
											"end": 8104,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 8061,
											"end": 8104,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8084,
											"end": 8102,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 8084,
											"end": 8102,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 8084,
											"end": 8102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8084,
											"end": 8102,
											"name": "tag",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 8084,
											"end": 8102,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8061,
											"end": 8104,
											"name": "tag",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 8061,
											"end": 8104,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8133,
											"end": 8141,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8130,
											"end": 8131,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 8126,
											"end": 8142,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 8117,
											"end": 8142,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8117,
											"end": 8142,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8168,
											"end": 8171,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8161,
											"end": 8166,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8158,
											"end": 8172,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8175,
											"end": 8193,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 8175,
											"end": 8193,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 8175,
											"end": 8193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8175,
											"end": 8193,
											"name": "tag",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 8175,
											"end": 8193,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "tag",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8208,
											"end": 8213,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8208,
											"end": 8213,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 8208,
											"end": 8213,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7946,
											"end": 8223,
											"name": "tag",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 7946,
											"end": 8223,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7946,
											"end": 8223,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8332,
											"end": 8334,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8322,
											"end": 8330,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8319,
											"end": 8335,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 8313,
											"end": 8316,
											"name": "PUSH",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 8307,
											"end": 8311,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8304,
											"end": 8317,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 8300,
											"end": 8336,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8282,
											"end": 8284,
											"name": "PUSH",
											"source": 8,
											"value": "4E"
										},
										{
											"begin": 8272,
											"end": 8280,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8269,
											"end": 8285,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 8264,
											"end": 8266,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 8258,
											"end": 8262,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8255,
											"end": 8267,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 8251,
											"end": 8286,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8235,
											"end": 8346,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 8232,
											"end": 8478,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8232,
											"end": 8478,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 8232,
											"end": 8478,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8388,
											"end": 8396,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8382,
											"end": 8386,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8378,
											"end": 8397,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 8369,
											"end": 8397,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8369,
											"end": 8397,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8423,
											"end": 8426,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8416,
											"end": 8421,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8413,
											"end": 8427,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8410,
											"end": 8450,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8410,
											"end": 8450,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 8410,
											"end": 8450,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8430,
											"end": 8448,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 8430,
											"end": 8448,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 8430,
											"end": 8448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8430,
											"end": 8448,
											"name": "tag",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 8430,
											"end": 8448,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8410,
											"end": 8450,
											"name": "tag",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 8410,
											"end": 8450,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8463,
											"end": 8468,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 8463,
											"end": 8468,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8232,
											"end": 8478,
											"name": "tag",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 8232,
											"end": 8478,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8503,
											"end": 8545,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 8541,
											"end": 8544,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8531,
											"end": 8539,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8525,
											"end": 8529,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8522,
											"end": 8523,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8503,
											"end": 8545,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 8503,
											"end": 8545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8503,
											"end": 8545,
											"name": "tag",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 8503,
											"end": 8545,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8488,
											"end": 8545,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8488,
											"end": 8545,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8488,
											"end": 8545,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8488,
											"end": 8545,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8577,
											"end": 8581,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8572,
											"end": 8575,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8568,
											"end": 8582,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 8561,
											"end": 8566,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8558,
											"end": 8583,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8555,
											"end": 8606,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8555,
											"end": 8606,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 8555,
											"end": 8606,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8586,
											"end": 8604,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 8586,
											"end": 8604,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 8586,
											"end": 8604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8586,
											"end": 8604,
											"name": "tag",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 8586,
											"end": 8604,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8555,
											"end": 8606,
											"name": "tag",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 8555,
											"end": 8606,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8635,
											"end": 8639,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8628,
											"end": 8633,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8624,
											"end": 8640,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 8615,
											"end": 8640,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8615,
											"end": 8640,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7573,
											"end": 8646,
											"name": "tag",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 7573,
											"end": 8646,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7573,
											"end": 8646,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 7573,
											"end": 8646,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7573,
											"end": 8646,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7573,
											"end": 8646,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7573,
											"end": 8646,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7573,
											"end": 8646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8652,
											"end": 8933,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 8652,
											"end": 8933,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8710,
											"end": 8715,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8734,
											"end": 8757,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 8752,
											"end": 8756,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8734,
											"end": 8757,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 8734,
											"end": 8757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8734,
											"end": 8757,
											"name": "tag",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 8734,
											"end": 8757,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8726,
											"end": 8757,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8726,
											"end": 8757,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8778,
											"end": 8803,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 8794,
											"end": 8802,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8778,
											"end": 8803,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 8778,
											"end": 8803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8778,
											"end": 8803,
											"name": "tag",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 8778,
											"end": 8803,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8766,
											"end": 8803,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8766,
											"end": 8803,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8822,
											"end": 8926,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 8859,
											"end": 8925,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8849,
											"end": 8857,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8843,
											"end": 8847,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8822,
											"end": 8926,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 8822,
											"end": 8926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8822,
											"end": 8926,
											"name": "tag",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 8822,
											"end": 8926,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8813,
											"end": 8926,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8813,
											"end": 8926,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8652,
											"end": 8933,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8652,
											"end": 8933,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8652,
											"end": 8933,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8652,
											"end": 8933,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8652,
											"end": 8933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8939,
											"end": 9349,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 8939,
											"end": 9349,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8979,
											"end": 8986,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9002,
											"end": 9022,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 9020,
											"end": 9021,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9002,
											"end": 9022,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 9002,
											"end": 9022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9002,
											"end": 9022,
											"name": "tag",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 9002,
											"end": 9022,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8997,
											"end": 9022,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8997,
											"end": 9022,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9036,
											"end": 9056,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 9054,
											"end": 9055,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9036,
											"end": 9056,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 9036,
											"end": 9056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9036,
											"end": 9056,
											"name": "tag",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 9036,
											"end": 9056,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9031,
											"end": 9056,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9031,
											"end": 9056,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9091,
											"end": 9092,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9088,
											"end": 9089,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9084,
											"end": 9093,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 9113,
											"end": 9143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 9131,
											"end": 9142,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9113,
											"end": 9143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 9113,
											"end": 9143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9113,
											"end": 9143,
											"name": "tag",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 9113,
											"end": 9143,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9102,
											"end": 9143,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9102,
											"end": 9143,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9292,
											"end": 9293,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9283,
											"end": 9290,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9279,
											"end": 9294,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 9276,
											"end": 9277,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9273,
											"end": 9295,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 9253,
											"end": 9254,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9246,
											"end": 9255,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9226,
											"end": 9309,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 9203,
											"end": 9342,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 9203,
											"end": 9342,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9322,
											"end": 9340,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 9322,
											"end": 9340,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 9322,
											"end": 9340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9322,
											"end": 9340,
											"name": "tag",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 9322,
											"end": 9340,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9203,
											"end": 9342,
											"name": "tag",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 9203,
											"end": 9342,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8987,
											"end": 9349,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8939,
											"end": 9349,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8939,
											"end": 9349,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8939,
											"end": 9349,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8939,
											"end": 9349,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8939,
											"end": 9349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9355,
											"end": 9532,
											"name": "tag",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 9355,
											"end": 9532,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9495,
											"end": 9524,
											"name": "PUSH",
											"source": 8,
											"value": "4D696E696D756D20707572636861736520697320302E31204554480000000000"
										},
										{
											"begin": 9491,
											"end": 9492,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9483,
											"end": 9489,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9479,
											"end": 9493,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9472,
											"end": 9525,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9355,
											"end": 9532,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9355,
											"end": 9532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9538,
											"end": 9904,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 9538,
											"end": 9904,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9680,
											"end": 9683,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9701,
											"end": 9768,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 9765,
											"end": 9767,
											"name": "PUSH",
											"source": 8,
											"value": "1B"
										},
										{
											"begin": 9760,
											"end": 9763,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9701,
											"end": 9768,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 9701,
											"end": 9768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9701,
											"end": 9768,
											"name": "tag",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 9701,
											"end": 9768,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9694,
											"end": 9768,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9694,
											"end": 9768,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9777,
											"end": 9870,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 9866,
											"end": 9869,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9777,
											"end": 9870,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 9777,
											"end": 9870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9777,
											"end": 9870,
											"name": "tag",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 9777,
											"end": 9870,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9895,
											"end": 9897,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9890,
											"end": 9893,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9886,
											"end": 9898,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9879,
											"end": 9898,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9879,
											"end": 9898,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9538,
											"end": 9904,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9538,
											"end": 9904,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9538,
											"end": 9904,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9538,
											"end": 9904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9910,
											"end": 10329,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 9910,
											"end": 10329,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10076,
											"end": 10080,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10114,
											"end": 10116,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10103,
											"end": 10112,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10099,
											"end": 10117,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10091,
											"end": 10117,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10091,
											"end": 10117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10163,
											"end": 10172,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10157,
											"end": 10161,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10153,
											"end": 10173,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10149,
											"end": 10150,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10147,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10134,
											"end": 10151,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10127,
											"end": 10174,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10191,
											"end": 10322,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 10317,
											"end": 10321,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10191,
											"end": 10322,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 10191,
											"end": 10322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10191,
											"end": 10322,
											"name": "tag",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 10191,
											"end": 10322,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10183,
											"end": 10322,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10183,
											"end": 10322,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9910,
											"end": 10329,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9910,
											"end": 10329,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9910,
											"end": 10329,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9910,
											"end": 10329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10335,
											"end": 10503,
											"name": "tag",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 10335,
											"end": 10503,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10475,
											"end": 10495,
											"name": "PUSH",
											"source": 8,
											"value": "4E6F2045544820746F2077697468647261770000000000000000000000000000"
										},
										{
											"begin": 10471,
											"end": 10472,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10463,
											"end": 10469,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10459,
											"end": 10473,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10452,
											"end": 10496,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10335,
											"end": 10503,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10335,
											"end": 10503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10509,
											"end": 10875,
											"name": "tag",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 10509,
											"end": 10875,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10651,
											"end": 10654,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10672,
											"end": 10739,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 10736,
											"end": 10738,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 10731,
											"end": 10734,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10672,
											"end": 10739,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 10672,
											"end": 10739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10672,
											"end": 10739,
											"name": "tag",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 10672,
											"end": 10739,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10665,
											"end": 10739,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10665,
											"end": 10739,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10748,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 10837,
											"end": 10840,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10748,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 10748,
											"end": 10841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10748,
											"end": 10841,
											"name": "tag",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 10748,
											"end": 10841,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10866,
											"end": 10868,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10861,
											"end": 10864,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10857,
											"end": 10869,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10850,
											"end": 10869,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10850,
											"end": 10869,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10509,
											"end": 10875,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10509,
											"end": 10875,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10509,
											"end": 10875,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10509,
											"end": 10875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10881,
											"end": 11300,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 10881,
											"end": 11300,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11047,
											"end": 11051,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11085,
											"end": 11087,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11074,
											"end": 11083,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11070,
											"end": 11088,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11062,
											"end": 11088,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11062,
											"end": 11088,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11134,
											"end": 11143,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11128,
											"end": 11132,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11124,
											"end": 11144,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11120,
											"end": 11121,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11109,
											"end": 11118,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11105,
											"end": 11122,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11098,
											"end": 11145,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11162,
											"end": 11293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 11288,
											"end": 11292,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11162,
											"end": 11293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 11162,
											"end": 11293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11162,
											"end": 11293,
											"name": "tag",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 11162,
											"end": 11293,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11154,
											"end": 11293,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11154,
											"end": 11293,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10881,
											"end": 11300,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10881,
											"end": 11300,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10881,
											"end": 11300,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10881,
											"end": 11300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11306,
											"end": 11453,
											"name": "tag",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 11306,
											"end": 11453,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11407,
											"end": 11418,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11444,
											"end": 11447,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11429,
											"end": 11447,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11429,
											"end": 11447,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11306,
											"end": 11453,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11306,
											"end": 11453,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11306,
											"end": 11453,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11306,
											"end": 11453,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11306,
											"end": 11453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11459,
											"end": 11573,
											"name": "tag",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 11459,
											"end": 11573,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11459,
											"end": 11573,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11459,
											"end": 11573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11579,
											"end": 11977,
											"name": "tag",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 11579,
											"end": 11977,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11738,
											"end": 11741,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11759,
											"end": 11842,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 11840,
											"end": 11841,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11835,
											"end": 11838,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11759,
											"end": 11842,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 11759,
											"end": 11842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11759,
											"end": 11842,
											"name": "tag",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 11759,
											"end": 11842,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11752,
											"end": 11842,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11752,
											"end": 11842,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11851,
											"end": 11944,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 11940,
											"end": 11943,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11851,
											"end": 11944,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 11851,
											"end": 11944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11851,
											"end": 11944,
											"name": "tag",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 11851,
											"end": 11944,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11969,
											"end": 11970,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11964,
											"end": 11967,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11960,
											"end": 11971,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11953,
											"end": 11971,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11953,
											"end": 11971,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11579,
											"end": 11977,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11579,
											"end": 11977,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11579,
											"end": 11977,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11579,
											"end": 11977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11983,
											"end": 12362,
											"name": "tag",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 11983,
											"end": 12362,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12167,
											"end": 12170,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12189,
											"end": 12336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 12332,
											"end": 12335,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12189,
											"end": 12336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 12189,
											"end": 12336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12189,
											"end": 12336,
											"name": "tag",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 12189,
											"end": 12336,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12182,
											"end": 12336,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12182,
											"end": 12336,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12353,
											"end": 12356,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12346,
											"end": 12356,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12346,
											"end": 12356,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11983,
											"end": 12362,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11983,
											"end": 12362,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11983,
											"end": 12362,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11983,
											"end": 12362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12368,
											"end": 12539,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 12368,
											"end": 12539,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12508,
											"end": 12531,
											"name": "PUSH",
											"source": 8,
											"value": "455448207769746864726177616C206661696C65640000000000000000000000"
										},
										{
											"begin": 12504,
											"end": 12505,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12496,
											"end": 12502,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12492,
											"end": 12506,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12485,
											"end": 12532,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12368,
											"end": 12539,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12368,
											"end": 12539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12545,
											"end": 12911,
											"name": "tag",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 12545,
											"end": 12911,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12687,
											"end": 12690,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12708,
											"end": 12775,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 12772,
											"end": 12774,
											"name": "PUSH",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 12767,
											"end": 12770,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12708,
											"end": 12775,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 12708,
											"end": 12775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12708,
											"end": 12775,
											"name": "tag",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 12708,
											"end": 12775,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12701,
											"end": 12775,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12701,
											"end": 12775,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12784,
											"end": 12877,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 12873,
											"end": 12876,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12784,
											"end": 12877,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 12784,
											"end": 12877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12784,
											"end": 12877,
											"name": "tag",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 12784,
											"end": 12877,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12902,
											"end": 12904,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12897,
											"end": 12900,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12893,
											"end": 12905,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12886,
											"end": 12905,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12886,
											"end": 12905,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12545,
											"end": 12911,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12545,
											"end": 12911,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12545,
											"end": 12911,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12545,
											"end": 12911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12917,
											"end": 13336,
											"name": "tag",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 12917,
											"end": 13336,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13083,
											"end": 13087,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13121,
											"end": 13123,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13110,
											"end": 13119,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13106,
											"end": 13124,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13098,
											"end": 13124,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13098,
											"end": 13124,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13170,
											"end": 13179,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13164,
											"end": 13168,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13160,
											"end": 13180,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13156,
											"end": 13157,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13145,
											"end": 13154,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13141,
											"end": 13158,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13134,
											"end": 13181,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13198,
											"end": 13329,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 13324,
											"end": 13328,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13198,
											"end": 13329,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 13198,
											"end": 13329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13198,
											"end": 13329,
											"name": "tag",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 13198,
											"end": 13329,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13190,
											"end": 13329,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13190,
											"end": 13329,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12917,
											"end": 13336,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12917,
											"end": 13336,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12917,
											"end": 13336,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12917,
											"end": 13336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13342,
											"end": 13784,
											"name": "tag",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 13342,
											"end": 13784,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13491,
											"end": 13495,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13529,
											"end": 13531,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 13518,
											"end": 13527,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13514,
											"end": 13532,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13506,
											"end": 13532,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13506,
											"end": 13532,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13542,
											"end": 13613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 13610,
											"end": 13611,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13599,
											"end": 13608,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13595,
											"end": 13612,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13586,
											"end": 13592,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 13542,
											"end": 13613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 13542,
											"end": 13613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13542,
											"end": 13613,
											"name": "tag",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 13542,
											"end": 13613,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13623,
											"end": 13695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 13691,
											"end": 13693,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13680,
											"end": 13689,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13676,
											"end": 13694,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13667,
											"end": 13673,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 13623,
											"end": 13695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 13623,
											"end": 13695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13623,
											"end": 13695,
											"name": "tag",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 13623,
											"end": 13695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13705,
											"end": 13777,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 13773,
											"end": 13775,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13762,
											"end": 13771,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13758,
											"end": 13776,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13749,
											"end": 13755,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 13705,
											"end": 13777,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 13705,
											"end": 13777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13705,
											"end": 13777,
											"name": "tag",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 13705,
											"end": 13777,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13342,
											"end": 13784,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 13342,
											"end": 13784,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 13342,
											"end": 13784,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13342,
											"end": 13784,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13342,
											"end": 13784,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13342,
											"end": 13784,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13342,
											"end": 13784,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13790,
											"end": 13981,
											"name": "tag",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 13790,
											"end": 13981,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13830,
											"end": 13833,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13849,
											"end": 13869,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 13867,
											"end": 13868,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13849,
											"end": 13869,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 13849,
											"end": 13869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13849,
											"end": 13869,
											"name": "tag",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 13849,
											"end": 13869,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13844,
											"end": 13869,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13844,
											"end": 13869,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13883,
											"end": 13903,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 13901,
											"end": 13902,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13883,
											"end": 13903,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 13883,
											"end": 13903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13883,
											"end": 13903,
											"name": "tag",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 13883,
											"end": 13903,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13878,
											"end": 13903,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13878,
											"end": 13903,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13926,
											"end": 13927,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13923,
											"end": 13924,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13919,
											"end": 13928,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13912,
											"end": 13928,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13912,
											"end": 13928,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13947,
											"end": 13950,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13944,
											"end": 13945,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13941,
											"end": 13951,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 13938,
											"end": 13974,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 13938,
											"end": 13974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 13938,
											"end": 13974,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13954,
											"end": 13972,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 13954,
											"end": 13972,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 13954,
											"end": 13972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13954,
											"end": 13972,
											"name": "tag",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 13954,
											"end": 13972,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13938,
											"end": 13974,
											"name": "tag",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 13938,
											"end": 13974,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13790,
											"end": 13981,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13790,
											"end": 13981,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13790,
											"end": 13981,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13790,
											"end": 13981,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13790,
											"end": 13981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/access/Ownable2Step.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/m2/buy-nft-erc20/ShoebumxToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"TOKENS_PER_ETH()": "bc6e6604",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"buyTokens()": "d0febe4c",
							"decimals()": "313ce567",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"withdrawETH()": "e086e5ec"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"TOKENS_PER_ETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":\"ShoebumxToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/access/Ownable2Step.sol\":{\"keccak256\":\"0xdcad8898fda432696597752e8ec361b87d85c82cb258115427af006dacf7128c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2c9d517f0c136d54bd00cd57959d25681d4d6273f5bbbc263afe228303772f0\",\"dweb:/ipfs/QmReNFjXBiufByiAAzfSQ2SM5r3qeUErn46BmN3yVRvrek\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/m2/buy-nft-erc20/ShoebumxToken.sol\":{\"keccak256\":\"0xf0c9cb23a7f910513f1440691617b1d70dfb3f9f14e9e3bfa872e793819dcdd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a15c016e088b9be0365aa8d767492786cf8699f2ee05126a9e821d412cda2ef5\",\"dweb:/ipfs/QmV4yR8ixx1fTekRsbR2s74feP6W8K91xUvrrWW7QDwfc5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 393,
								"contract": "contracts/m2/buy-nft-erc20/ShoebumxToken.sol:ShoebumxToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 399,
								"contract": "contracts/m2/buy-nft-erc20/ShoebumxToken.sol:ShoebumxToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 401,
								"contract": "contracts/m2/buy-nft-erc20/ShoebumxToken.sol:ShoebumxToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 403,
								"contract": "contracts/m2/buy-nft-erc20/ShoebumxToken.sol:ShoebumxToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 405,
								"contract": "contracts/m2/buy-nft-erc20/ShoebumxToken.sol:ShoebumxToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/m2/buy-nft-erc20/ShoebumxToken.sol:ShoebumxToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 1036,
								"contract": "contracts/m2/buy-nft-erc20/ShoebumxToken.sol:ShoebumxToken",
								"label": "INITIAL_SUPPLY",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1019
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1020,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1019,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1019,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1019
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1001,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1001,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/Ownable2Step.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable2Step.sol",
					"exportedSymbols": {
						"Ownable": [
							147
						],
						"Ownable2Step": [
							233
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "./Ownable.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 148,
							"src": "133:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 147,
										"src": "141:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 153,
										"name": "Ownable",
										"nameLocations": [
											"1018:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "1018:7:1"
									},
									"id": 154,
									"nodeType": "InheritanceSpecifier",
									"src": "1018:7:1"
								}
							],
							"canonicalName": "Ownable2Step",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 152,
								"nodeType": "StructuredDocumentation",
								"src": "173:810:1",
								"text": " @dev Contract module which provides access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n This extension of the {Ownable} contract includes a two-step mechanism to transfer\n ownership, where the new owner must call {acceptOwnership} in order to replace the\n old one. This can help prevent common mistakes, such as transfers of ownership to\n incorrect accounts, or to contracts that are unable to interact with the\n permission system.\n The initial owner is specified at deployment time in the constructor for `Ownable`. This\n can later be changed with {transferOwnership} and {acceptOwnership}.\n This module is used through inheritance. It will make available all functions\n from parent (Ownable)."
							},
							"fullyImplemented": true,
							"id": 233,
							"linearizedBaseContracts": [
								233,
								147,
								1019
							],
							"name": "Ownable2Step",
							"nameLocation": "1002:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 156,
									"mutability": "mutable",
									"name": "_pendingOwner",
									"nameLocation": "1048:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 233,
									"src": "1032:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 155,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1032:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e22700",
									"id": 162,
									"name": "OwnershipTransferStarted",
									"nameLocation": "1074:24:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1115:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "1099:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1099:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1146:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "1130:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1130:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1098:57:1"
									},
									"src": "1068:88:1"
								},
								{
									"body": {
										"id": 170,
										"nodeType": "Block",
										"src": "1294:37:1",
										"statements": [
											{
												"expression": {
													"id": 168,
													"name": "_pendingOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 156,
													"src": "1311:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 167,
												"id": 169,
												"nodeType": "Return",
												"src": "1304:20:1"
											}
										]
									},
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "1162:65:1",
										"text": " @dev Returns the address of the pending owner."
									},
									"functionSelector": "e30c3978",
									"id": 171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pendingOwner",
									"nameLocation": "1241:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1253:2:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "1285:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1284:9:1"
									},
									"scope": 233,
									"src": "1232:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										126
									],
									"body": {
										"id": 190,
										"nodeType": "Block",
										"src": "1728:99:1",
										"statements": [
											{
												"expression": {
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 180,
														"name": "_pendingOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "1738:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 181,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1754:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1738:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 183,
												"nodeType": "ExpressionStatement",
												"src": "1738:24:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 185,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1802:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1802:7:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 187,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "1811:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 184,
														"name": "OwnershipTransferStarted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 162,
														"src": "1777:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1777:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 189,
												"nodeType": "EmitStatement",
												"src": "1772:48:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1337:307:1",
										"text": " @dev Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one.\n Can only be called by the current owner.\n Setting `newOwner` to the zero address is allowed; this can be used to cancel an initiated ownership transfer."
									},
									"functionSelector": "f2fde38b",
									"id": 191,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 178,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 177,
												"name": "onlyOwner",
												"nameLocations": [
													"1718:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1718:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1718:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1658:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 176,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1709:8:1"
									},
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1684:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "1676:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1676:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1675:18:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1728:0:1"
									},
									"scope": 233,
									"src": "1649:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										146
									],
									"body": {
										"id": 207,
										"nodeType": "Block",
										"src": "2083:81:1",
										"statements": [
											{
												"expression": {
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "2093:20:1",
													"subExpression": {
														"id": 198,
														"name": "_pendingOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "2100:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 200,
												"nodeType": "ExpressionStatement",
												"src": "2093:20:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 204,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "2148:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 201,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2123:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_Ownable2Step_$233_$",
																"typeString": "type(contract super Ownable2Step)"
															}
														},
														"id": 203,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2129:18:1",
														"memberName": "_transferOwnership",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 146,
														"src": "2123:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2123:34:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 206,
												"nodeType": "ExpressionStatement",
												"src": "2123:34:1"
											}
										]
									},
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "1833:173:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner.\n Internal function without access restriction."
									},
									"id": 208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2020:18:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 196,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2074:8:1"
									},
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2047:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "2039:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2039:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2038:18:1"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2083:0:1"
									},
									"scope": 233,
									"src": "2011:153:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "2286:187:1",
										"statements": [
											{
												"assignments": [
													213
												],
												"declarations": [
													{
														"constant": false,
														"id": 213,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "2304:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 231,
														"src": "2296:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 212,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2296:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 216,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 214,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1001,
														"src": "2313:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2313:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2296:29:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 217,
															"name": "pendingOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "2339:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 218,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2339:14:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 219,
														"name": "sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "2357:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2339:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 226,
												"nodeType": "IfStatement",
												"src": "2335:96:1",
												"trueBody": {
													"id": 225,
													"nodeType": "Block",
													"src": "2365:66:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 222,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 213,
																		"src": "2413:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 221,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "2386:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2386:34:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 224,
															"nodeType": "RevertStatement",
															"src": "2379:41:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 228,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "2459:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 227,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															208
														],
														"referencedDeclaration": 208,
														"src": "2440:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2440:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 230,
												"nodeType": "ExpressionStatement",
												"src": "2440:26:1"
											}
										]
									},
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "2170:69:1",
										"text": " @dev The new owner accepts the ownership transfer."
									},
									"functionSelector": "79ba5097",
									"id": 232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "acceptOwnership",
									"nameLocation": "2253:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2268:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2286:0:1"
									},
									"scope": 233,
									"src": "2244:229:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 234,
							"src": "984:1491:1",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								162
							]
						}
					],
					"src": "107:2369:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							370
						],
						"IERC20Errors": [
							275
						],
						"IERC721Errors": [
							323
						]
					},
					"id": 371,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 236,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:2",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 275,
							"linearizedBaseContracts": [
								275
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 245,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "654:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "670:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "687:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:2"
									},
									"src": "623:80:2"
								},
								{
									"documentation": {
										"id": 246,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 250,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "891:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:2"
									},
									"src": "866:41:2"
								},
								{
									"documentation": {
										"id": 251,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 255,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "1104:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:2"
									},
									"src": "1077:45:2"
								},
								{
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:2",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 264,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "1511:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "1528:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "1547:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:2"
									},
									"src": "1478:85:2"
								},
								{
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 269,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "1775:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:2"
									},
									"src": "1748:45:2"
								},
								{
									"documentation": {
										"id": 270,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:2",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 274,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "2025:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:2"
									},
									"src": "1999:43:2"
								}
							],
							"scope": 371,
							"src": "280:1764:2",
							"usedErrors": [
								245,
								250,
								255,
								264,
								269,
								274
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 276,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:2",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 323,
							"linearizedBaseContracts": [
								323
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:2",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 281,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "2469:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:2"
									},
									"src": "2444:40:2"
								},
								{
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:2",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 286,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "2656:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:2"
									},
									"src": "2627:46:2"
								},
								{
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:2",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 295,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "3000:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "3016:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "3033:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:2"
									},
									"src": "2973:75:2"
								},
								{
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 300,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "3237:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:2"
									},
									"src": "3211:42:2"
								},
								{
									"documentation": {
										"id": 301,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 305,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "3451:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:2"
									},
									"src": "3423:46:2"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 312,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "3760:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "3778:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:2"
									},
									"src": "3727:68:2"
								},
								{
									"documentation": {
										"id": 313,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 317,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "4008:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:2"
									},
									"src": "3980:46:2"
								},
								{
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 322,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "4262:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:2"
									},
									"src": "4234:46:2"
								}
							],
							"scope": 371,
							"src": "2190:2092:2",
							"usedErrors": [
								281,
								286,
								295,
								300,
								305,
								312,
								317,
								322
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 324,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:2",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 370,
							"linearizedBaseContracts": [
								370
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 325,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 335,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "4860:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "4876:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "4893:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "4909:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:2"
									},
									"src": "4827:99:2"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 340,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "5116:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:2"
									},
									"src": "5089:43:2"
								},
								{
									"documentation": {
										"id": 341,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 345,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "5331:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:2"
									},
									"src": "5302:47:2"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 352,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "5651:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "5669:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:2"
									},
									"src": "5616:68:2"
								},
								{
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 357,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "5898:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:2"
									},
									"src": "5869:47:2"
								},
								{
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 362,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "6153:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:2"
									},
									"src": "6124:47:2"
								},
								{
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:2",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 369,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "6494:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "6513:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:2"
									},
									"src": "6462:73:2"
								}
							],
							"scope": 371,
							"src": "4430:2107:2",
							"usedErrors": [
								335,
								340,
								345,
								352,
								357,
								362,
								369
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1019
						],
						"ERC20": [
							885
						],
						"IERC20": [
							963
						],
						"IERC20Errors": [
							275
						],
						"IERC20Metadata": [
							989
						]
					},
					"id": 886,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 372,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 374,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 886,
							"sourceUnit": 964,
							"src": "131:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 373,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 963,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 376,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 886,
							"sourceUnit": 990,
							"src": "168:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 375,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 989,
										"src": "176:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 378,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 886,
							"sourceUnit": 1020,
							"src": "232:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 377,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1019,
										"src": "240:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 380,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 886,
							"sourceUnit": 371,
							"src": "281:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 379,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 275,
										"src": "289:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 382,
										"name": "Context",
										"nameLocations": [
											"1133:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1019,
										"src": "1133:7:3"
									},
									"id": 383,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:3"
								},
								{
									"baseName": {
										"id": 384,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 963,
										"src": "1142:6:3"
									},
									"id": 385,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:3"
								},
								{
									"baseName": {
										"id": 386,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 989,
										"src": "1150:14:3"
									},
									"id": 387,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:3"
								},
								{
									"baseName": {
										"id": 388,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 275,
										"src": "1166:12:3"
									},
									"id": 389,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:3"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 381,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 885,
							"linearizedBaseContracts": [
								885,
								275,
								989,
								963,
								1019
							],
							"name": "ERC20",
							"nameLocation": "1124:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 393,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 885,
									"src": "1185:53:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 392,
										"keyName": "account",
										"keyNameLocation": "1201:7:3",
										"keyType": {
											"id": 390,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 391,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 399,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 885,
									"src": "1245:83:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 398,
										"keyName": "account",
										"keyNameLocation": "1261:7:3",
										"keyType": {
											"id": 394,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 397,
											"keyName": "spender",
											"keyNameLocation": "1288:7:3",
											"keyType": {
												"id": 395,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 396,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 401,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 885,
									"src": "1335:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 400,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 403,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 885,
									"src": "1370:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 402,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 405,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 885,
									"src": "1396:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 404,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "1657:57:3",
										"statements": [
											{
												"expression": {
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 413,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "1667:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 414,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 408,
														"src": "1675:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:3"
											},
											{
												"expression": {
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 417,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "1690:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 418,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 410,
														"src": "1700:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:3"
											}
										]
									},
									"documentation": {
										"id": 406,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 422,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "1613:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 407,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "1634:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 409,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:3"
									},
									"returnParameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:3"
									},
									"scope": 885,
									"src": "1601:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										976
									],
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "1839:29:3",
										"statements": [
											{
												"expression": {
													"id": 428,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 403,
													"src": "1856:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 427,
												"id": 429,
												"nodeType": "Return",
												"src": "1849:12:3"
											}
										]
									},
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:3"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "1824:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 425,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:3"
									},
									"scope": 885,
									"src": "1779:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										982
									],
									"body": {
										"id": 439,
										"nodeType": "Block",
										"src": "2043:31:3",
										"statements": [
											{
												"expression": {
													"id": 437,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 405,
													"src": "2060:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 436,
												"id": 438,
												"nodeType": "Return",
												"src": "2053:14:3"
											}
										]
									},
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 440,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:3"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "2028:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 434,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:3"
									},
									"scope": 885,
									"src": "1981:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										988
									],
									"body": {
										"id": 448,
										"nodeType": "Block",
										"src": "2763:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 445,
												"id": 447,
												"nodeType": "Return",
												"src": "2773:9:3"
											}
										]
									},
									"documentation": {
										"id": 441,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:3"
									},
									"returnParameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "2756:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 443,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:3"
									},
									"scope": 885,
									"src": "2707:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										912
									],
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "2910:36:3",
										"statements": [
											{
												"expression": {
													"id": 455,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 401,
													"src": "2927:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 454,
												"id": 456,
												"nodeType": "Return",
												"src": "2920:19:3"
											}
										]
									},
									"documentation": {
										"id": 450,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:3"
									},
									"returnParameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2901:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:3"
									},
									"scope": 885,
									"src": "2849:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										920
									],
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "3078:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 466,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 393,
														"src": "3095:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 468,
													"indexExpression": {
														"id": 467,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "3105:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 465,
												"id": 469,
												"nodeType": "Return",
												"src": "3088:25:3"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "3023:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:3"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "3069:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:3"
									},
									"scope": 885,
									"src": "3004:116:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										930
									],
									"body": {
										"id": 494,
										"nodeType": "Block",
										"src": "3390:103:3",
										"statements": [
											{
												"assignments": [
													482
												],
												"declarations": [
													{
														"constant": false,
														"id": 482,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 494,
														"src": "3400:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 481,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 485,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 483,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1001,
														"src": "3416:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 487,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "3448:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 488,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "3455:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 489,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "3459:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 486,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "3438:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 491,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 480,
												"id": 493,
												"nodeType": "Return",
												"src": "3475:11:3"
											}
										]
									},
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 495,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "3333:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "3345:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:3"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "3384:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 478,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:3"
									},
									"scope": 885,
									"src": "3315:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										940
									],
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "3640:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 505,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "3657:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 507,
														"indexExpression": {
															"id": 506,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 498,
															"src": "3669:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 509,
													"indexExpression": {
														"id": 508,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "3676:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 504,
												"id": 510,
												"nodeType": "Return",
												"src": "3650:34:3"
											}
										]
									},
									"documentation": {
										"id": 496,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "3570:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "3585:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:3"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "3631:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:3"
									},
									"scope": 885,
									"src": "3551:140:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										950
									],
									"body": {
										"id": 535,
										"nodeType": "Block",
										"src": "4077:107:3",
										"statements": [
											{
												"assignments": [
													523
												],
												"declarations": [
													{
														"constant": false,
														"id": 523,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 535,
														"src": "4087:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 522,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 526,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 524,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1001,
														"src": "4103:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 528,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "4134:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 529,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 515,
															"src": "4141:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 530,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 517,
															"src": "4150:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 527,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															776,
															836
														],
														"referencedDeclaration": 776,
														"src": "4125:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 532,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 521,
												"id": 534,
												"nodeType": "Return",
												"src": "4166:11:3"
											}
										]
									},
									"documentation": {
										"id": 513,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "4015:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "4032:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:3"
									},
									"returnParameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "4071:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 519,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:3"
									},
									"scope": 885,
									"src": "3998:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										962
									],
									"body": {
										"id": 567,
										"nodeType": "Block",
										"src": "4869:151:3",
										"statements": [
											{
												"assignments": [
													549
												],
												"declarations": [
													{
														"constant": false,
														"id": 549,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 567,
														"src": "4879:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 548,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 552,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 550,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1001,
														"src": "4897:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 554,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "4935:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 555,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 549,
															"src": "4941:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 556,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 543,
															"src": "4950:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 553,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "4919:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 558,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 560,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "4976:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 561,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "4982:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 562,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 543,
															"src": "4986:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 559,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "4966:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 564,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 547,
												"id": 566,
												"nodeType": "Return",
												"src": "5002:11:3"
											}
										]
									},
									"documentation": {
										"id": 537,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:3",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "4798:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "4812:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "4824:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:3"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "4863:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 545,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:3"
									},
									"scope": 885,
									"src": "4776:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "5462:231:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 571,
														"src": "5476:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 592,
												"nodeType": "IfStatement",
												"src": "5472:86:3",
												"trueBody": {
													"id": 591,
													"nodeType": "Block",
													"src": "5496:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 587,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 586,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 585,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 588,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 584,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 250,
																	"src": "5517:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 590,
															"nodeType": "RevertStatement",
															"src": "5510:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 593,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "5571:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 595,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 594,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 597,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 607,
												"nodeType": "IfStatement",
												"src": "5567:86:3",
												"trueBody": {
													"id": 606,
													"nodeType": "Block",
													"src": "5589:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 602,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 601,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 600,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 599,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 255,
																	"src": "5610:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 604,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 605,
															"nodeType": "RevertStatement",
															"src": "5603:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 609,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 571,
															"src": "5670:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 610,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "5676:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 611,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "5680:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 608,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 692,
														"src": "5662:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 613,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:3"
											}
										]
									},
									"documentation": {
										"id": 569,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "5412:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "5426:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "5438:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:3"
									},
									"returnParameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:3"
									},
									"scope": 885,
									"src": "5393:300:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 691,
										"nodeType": "Block",
										"src": "6083:1032:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 625,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "6097:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 626,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 629,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 662,
													"nodeType": "Block",
													"src": "6271:362:3",
													"statements": [
														{
															"assignments": [
																637
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 637,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 662,
																	"src": "6285:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 636,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 641,
															"initialValue": {
																"baseExpression": {
																	"id": 638,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 393,
																	"src": "6307:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 640,
																"indexExpression": {
																	"id": 639,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 618,
																	"src": "6317:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 644,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 642,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 637,
																	"src": "6340:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 643,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 622,
																	"src": "6354:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 652,
															"nodeType": "IfStatement",
															"src": "6336:115:3",
															"trueBody": {
																"id": 651,
																"nodeType": "Block",
																"src": "6361:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 646,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 618,
																					"src": "6411:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 647,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 637,
																					"src": "6417:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 648,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 622,
																					"src": "6430:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 645,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 245,
																				"src": "6386:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 649,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 650,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:3"
																	}
																]
															}
														},
														{
															"id": 661,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:3",
															"statements": [
																{
																	"expression": {
																		"id": 659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 653,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 393,
																				"src": "6571:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 655,
																			"indexExpression": {
																				"id": 654,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 618,
																				"src": "6581:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 656,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 637,
																				"src": "6589:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 657,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 622,
																				"src": "6603:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 660,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:3"
																}
															]
														}
													]
												},
												"id": 663,
												"nodeType": "IfStatement",
												"src": "6093:540:3",
												"trueBody": {
													"id": 635,
													"nodeType": "Block",
													"src": "6117:148:3",
													"statements": [
														{
															"expression": {
																"id": 633,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 631,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 401,
																	"src": "6233:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 632,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 622,
																	"src": "6249:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 634,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 664,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 620,
														"src": "6647:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 667,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 665,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 668,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 683,
													"nodeType": "Block",
													"src": "6862:206:3",
													"statements": [
														{
															"id": 682,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:3",
															"statements": [
																{
																	"expression": {
																		"id": 680,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 676,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 393,
																				"src": "7021:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 678,
																			"indexExpression": {
																				"id": 677,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 620,
																				"src": "7031:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 679,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 622,
																			"src": "7038:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 681,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:3"
																}
															]
														}
													]
												},
												"id": 684,
												"nodeType": "IfStatement",
												"src": "6643:425:3",
												"trueBody": {
													"id": 675,
													"nodeType": "Block",
													"src": "6665:191:3",
													"statements": [
														{
															"id": 674,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:3",
															"statements": [
																{
																	"expression": {
																		"id": 672,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 670,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 401,
																			"src": "6810:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 671,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 622,
																			"src": "6826:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 673,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 686,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 618,
															"src": "7092:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 687,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 620,
															"src": "7098:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 688,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "7102:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 685,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 897,
														"src": "7083:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 690,
												"nodeType": "EmitStatement",
												"src": "7078:30:3"
											}
										]
									},
									"documentation": {
										"id": 616,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 692,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "6025:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "6039:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "6051:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:3"
									},
									"returnParameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:3"
									},
									"scope": 885,
									"src": "6008:1107:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 724,
										"nodeType": "Block",
										"src": "7514:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 700,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "7528:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 703,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 702,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 701,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 704,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 714,
												"nodeType": "IfStatement",
												"src": "7524:91:3",
												"trueBody": {
													"id": 713,
													"nodeType": "Block",
													"src": "7551:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 709,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 708,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 707,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 710,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 706,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 255,
																	"src": "7572:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 711,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 712,
															"nodeType": "RevertStatement",
															"src": "7565:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 716,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 720,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "7644:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 721,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 697,
															"src": "7653:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 715,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 692,
														"src": "7624:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 723,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:3"
											}
										]
									},
									"documentation": {
										"id": 693,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 725,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "7473:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "7490:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:3"
									},
									"returnParameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:3"
									},
									"scope": 885,
									"src": "7458:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 757,
										"nodeType": "Block",
										"src": "8040:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 733,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "8054:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 736,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 734,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 737,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 747,
												"nodeType": "IfStatement",
												"src": "8050:89:3",
												"trueBody": {
													"id": 746,
													"nodeType": "Block",
													"src": "8077:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 742,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 741,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 740,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 739,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 250,
																	"src": "8098:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 744,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 745,
															"nodeType": "RevertStatement",
															"src": "8091:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 749,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 728,
															"src": "8156:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 752,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 751,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 750,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 754,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "8177:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 748,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 692,
														"src": "8148:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 756,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:3"
											}
										]
									},
									"documentation": {
										"id": 726,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 758,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "7999:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "8016:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:3"
									},
									"returnParameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:3"
									},
									"scope": 885,
									"src": "7984:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "8800:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 769,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "8819:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 770,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 763,
															"src": "8826:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 771,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "8835:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 768,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															776,
															836
														],
														"referencedDeclaration": 836,
														"src": "8810:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 774,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:3"
											}
										]
									},
									"documentation": {
										"id": 759,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "8744:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "8759:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "8776:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:3"
									},
									"returnParameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:3"
									},
									"scope": 885,
									"src": "8726:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 835,
										"nodeType": "Block",
										"src": "9799:334:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 788,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "9813:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 789,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 792,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 802,
												"nodeType": "IfStatement",
												"src": "9809:89:3",
												"trueBody": {
													"id": 801,
													"nodeType": "Block",
													"src": "9834:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 797,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 796,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 795,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 798,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 794,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 269,
																	"src": "9855:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 799,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 800,
															"nodeType": "RevertStatement",
															"src": "9848:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 803,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 781,
														"src": "9911:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 806,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 804,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 807,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 817,
												"nodeType": "IfStatement",
												"src": "9907:90:3",
												"trueBody": {
													"id": 816,
													"nodeType": "Block",
													"src": "9934:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 812,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 811,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 810,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 813,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 809,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 274,
																	"src": "9955:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 814,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 815,
															"nodeType": "RevertStatement",
															"src": "9948:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 818,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 399,
																"src": "10006:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 821,
															"indexExpression": {
																"id": 819,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 779,
																"src": "10018:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 822,
														"indexExpression": {
															"id": 820,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "10025:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 823,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "10036:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 825,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:3"
											},
											{
												"condition": {
													"id": 826,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 785,
													"src": "10055:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 834,
												"nodeType": "IfStatement",
												"src": "10051:76:3",
												"trueBody": {
													"id": 833,
													"nodeType": "Block",
													"src": "10066:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 828,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 779,
																		"src": "10094:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 829,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 781,
																		"src": "10101:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 830,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 783,
																		"src": "10110:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 827,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 906,
																	"src": "10085:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 832,
															"nodeType": "EmitStatement",
															"src": "10080:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 836,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "9719:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "9734:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "9751:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "9766:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 784,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:3"
									},
									"returnParameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:3"
									},
									"scope": 885,
									"src": "9701:432:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 883,
										"nodeType": "Block",
										"src": "10504:388:3",
										"statements": [
											{
												"assignments": [
													847
												],
												"declarations": [
													{
														"constant": false,
														"id": 847,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 883,
														"src": "10514:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 846,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 852,
												"initialValue": {
													"arguments": [
														{
															"id": 849,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 839,
															"src": "10551:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 850,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "10558:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 848,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 512,
														"src": "10541:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 853,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 847,
														"src": "10580:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 856,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10605:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 855,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10605:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 854,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10600:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 857,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10600:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 858,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10614:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10600:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 882,
												"nodeType": "IfStatement",
												"src": "10576:310:3",
												"trueBody": {
													"id": 881,
													"nodeType": "Block",
													"src": "10619:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 862,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 860,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 847,
																	"src": "10637:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 861,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 843,
																	"src": "10656:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10637:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 870,
															"nodeType": "IfStatement",
															"src": "10633:130:3",
															"trueBody": {
																"id": 869,
																"nodeType": "Block",
																"src": "10663:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 864,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 841,
																					"src": "10715:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 865,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 847,
																					"src": "10724:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 866,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 843,
																					"src": "10742:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 863,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 264,
																				"src": "10688:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 867,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10688:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 868,
																		"nodeType": "RevertStatement",
																		"src": "10681:67:3"
																	}
																]
															}
														},
														{
															"id": 880,
															"nodeType": "UncheckedBlock",
															"src": "10776:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 872,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 839,
																				"src": "10813:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 873,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 841,
																				"src": "10820:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 876,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 874,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 847,
																					"src": "10829:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 875,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 843,
																					"src": "10848:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10829:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 877,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10855:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 871,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				776,
																				836
																			],
																			"referencedDeclaration": 836,
																			"src": "10804:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 878,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10804:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 879,
																	"nodeType": "ExpressionStatement",
																	"src": "10804:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 837,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:3",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 884,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "10440:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 838,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "10455:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "10472:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:3"
									},
									"returnParameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:3"
									},
									"scope": 885,
									"src": "10415:477:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 886,
							"src": "1106:9788:3",
							"usedErrors": [
								245,
								250,
								255,
								264,
								269,
								274
							],
							"usedEvents": [
								897,
								906
							]
						}
					],
					"src": "105:10790:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							963
						]
					},
					"id": 964,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 887,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 888,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 963,
							"linearizedBaseContracts": [
								963
							],
							"name": "IERC20",
							"nameLocation": "214:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 889,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 897,
									"name": "Transfer",
									"nameLocation": "396:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "405:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 890,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "427:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 892,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 895,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "447:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:4"
									},
									"src": "390:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 898,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 906,
									"name": "Approval",
									"nameLocation": "627:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "636:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 902,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "659:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:4"
									},
									"src": "621:78:4"
								},
								{
									"documentation": {
										"id": 907,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 912,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:4"
									},
									"returnParameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "821:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:4"
									},
									"scope": 963,
									"src": "775:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 913,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 920,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 914,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 963,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 921,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 930,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "1222:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "1234:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:4"
									},
									"returnParameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "1267:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 927,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:4"
									},
									"scope": 963,
									"src": "1204:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 940,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "1567:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "1582:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 934,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:4"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "1622:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 937,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:4"
									},
									"scope": 963,
									"src": "1548:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 941,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 950,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "2326:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "2343:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:4"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "2376:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 947,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:4"
									},
									"scope": 963,
									"src": "2309:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 951,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 962,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "2712:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "2726:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "2738:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:4"
									},
									"returnParameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "2771:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 959,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:4"
									},
									"scope": 963,
									"src": "2690:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 964,
							"src": "204:2575:4",
							"usedErrors": [],
							"usedEvents": [
								897,
								906
							]
						}
					],
					"src": "106:2674:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							963
						],
						"IERC20Metadata": [
							989
						]
					},
					"id": 990,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 965,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 967,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 990,
							"sourceUnit": 964,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 966,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 963,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 969,
										"name": "IERC20",
										"nameLocations": [
											"306:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 963,
										"src": "306:6:5"
									},
									"id": 970,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 968,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:5",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 989,
							"linearizedBaseContracts": [
								989,
								963
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 971,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 976,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:5"
									},
									"returnParameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "417:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 973,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:5"
									},
									"scope": 989,
									"src": "378:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 977,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 982,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:5"
									},
									"returnParameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "540:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 979,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:5"
									},
									"scope": 989,
									"src": "499:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 983,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 988,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:5"
									},
									"returnParameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "674:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 985,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:5"
									},
									"scope": 989,
									"src": "631:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 990,
							"src": "278:405:5",
							"usedErrors": [],
							"usedEvents": [
								897,
								906
							]
						}
					],
					"src": "125:559:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1019
						]
					},
					"id": 1020,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 991,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 992,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1019,
							"linearizedBaseContracts": [
								1019
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1000,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 997,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 996,
												"id": 999,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 1001,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 1019,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1009,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1006,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1005,
												"id": 1008,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 1010,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1003,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 1019,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1017,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1014,
												"id": 1016,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 1018,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 1019,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1020,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"contracts/m2/buy-nft-erc20/ShoebumxToken.sol": {
				"ast": {
					"absolutePath": "contracts/m2/buy-nft-erc20/ShoebumxToken.sol",
					"exportedSymbols": {
						"Context": [
							1019
						],
						"ERC20": [
							885
						],
						"IERC20": [
							963
						],
						"IERC20Errors": [
							275
						],
						"IERC20Metadata": [
							989
						],
						"Ownable": [
							147
						],
						"Ownable2Step": [
							233
						],
						"ShoebumxToken": [
							1145
						]
					},
					"id": 1146,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1021,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "81:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1022,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 886,
							"src": "107:55:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable2Step.sol",
							"file": "@openzeppelin/contracts/access/Ownable2Step.sol",
							"id": 1023,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 234,
							"src": "163:57:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1024,
										"name": "ERC20",
										"nameLocations": [
											"248:5:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 885,
										"src": "248:5:7"
									},
									"id": 1025,
									"nodeType": "InheritanceSpecifier",
									"src": "248:5:7"
								},
								{
									"baseName": {
										"id": 1026,
										"name": "Ownable",
										"nameLocations": [
											"255:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "255:7:7"
									},
									"id": 1027,
									"nodeType": "InheritanceSpecifier",
									"src": "255:7:7"
								}
							],
							"canonicalName": "ShoebumxToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1145,
							"linearizedBaseContracts": [
								1145,
								147,
								885,
								275,
								989,
								963,
								1019
							],
							"name": "ShoebumxToken",
							"nameLocation": "231:13:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1036,
									"mutability": "mutable",
									"name": "INITIAL_SUPPLY",
									"nameLocation": "277:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "269:55:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1028,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "269:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 1035,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "315f3030305f303030",
											"id": 1029,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "294:9:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000_by_1",
												"typeString": "int_const 1000000"
											},
											"value": "1_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 1030,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "307:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1031,
															"name": "decimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "313:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																"typeString": "function () view returns (uint8)"
															}
														},
														"id": 1032,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "313:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "307:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1034,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "306:18:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "294:30:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"functionSelector": "bc6e6604",
									"id": 1043,
									"mutability": "constant",
									"name": "TOKENS_PER_ETH",
									"nameLocation": "354:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "330:53:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1037,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "330:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_100000000000000000000_by_1",
											"typeString": "int_const 100000000000000000000"
										},
										"id": 1042,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "313030",
											"id": 1038,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "371:3:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100_by_1",
												"typeString": "int_const 100"
											},
											"value": "100"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1041,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1039,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "377:2:7",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1040,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "381:2:7",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "377:6:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "371:12:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000000000000000000_by_1",
											"typeString": "int_const 100000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1060,
										"nodeType": "Block",
										"src": "475:50:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1055,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "491:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "495:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "491:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1057,
															"name": "INITIAL_SUPPLY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "503:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1054,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 725,
														"src": "485:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "485:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1059,
												"nodeType": "ExpressionStatement",
												"src": "485:33:7"
											}
										]
									},
									"id": 1061,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "53686f6562756d78546f6b656e",
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "431:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_81e5e1ba5d74f179f5026bf4e1cde993712d5d953017b3c91541c2b2fbd48c98",
														"typeString": "literal_string \"ShoebumxToken\""
													},
													"value": "ShoebumxToken"
												},
												{
													"hexValue": "534258",
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "448:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_6c47630dd6caf9bb8f4fc557bc33d4b714fbc3243ef0eaf871376f3bd661669c",
														"typeString": "literal_string \"SBX\""
													},
													"value": "SBX"
												}
											],
											"id": 1048,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1045,
												"name": "ERC20",
												"nameLocations": [
													"425:5:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 885,
												"src": "425:5:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "425:29:7"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1050,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "463:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "467:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "463:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1052,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1049,
												"name": "Ownable",
												"nameLocations": [
													"455:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "455:7:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "455:19:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "422:2:7"
									},
									"returnParameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "475:0:7"
									},
									"scope": 1145,
									"src": "411:114:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1081,
										"nodeType": "Block",
										"src": "590:55:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1071,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1063,
															"src": "606:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1072,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1065,
																"src": "610:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1076,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3130",
																			"id": 1073,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "620:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1074,
																				"name": "decimals",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 449,
																				"src": "626:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																					"typeString": "function () view returns (uint8)"
																				}
																			},
																			"id": 1075,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "626:10:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "620:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1077,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "619:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "610:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1070,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 725,
														"src": "600:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "600:38:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1080,
												"nodeType": "ExpressionStatement",
												"src": "600:38:7"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1082,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1068,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1067,
												"name": "onlyOwner",
												"nameLocations": [
													"580:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "580:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "580:9:7"
										}
									],
									"name": "mint",
									"nameLocation": "540:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "553:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "545:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1062,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "545:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "565:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "557:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "544:28:7"
									},
									"returnParameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "590:0:7"
									},
									"scope": 1145,
									"src": "531:114:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1107,
										"nodeType": "Block",
										"src": "689:250:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1089,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1086,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "707:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1087,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "711:5:7",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "707:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "302e31",
																"id": 1088,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "720:9:7",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000_by_1",
																	"typeString": "int_const 100000000000000000"
																},
																"value": "0.1"
															},
															"src": "707:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d696e696d756d20707572636861736520697320302e3120455448",
															"id": 1090,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "731:29:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_67506928248065293fd0e6cd746954406197a4dec19736b9aac55321bf2aecea",
																"typeString": "literal_string \"Minimum purchase is 0.1 ETH\""
															},
															"value": "Minimum purchase is 0.1 ETH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_67506928248065293fd0e6cd746954406197a4dec19736b9aac55321bf2aecea",
																"typeString": "literal_string \"Minimum purchase is 0.1 ETH\""
															}
														],
														"id": 1085,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "699:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "699:62:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1092,
												"nodeType": "ExpressionStatement",
												"src": "699:62:7"
											},
											{
												"assignments": [
													1094
												],
												"declarations": [
													{
														"constant": false,
														"id": 1094,
														"mutability": "mutable",
														"name": "tokensToMint",
														"nameLocation": "848:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 1107,
														"src": "840:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1093,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "840:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1100,
												"initialValue": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1098,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1095,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "864:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1096,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "868:5:7",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "864:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1097,
																"name": "TOKENS_PER_ETH",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1043,
																"src": "876:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "864:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1099,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "863:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "840:51:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1102,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "907:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "911:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "907:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1104,
															"name": "tokensToMint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1094,
															"src": "919:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1101,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 725,
														"src": "901:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "901:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1106,
												"nodeType": "ExpressionStatement",
												"src": "901:31:7"
											}
										]
									},
									"functionSelector": "d0febe4c",
									"id": 1108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyTokens",
									"nameLocation": "660:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "669:2:7"
									},
									"returnParameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "689:0:7"
									},
									"scope": 1145,
									"src": "651:288:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1143,
										"nodeType": "Block",
										"src": "1038:221:7",
										"statements": [
											{
												"assignments": [
													1114
												],
												"declarations": [
													{
														"constant": false,
														"id": 1114,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "1056:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1143,
														"src": "1048:15:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1113,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1048:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1120,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 1117,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "1074:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ShoebumxToken_$1145",
																	"typeString": "contract ShoebumxToken"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_ShoebumxToken_$1145",
																	"typeString": "contract ShoebumxToken"
																}
															],
															"id": 1116,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1066:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1115,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1066:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1118,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1066:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1080:7:7",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "1066:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1048:39:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1122,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1114,
																"src": "1105:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1123,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1115:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1105:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2045544820746f207769746864726177",
															"id": 1125,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1118:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95",
																"typeString": "literal_string \"No ETH to withdraw\""
															},
															"value": "No ETH to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95",
																"typeString": "literal_string \"No ETH to withdraw\""
															}
														],
														"id": 1121,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1097:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1097:42:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1127,
												"nodeType": "ExpressionStatement",
												"src": "1097:42:7"
											},
											{
												"assignments": [
													1129,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1129,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1156:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1143,
														"src": "1151:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1128,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1151:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1137,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1135,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1198:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1130,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 67,
																	"src": "1169:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1169:7:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1177:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1169:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1133,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1114,
																"src": "1189:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1169:28:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1169:32:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1150:51:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1139,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1129,
															"src": "1219:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455448207769746864726177616c206661696c6564",
															"id": 1140,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1228:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecbe042ed394ebb1865c6c73030bf8141b916e67a70abf380f65fa81210c79",
																"typeString": "literal_string \"ETH withdrawal failed\""
															},
															"value": "ETH withdrawal failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecbe042ed394ebb1865c6c73030bf8141b916e67a70abf380f65fa81210c79",
																"typeString": "literal_string \"ETH withdrawal failed\""
															}
														],
														"id": 1138,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1211:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1211:41:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1142,
												"nodeType": "ExpressionStatement",
												"src": "1211:41:7"
											}
										]
									},
									"functionSelector": "e086e5ec",
									"id": 1144,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1111,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1110,
												"name": "onlyOwner",
												"nameLocations": [
													"1028:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1028:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1028:9:7"
										}
									],
									"name": "withdrawETH",
									"nameLocation": "1005:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1016:2:7"
									},
									"returnParameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1038:0:7"
									},
									"scope": 1145,
									"src": "996:263:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1146,
							"src": "222:1039:7",
							"usedErrors": [
								13,
								18,
								245,
								250,
								255,
								264,
								269,
								274
							],
							"usedEvents": [
								24,
								897,
								906
							]
						}
					],
					"src": "81:1181:7"
				},
				"id": 7
			}
		}
	}
}